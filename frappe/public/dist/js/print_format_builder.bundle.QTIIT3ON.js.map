{
  "version": 3,
  "sources": ["../../../../../apps/frappe/node_modules/@vue/shared/dist/shared.cjs.js", "../../../../../apps/frappe/node_modules/@vue/shared/index.js", "../../../../../apps/frappe/node_modules/@vue/reactivity/dist/reactivity.cjs.js", "../../../../../apps/frappe/node_modules/@vue/reactivity/index.js", "../../../../../apps/frappe/node_modules/@vue/runtime-core/dist/runtime-core.cjs.js", "../../../../../apps/frappe/node_modules/@vue/runtime-core/index.js", "../../../../../apps/frappe/node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js", "../../../../../apps/frappe/node_modules/@vue/runtime-dom/index.js", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/location.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/credentials.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/module-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/estree.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/context.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/types.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/identifier.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/scopeflags.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/flow/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/base.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/comments.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/whitespace.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/state.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-string-parser/src/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/class-scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/expression-scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/production-parameter.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/util.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/node.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/flow/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/jsx/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/typescript/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/placeholders.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugin-utils.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/options.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/lval.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/expression.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/statement.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/index.ts", "../../../../../apps/frappe/node_modules/source-map/lib/base64.js", "../../../../../apps/frappe/node_modules/source-map/lib/base64-vlq.js", "../../../../../apps/frappe/node_modules/source-map/lib/util.js", "../../../../../apps/frappe/node_modules/source-map/lib/array-set.js", "../../../../../apps/frappe/node_modules/source-map/lib/mapping-list.js", "../../../../../apps/frappe/node_modules/source-map/lib/source-map-generator.js", "../../../../../apps/frappe/node_modules/source-map/lib/binary-search.js", "../../../../../apps/frappe/node_modules/source-map/lib/quick-sort.js", "../../../../../apps/frappe/node_modules/source-map/lib/source-map-consumer.js", "../../../../../apps/frappe/node_modules/source-map/lib/source-node.js", "../../../../../apps/frappe/node_modules/source-map/source-map.js", "../../../../../apps/frappe/node_modules/estree-walker/dist/umd/estree-walker.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/node_modules/@vue/compiler-core/dist/compiler-core.cjs.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/node_modules/@vue/compiler-core/index.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/index.js", "../../../../../apps/frappe/node_modules/vue/dist/vue.cjs.js", "../../../../../apps/frappe/node_modules/vue/index.js", "../../../../../apps/frappe/node_modules/vuedraggable/node_modules/sortablejs/Sortable.min.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/webpack/universalModuleDefinition", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/webpack/bootstrap", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-string-tag-support.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/function-bind-context.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-get-own-property-names-external.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-get-own-property-descriptor.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/ie8-dom-define.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.reduce.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/regexp-exec-abstract.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/web.dom-collections.for-each.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-for-each.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/html.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/a-function.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/check-correctness-of-iteration.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/require-object-coercible.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-method-has-species-support.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-absolute-index.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/export.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-get-own-property-names.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.regexp.to-string.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.string.starts-with.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/engine-v8-version.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/engine-user-agent.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/get-iterator-method.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-define-properties.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/a-possible-prototype.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.string.iterator.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/iterators.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.for-each.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/path.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/indexed-object.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/add-to-unscopables.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/is-regexp.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/native-symbol.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-includes.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.filter.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-from.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.object.entries.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-length.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/has.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.string.replace.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/shared.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/own-keys.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/not-a-regexp.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/create-property-descriptor.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.flat-map.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/string-multibyte.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-species-create.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/internal-state.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/redefine.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-to-array.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.unscopables.flat-map.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-get-own-property-symbols.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/define-well-known-symbol.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/enum-bug-keys.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-object.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-create.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/define-iterator.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/native-weak-map.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/an-object.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/descriptors.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/create-property.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/is-object.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@soda/get-current-script/index.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/inspect-source.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/advance-string-index.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/uid.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/create-non-enumerable-property.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/regexp-exec.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/is-forced.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.concat.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/call-with-safe-iteration-closing.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-define-property.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/create-iterator-constructor.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/regexp-sticky-helpers.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/flatten-into-array.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/external {\"commonjs\":\"sortablejs\",\"commonjs2\":\"sortablejs\",\"amd\":\"sortablejs\",\"root\":\"Sortable\"}", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.splice.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.symbol.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.from.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-method-is-strict.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-integer.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/correct-is-regexp-logic.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.regexp.exec.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/regexp-flags.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-method-uses-to-length.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/iterators-core.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-to-string.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.function.name.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/well-known-symbol.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.object.keys.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-iteration.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-primitive.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/is-pure.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/classof-raw.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/shared-store.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.find-index.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/(webpack)/buildin/global.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.index-of.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-keys-internal.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.includes.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/document-create-element.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/set-global.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/hidden-keys.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/fails.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/get-built-in.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-property-is-enumerable.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.symbol.iterator.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-set-prototype-of.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.object.to-string.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/set-to-string-tag.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/array-reduce.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.map.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/global.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.object.get-own-property-descriptors.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/util/console.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/web.dom-collections.iterator.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-keys.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.symbol.description.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/object-get-prototype-of.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/correct-prototype-getter.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.iterator.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.object.get-own-property-descriptor.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/well-known-symbol-wrapped.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/copy-constructor-properties.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/is-array.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/is-array-iterator-method.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/classof.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/shared-key.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/objectSpread2.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/slicedToArray.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/util/htmlHelper.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/util/string.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/core/sortableEvents.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/util/tags.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/core/componentBuilderHelper.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@babel/runtime/helpers/esm/createClass.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/core/componentStructure.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/core/renderHelper.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/src/vuedraggable.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/@vue/cli-service/lib/commands/build/entry-lib.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/modules/es.array.slice.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/to-indexed-object.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/dom-iterables.js", "../../../../../apps/frappe/node_modules/vuedraggable/dist/webpack:/vuedraggable/node_modules/core-js/internals/use-symbol-as-uid.js", "../../../../../apps/frappe/node_modules/vue/dist/vue.runtime.esm-bundler.js", "frappe/public/js/print_format_builder/PrintFormat.vue", "frappe/public/js/print_format_builder/HTMLEditor.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/HTMLEditor.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/HTMLEditor.vue", "../../../../../apps/frappe/frappe/public/js/print_format_builder/utils.js", "../../../../../apps/frappe/frappe/public/js/print_format_builder/store.js", "frappe/public/js/print_format_builder/LetterHeadEditor.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/LetterHeadEditor.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/LetterHeadEditor.vue", "frappe/public/js/print_format_builder/PrintFormatSection.vue", "frappe/public/js/print_format_builder/ConfigureColumns.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/ConfigureColumns.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/ConfigureColumns.vue", "frappe/public/js/print_format_builder/Field.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Field.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/Field.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatSection.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/PrintFormatSection.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormat.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/PrintFormat.vue", "frappe/public/js/print_format_builder/Preview.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Preview.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/Preview.vue", "frappe/public/js/print_format_builder/PrintFormatControls.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatControls.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/PrintFormatControls.vue", "frappe/public/js/print_format_builder/PrintFormatBuilder.vue", "sfc-template:/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatBuilder.vue?type=template", "../../../../../apps/frappe/frappe/public/js/print_format_builder/PrintFormatBuilder.vue", "../../../../../apps/frappe/frappe/public/js/print_format_builder/print_format_builder.bundle.js"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* PatchFlags.TEXT */]: `TEXT`,\r\n    [2 /* PatchFlags.CLASS */]: `CLASS`,\r\n    [4 /* PatchFlags.STYLE */]: `STYLE`,\r\n    [8 /* PatchFlags.PROPS */]: `PROPS`,\r\n    [16 /* PatchFlags.FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* PatchFlags.HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* PatchFlags.STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* PatchFlags.KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* PatchFlags.UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* PatchFlags.NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* PatchFlags.DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* PatchFlags.HOISTED */]: `HOISTED`,\r\n    [-2 /* PatchFlags.BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* SlotFlags.STABLE */]: 'STABLE',\r\n    [2 /* SlotFlags.DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* SlotFlags.FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isSymbol(a);\r\n    bValidType = isSymbol(b);\r\n    if (aValidType || bValidType) {\r\n        return a === b;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return isString(val)\r\n        ? val\r\n        : val == null\r\n            ? ''\r\n            : isArray(val) ||\r\n                (isObject(val) &&\r\n                    (val.toString === objectToString || !isFunction(val.toString)))\r\n                ? JSON.stringify(val, replacer, 2)\r\n                : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = Object.freeze({})\r\n    ;\r\nconst EMPTY_ARR = Object.freeze([]) ;\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => toTypeString(val) === '[object Date]';\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\r\nfunction genPropsAccessExp(name) {\r\n    return identRE.test(name)\r\n        ? `__props.${name}`\r\n        : `__props[${JSON.stringify(name)}]`;\r\n}\n\nexports.EMPTY_ARR = EMPTY_ARR;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO = NO;\nexports.NOOP = NOOP;\nexports.PatchFlagNames = PatchFlagNames;\nexports.camelize = camelize;\nexports.capitalize = capitalize;\nexports.def = def;\nexports.escapeHtml = escapeHtml;\nexports.escapeHtmlComment = escapeHtmlComment;\nexports.extend = extend;\nexports.genPropsAccessExp = genPropsAccessExp;\nexports.generateCodeFrame = generateCodeFrame;\nexports.getGlobalThis = getGlobalThis;\nexports.hasChanged = hasChanged;\nexports.hasOwn = hasOwn;\nexports.hyphenate = hyphenate;\nexports.includeBooleanAttr = includeBooleanAttr;\nexports.invokeArrayFns = invokeArrayFns;\nexports.isArray = isArray;\nexports.isBooleanAttr = isBooleanAttr;\nexports.isBuiltInDirective = isBuiltInDirective;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isGloballyWhitelisted = isGloballyWhitelisted;\nexports.isHTMLTag = isHTMLTag;\nexports.isIntegerKey = isIntegerKey;\nexports.isKnownHtmlAttr = isKnownHtmlAttr;\nexports.isKnownSvgAttr = isKnownSvgAttr;\nexports.isMap = isMap;\nexports.isModelListener = isModelListener;\nexports.isNoUnitNumericStyleProp = isNoUnitNumericStyleProp;\nexports.isObject = isObject;\nexports.isOn = isOn;\nexports.isPlainObject = isPlainObject;\nexports.isPromise = isPromise;\nexports.isReservedProp = isReservedProp;\nexports.isSSRSafeAttrName = isSSRSafeAttrName;\nexports.isSVGTag = isSVGTag;\nexports.isSet = isSet;\nexports.isSpecialBooleanAttr = isSpecialBooleanAttr;\nexports.isString = isString;\nexports.isSymbol = isSymbol;\nexports.isVoidTag = isVoidTag;\nexports.looseEqual = looseEqual;\nexports.looseIndexOf = looseIndexOf;\nexports.makeMap = makeMap;\nexports.normalizeClass = normalizeClass;\nexports.normalizeProps = normalizeProps;\nexports.normalizeStyle = normalizeStyle;\nexports.objectToString = objectToString;\nexports.parseStringStyle = parseStringStyle;\nexports.propsToAttrMap = propsToAttrMap;\nexports.remove = remove;\nexports.slotFlagsText = slotFlagsText;\nexports.stringifyStyle = stringifyStyle;\nexports.toDisplayString = toDisplayString;\nexports.toHandlerKey = toHandlerKey;\nexports.toNumber = toNumber;\nexports.toRawType = toRawType;\nexports.toTypeString = toTypeString;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/shared.cjs.prod.js')\n} else {\n  module.exports = require('./dist/shared.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\n\nfunction warn(msg, ...args) {\r\n    console.warn(`[Vue warn] ${msg}`, ...args);\r\n}\n\nlet activeEffectScope;\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.active = true;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.effects = [];\r\n        /**\r\n         * @internal\r\n         */\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            const currentEffectScope = activeEffectScope;\r\n            try {\r\n                activeEffectScope = this;\r\n                return fn();\r\n            }\r\n            finally {\r\n                activeEffectScope = currentEffectScope;\r\n            }\r\n        }\r\n        else {\r\n            warn(`cannot run an inactive effect scope.`);\r\n        }\r\n    }\r\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\r\n    on() {\r\n        activeEffectScope = this;\r\n    }\r\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\r\n    off() {\r\n        activeEffectScope = this.parent;\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            let i, l;\r\n            for (i = 0, l = this.effects.length; i < l; i++) {\r\n                this.effects[i].stop();\r\n            }\r\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n                this.cleanups[i]();\r\n            }\r\n            if (this.scopes) {\r\n                for (i = 0, l = this.scopes.length; i < l; i++) {\r\n                    this.scopes[i].stop(true);\r\n                }\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope = activeEffectScope) {\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n    else {\r\n        warn(`onScopeDispose() is called when there is no active effect scope` +\r\n            ` to be associated with.`);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol('iterate' );\r\nconst MAP_KEY_ITERATE_KEY = Symbol('Map key iterate' );\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        this.parent = undefined;\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        let parent = activeEffect;\r\n        let lastShouldTrack = shouldTrack;\r\n        while (parent) {\r\n            if (parent === this) {\r\n                return;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        try {\r\n            this.parent = activeEffect;\r\n            activeEffect = this;\r\n            shouldTrack = true;\r\n            trackOpBit = 1 << ++effectTrackDepth;\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                initDepMarkers(this);\r\n            }\r\n            else {\r\n                cleanupEffect(this);\r\n            }\r\n            return this.fn();\r\n        }\r\n        finally {\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                finalizeDepMarkers(this);\r\n            }\r\n            trackOpBit = 1 << --effectTrackDepth;\r\n            activeEffect = this.parent;\r\n            shouldTrack = lastShouldTrack;\r\n            this.parent = undefined;\r\n            if (this.deferStop) {\r\n                this.stop();\r\n            }\r\n        }\r\n    }\r\n    stop() {\r\n        // stopped while running itself - defer the cleanup\r\n        if (activeEffect === this) {\r\n            this.deferStop = true;\r\n        }\r\n        else if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        shared.extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (shouldTrack && activeEffect) {\r\n        let depsMap = targetMap.get(target);\r\n        if (!depsMap) {\r\n            targetMap.set(target, (depsMap = new Map()));\r\n        }\r\n        let dep = depsMap.get(key);\r\n        if (!dep) {\r\n            depsMap.set(key, (dep = createDep()));\r\n        }\r\n        const eventInfo = { effect: activeEffect, target, type, key }\r\n            ;\r\n        trackEffects(dep, eventInfo);\r\n    }\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if (activeEffect.onTrack) {\r\n            activeEffect.onTrack({\r\n                effect: activeEffect,\r\n                ...debuggerEventExtraInfo\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* TriggerOpTypes.CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && shared.isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* TriggerOpTypes.ADD */:\r\n                if (!shared.isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (shared.isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (shared.isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* TriggerOpTypes.DELETE */:\r\n                if (!shared.isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (shared.isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* TriggerOpTypes.SET */:\r\n                if (shared.isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const eventInfo = { target, type, key, newValue, oldValue, oldTarget }\r\n        ;\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            {\r\n                triggerEffects(deps[0], eventInfo);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        {\r\n            triggerEffects(createDep(effects), eventInfo);\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    const effects = shared.isArray(dep) ? dep : [...dep];\r\n    for (const effect of effects) {\r\n        if (effect.computed) {\r\n            triggerEffect(effect, debuggerEventExtraInfo);\r\n        }\r\n    }\r\n    for (const effect of effects) {\r\n        if (!effect.computed) {\r\n            triggerEffect(effect, debuggerEventExtraInfo);\r\n        }\r\n    }\r\n}\r\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\r\n    if (effect !== activeEffect || effect.allowRecurse) {\r\n        if (effect.onTrigger) {\r\n            effect.onTrigger(shared.extend({ effect }, debuggerEventExtraInfo));\r\n        }\r\n        if (effect.scheduler) {\r\n            effect.scheduler();\r\n        }\r\n        else {\r\n            effect.run();\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ shared.makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(\r\n/*#__PURE__*/\r\nObject.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => Symbol[key])\r\n    .filter(shared.isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* TrackOpTypes.GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */) {\r\n            return shallow;\r\n        }\r\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = shared.isArray(target);\r\n        if (!isReadonly && targetIsArray && shared.hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (shared.isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* TrackOpTypes.GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - skip unwrap for Array + integer key.\r\n            return targetIsArray && shared.isIntegerKey(key) ? res : res.value;\r\n        }\r\n        if (shared.isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n            return false;\r\n        }\r\n        if (!shallow) {\r\n            if (!isShallow(value) && !isReadonly(value)) {\r\n                oldValue = toRaw(oldValue);\r\n                value = toRaw(value);\r\n            }\r\n            if (!shared.isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = shared.isArray(target) && shared.isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : shared.hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\r\n            }\r\n            else if (shared.hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = shared.hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!shared.isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* TrackOpTypes.HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* TrackOpTypes.ITERATE */, shared.isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        {\r\n            warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        {\r\n            warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ shared.extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ shared.extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (!isReadonly) {\r\n        if (key !== rawKey) {\r\n            track(rawTarget, \"get\" /* TrackOpTypes.GET */, key);\r\n        }\r\n        track(rawTarget, \"get\" /* TrackOpTypes.GET */, rawKey);\r\n    }\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (!isReadonly) {\r\n        if (key !== rawKey) {\r\n            track(rawTarget, \"has\" /* TrackOpTypes.HAS */, key);\r\n        }\r\n        track(rawTarget, \"has\" /* TrackOpTypes.HAS */, rawKey);\r\n    }\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\r\n    }\r\n    else if (shared.hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = shared.isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        ;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* TriggerOpTypes.CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = shared.isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${shared.capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* TriggerOpTypes.DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\r\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\r\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(shared.hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = shared.toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* TargetType.COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* TargetType.COLLECTION */;\r\n        default:\r\n            return 0 /* TargetType.INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* ReactiveFlags.SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* TargetType.INVALID */\r\n        : targetTypeMap(shared.toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (isReadonly(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!shared.isObject(target)) {\r\n        {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* ReactiveFlags.RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only specific value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* TargetType.INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* TargetType.COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* ReactiveFlags.RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */]);\r\n}\r\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    shared.def(value, \"__v_skip\" /* ReactiveFlags.SKIP */, true);\r\n    return value;\r\n}\r\nconst toReactive = (value) => shared.isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => shared.isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\r\n    if (shouldTrack && activeEffect) {\r\n        ref = toRaw(ref);\r\n        {\r\n            trackEffects(ref.dep || (ref.dep = createDep()), {\r\n                target: ref,\r\n                type: \"get\" /* TrackOpTypes.GET */,\r\n                key: 'value'\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        {\r\n            triggerEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"set\" /* TriggerOpTypes.SET */,\r\n                key: 'value',\r\n                newValue: newVal\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction isRef(r) {\r\n    return !!(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass RefImpl {\r\n    constructor(value, __v_isShallow) {\r\n        this.__v_isShallow = __v_isShallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = __v_isShallow ? value : toRaw(value);\r\n        this._value = __v_isShallow ? value : toReactive(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\r\n        newVal = useDirectValue ? newVal : toRaw(newVal);\r\n        if (shared.hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = useDirectValue ? newVal : toReactive(newVal);\r\n            triggerRefValue(this, newVal);\r\n        }\r\n    }\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref, ref.value );\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if (!isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = shared.isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key, _defaultValue) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this._defaultValue = _defaultValue;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        const val = this._object[this._key];\r\n        return val === undefined ? this._defaultValue : val;\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key, defaultValue) {\r\n    const val = object[key];\r\n    return isRef(val)\r\n        ? val\r\n        : new ObjectRefImpl(object, key, defaultValue);\r\n}\n\nvar _a;\r\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly, isSSR) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this[_a] = false;\r\n        this._dirty = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this.effect.computed = this;\r\n        this.effect.active = this._cacheable = !isSSR;\r\n        this[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty || !self._cacheable) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\r\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = shared.isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            ;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\r\n    if (debugOptions && !isSSR) {\r\n        cRef.effect.onTrack = debugOptions.onTrack;\r\n        cRef.effect.onTrigger = debugOptions.onTrigger;\r\n    }\r\n    return cRef;\r\n}\n\nvar _a$1;\r\nconst tick = /*#__PURE__*/ Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a$1] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed instanceof DeferredComputedRefImpl) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = this;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a$1 = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexports.EffectScope = EffectScope;\nexports.ITERATE_KEY = ITERATE_KEY;\nexports.ReactiveEffect = ReactiveEffect;\nexports.computed = computed;\nexports.customRef = customRef;\nexports.deferredComputed = deferredComputed;\nexports.effect = effect;\nexports.effectScope = effectScope;\nexports.enableTracking = enableTracking;\nexports.getCurrentScope = getCurrentScope;\nexports.isProxy = isProxy;\nexports.isReactive = isReactive;\nexports.isReadonly = isReadonly;\nexports.isRef = isRef;\nexports.isShallow = isShallow;\nexports.markRaw = markRaw;\nexports.onScopeDispose = onScopeDispose;\nexports.pauseTracking = pauseTracking;\nexports.proxyRefs = proxyRefs;\nexports.reactive = reactive;\nexports.readonly = readonly;\nexports.ref = ref;\nexports.resetTracking = resetTracking;\nexports.shallowReactive = shallowReactive;\nexports.shallowReadonly = shallowReadonly;\nexports.shallowRef = shallowRef;\nexports.stop = stop;\nexports.toRaw = toRaw;\nexports.toRef = toRef;\nexports.toRefs = toRefs;\nexports.track = track;\nexports.trigger = trigger;\nexports.triggerRef = triggerRef;\nexports.unref = unref;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/reactivity.cjs.prod.js')\n} else {\n  module.exports = require('./dist/reactivity.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar reactivity = require('@vue/reactivity');\nvar shared = require('@vue/shared');\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    reactivity.pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* ErrorCodes.APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    reactivity.resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (shared.isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (reactivity.isRef(value)) {\r\n        value = formatProp(key, reactivity.toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (shared.isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = reactivity.toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* LifecycleHooks.SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* LifecycleHooks.BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* LifecycleHooks.CREATED */]: 'created hook',\r\n    [\"bm\" /* LifecycleHooks.BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* LifecycleHooks.MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* LifecycleHooks.BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* LifecycleHooks.UPDATED */]: 'updated',\r\n    [\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* LifecycleHooks.UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* LifecycleHooks.ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* LifecycleHooks.DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* LifecycleHooks.ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* LifecycleHooks.RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* ErrorCodes.SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* ErrorCodes.RENDER_FUNCTION */]: 'render function',\r\n    [2 /* ErrorCodes.WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* ErrorCodes.WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* ErrorCodes.WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* ErrorCodes.NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* ErrorCodes.VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* ErrorCodes.DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* ErrorCodes.TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* ErrorCodes.APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* ErrorCodes.APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* ErrorCodes.FUNCTION_REF */]: 'ref function',\r\n    [13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* ErrorCodes.SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (shared.isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && shared.isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = ErrorTypeStrings[type] ;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* ErrorCodes.APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve();\r\nlet currentFlushPromise = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if (!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    if (!shared.isArray(cb)) {\r\n        if (!activePostFlushCbs ||\r\n            !activePostFlushCbs.includes(cb, cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex)) {\r\n            pendingPostFlushCbs.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingPostFlushCbs.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction flushPreFlushCbs(seen, \r\n// if currently flushing, skip the current job itself\r\ni = isFlushing ? flushIndex + 1 : 0) {\r\n    {\r\n        seen = seen || new Map();\r\n    }\r\n    for (; i < queue.length; i++) {\r\n        const cb = queue[i];\r\n        if (cb && cb.pre) {\r\n            if (checkRecursiveUpdates(seen, cb)) {\r\n                continue;\r\n            }\r\n            queue.splice(i, 1);\r\n            i--;\r\n            cb();\r\n        }\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if (checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nconst comparator = (a, b) => {\r\n    const diff = getId(a) - getId(b);\r\n    if (diff === 0) {\r\n        if (a.pre && !b.pre)\r\n            return -1;\r\n        if (b.pre && !a.pre)\r\n            return 1;\r\n    }\r\n    return diff;\r\n};\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    {\r\n        seen = seen || new Map();\r\n    }\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort(comparator);\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = (job) => checkRecursiveUpdates(seen, job)\r\n        ;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if (true && check(job)) {\r\n                    continue;\r\n                }\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* ErrorCodes.SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\n{\r\n    shared.getGlobalThis().__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, initialDef) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        initialDef: normalizeClassComponent(initialDef),\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // update initial record (for not-yet-rendered component)\r\n    record.initialDef.render = newRender;\r\n    [...record.instances].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // update initial def (for not-yet-rendered components)\r\n    updateComponentDef(record.initialDef, newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record.instances];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            if (oldComp !== record.initialDef) {\r\n                updateComponentDef(oldComp, newComp);\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction updateComponentDef(oldComp, newComp) {\r\n    shared.extend(oldComp, newComp);\r\n    for (const key in oldComp) {\r\n        if (key !== '__file' && !(key in newComp)) {\r\n            delete oldComp[key];\r\n        }\r\n    }\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet buffer = [];\r\nlet devtoolsNotInstalled = false;\r\nfunction emit(event, ...args) {\r\n    if (exports.devtools) {\r\n        exports.devtools.emit(event, ...args);\r\n    }\r\n    else if (!devtoolsNotInstalled) {\r\n        buffer.push({ event, args });\r\n    }\r\n}\r\nfunction setDevtoolsHook(hook, target) {\r\n    var _a, _b;\r\n    exports.devtools = hook;\r\n    if (exports.devtools) {\r\n        exports.devtools.enabled = true;\r\n        buffer.forEach(({ event, args }) => exports.devtools.emit(event, ...args));\r\n        buffer = [];\r\n    }\r\n    else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n        // some envs mock window but not fully\r\n        window.HTMLElement &&\r\n        // also exclude jsdom\r\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\r\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\r\n        replay.push((newHook) => {\r\n            setDevtoolsHook(newHook, target);\r\n        });\r\n        // clear buffer after 3s - the user probably doesn't have devtools installed\r\n        // at all, and keeping the buffer will cause memory leaks (#4738)\r\n        setTimeout(() => {\r\n            if (!exports.devtools) {\r\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\r\n                devtoolsNotInstalled = true;\r\n                buffer = [];\r\n            }\r\n        }, 3000);\r\n    }\r\n    else {\r\n        // non-browser env, assume not installed\r\n        devtoolsNotInstalled = true;\r\n        buffer = [];\r\n    }\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    emit(\"app:init\" /* DevtoolsHooks.APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    emit(\"app:unmount\" /* DevtoolsHooks.APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* DevtoolsHooks.COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* DevtoolsHooks.COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* DevtoolsHooks.COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* DevtoolsHooks.PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* DevtoolsHooks.PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    emit(\"component:emit\" /* DevtoolsHooks.COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\r\n    if (instance.isUnmounted)\r\n        return;\r\n    const props = instance.vnode.props || shared.EMPTY_OBJ;\r\n    {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(shared.toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${shared.toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (shared.isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || shared.EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        if (number) {\r\n            args = rawArgs.map(shared.toNumber);\r\n        }\r\n    }\r\n    {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[shared.toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${shared.hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = shared.toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = shared.toHandlerKey(shared.camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = shared.toHandlerKey(shared.hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (!shared.isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                shared.extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        if (shared.isObject(comp)) {\r\n            cache.set(comp, null);\r\n        }\r\n        return null;\r\n    }\r\n    if (shared.isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        shared.extend(normalized, raw);\r\n    }\r\n    if (shared.isObject(comp)) {\r\n        cache.set(comp, normalized);\r\n    }\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !shared.isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        shared.hasOwn(options, shared.hyphenate(key)) ||\r\n        shared.hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if (true && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, true\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* ErrorCodes.RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    let setRoot = undefined;\r\n    if (result.patchFlag > 0 &&\r\n        result.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */) {\r\n        [root, setRoot] = getChildRoot(result);\r\n    }\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 6 /* ShapeFlags.COMPONENT */)) {\r\n                if (propsOptions && keys.some(shared.isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if (!accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (shared.isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!shared.isModelListener(key)) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        if (!isElementRoot(root)) {\r\n            warn(`Runtime directive used on component with non-element root node. ` +\r\n                `The directives will not function as intended.`);\r\n        }\r\n        // clone before mutating since the root may be a hoisted vnode\r\n        root = cloneVNode(root);\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        if (!isElementRoot(root)) {\r\n            warn(`Component inside <Transition> renders non-element root node ` +\r\n                `that cannot be animated.`);\r\n        }\r\n        root.transition = vnode.transition;\r\n    }\r\n    if (setRoot) {\r\n        setRoot(root);\r\n    }\r\n    else {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || shared.isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 1 /* ShapeFlags.ELEMENT */) ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* PatchFlags.DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PatchFlags.PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (shared.isFunction(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if (!hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = shared.toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (shared.isFunction(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (shared.isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if (!singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (shared.isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the instance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && shared.isFunction(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ({ ...options, flush: 'post' }\r\n        ));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ({ ...options, flush: 'sync' }\r\n        ));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if (!shared.isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = shared.EMPTY_OBJ) {\r\n    if (!cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (reactivity.isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = reactivity.isShallow(source);\r\n    }\r\n    else if (reactivity.isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (shared.isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(s => reactivity.isReactive(s) || reactivity.isShallow(s));\r\n        getter = () => source.map(s => {\r\n            if (reactivity.isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (reactivity.isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (shared.isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* ErrorCodes.WATCH_GETTER */);\r\n            }\r\n            else {\r\n                warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (shared.isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* ErrorCodes.WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [onCleanup]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = shared.NOOP;\r\n        warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onCleanup = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* ErrorCodes.WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    // in SSR there is no need to setup an actual effect, and it should be noop\r\n    // unless it's eager\r\n    if (isInSSRComponentSetup) {\r\n        // we will also not call the invalidate callback (+ runner is not set up)\r\n        onCleanup = shared.NOOP;\r\n        if (!cb) {\r\n            getter();\r\n        }\r\n        else if (immediate) {\r\n            callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\r\n                getter(),\r\n                isMultiSource ? [] : undefined,\r\n                onCleanup\r\n            ]);\r\n        }\r\n        return shared.NOOP;\r\n    }\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i]))\r\n                    : shared.hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onCleanup\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        job.pre = true;\r\n        if (instance)\r\n            job.id = instance.uid;\r\n        scheduler = () => queueJob(job);\r\n    }\r\n    const effect = new reactivity.ReactiveEffect(getter, scheduler);\r\n    {\r\n        effect.onTrack = onTrack;\r\n        effect.onTrigger = onTrigger;\r\n    }\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            shared.remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = shared.isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (shared.isFunction(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!shared.isObject(value) || value[\"__v_skip\" /* ReactiveFlags.SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (reactivity.isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (shared.isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (shared.isSet(value) || shared.isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (shared.isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            let child = children[0];\r\n            if (children.length > 1) {\r\n                let hasFound = false;\r\n                // locate first non-comment child\r\n                for (const c of children) {\r\n                    if (c.type !== Comment) {\r\n                        if (hasFound) {\r\n                            // warn more than one non-comment child\r\n                            warn('<transition> can only be used on a single element or component. ' +\r\n                                'Use <transition-group> for lists.');\r\n                            break;\r\n                        }\r\n                        child = c;\r\n                        hasFound = true;\r\n                    }\r\n                }\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = reactivity.toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if (mode &&\r\n                mode !== 'in-out' &&\r\n                mode !== 'out-in' &&\r\n                mode !== 'default') {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* ErrorCodes.TRANSITION_HOOK */, args);\r\n    };\r\n    const callAsyncHook = (hook, args) => {\r\n        const done = args[1];\r\n        callHook(hook, args);\r\n        if (shared.isArray(hook)) {\r\n            if (hook.every(hook => hook.length <= 1))\r\n                done();\r\n        }\r\n        else if (hook.length <= 1) {\r\n            done();\r\n        }\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                callAsyncHook(hook, [el, done]);\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                callAsyncHook(onLeave, [el, done]);\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        // #5360 inherit parent key in case of <template v-for>\r\n        const key = parentKey == null\r\n            ? child.key\r\n            : String(parentKey) + String(child.key != null ? child.key : i);\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(key != null ? cloneVNode(child, { key }) : child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* PatchFlags.BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return shared.isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (shared.isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    if (!comp) {\r\n                        warn(`Async component loader resolved to undefined. ` +\r\n                            `If you are using retry(), make sure to return its return value.`);\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    if (comp && !shared.isObject(comp) && !shared.isFunction(comp)) {\r\n                        throw new Error(`Invalid async component load result: ${comp}`);\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (isInSSRComponentSetup)) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = reactivity.ref(false);\r\n            const error = reactivity.ref();\r\n            const delayed = reactivity.ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children, shapeFlag }, parent }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return () => {\r\n                const children = slots.default && slots.default();\r\n                return children && children.length === 1 ? children[0] : children;\r\n            };\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* MoveType.ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    shared.invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* MoveType.LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    shared.invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense, true);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return isSuspense(rawVNode.type) ? rawVNode : vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (shared.isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (shared.isString(pattern)) {\r\n        return pattern.split(',').includes(name);\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* LifecycleHooks.ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* LifecycleHooks.DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        shared.remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                reactivity.pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                reactivity.resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else {\r\n        const apiName = shared.toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* LifecycleHooks.SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* LifecycleHooks.BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* LifecycleHooks.MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* LifecycleHooks.BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* LifecycleHooks.UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* LifecycleHooks.UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* LifecycleHooks.SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* LifecycleHooks.RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* LifecycleHooks.ERROR_CAPTURED */, hook, target);\r\n}\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nfunction validateDirectiveName(name) {\r\n    if (shared.isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = getExposeProxy(internalInstance) ||\r\n        internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\r\n        if (shared.isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            reactivity.pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* ErrorCodes.DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            reactivity.resetTracking();\r\n        }\r\n    }\r\n}\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (shared.isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component, false /* do not include inferred name to avoid breaking existing code */);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === shared.camelize(name) ||\r\n                    selfName === shared.capitalize(shared.camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if (warnMissing && !res) {\r\n            const extra = type === COMPONENTS\r\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n                    `component resolution via compilerOptions.isCustomElement.`\r\n                : ``;\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\r\n        }\r\n        return res;\r\n    }\r\n    else {\r\n        warn(`resolve${shared.capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[shared.camelize(name)] ||\r\n            registry[shared.capitalize(shared.camelize(name))]));\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (shared.isArray(source) || shared.isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if (!Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (shared.isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (shared.isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.key\r\n                ? (...args) => {\r\n                    const res = slot.fn(...args);\r\n                    res.key = slot.key;\r\n                    return res;\r\n                }\r\n                : slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE ||\r\n        (currentRenderingInstance.parent &&\r\n            isAsyncWrapper(currentRenderingInstance.parent) &&\r\n            currentRenderingInstance.parent.isCE)) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    if (slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, {\r\n        key: props.key ||\r\n            // slot content array of a dynamic conditional slot may have a branch\r\n            // key attached in the `createSlots` helper, respect that\r\n            (validSlotContent && validSlotContent.key) ||\r\n            `_${name}`\r\n    }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* SlotFlags.STABLE */\r\n        ? 64 /* PatchFlags.STABLE_FRAGMENT */\r\n        : -2 /* PatchFlags.BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj, preserveCaseIfNecessary) {\r\n    const ret = {};\r\n    if (!shared.isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[preserveCaseIfNecessary && /[A-Z]/.test(key)\r\n            ? `on:${key}`\r\n            : shared.toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = \r\n// Move PURE marker to new line to workaround compiler discarding it\r\n// due to type annotation\r\n/*#__PURE__*/ shared.extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (reactivity.shallowReadonly(i.props) ),\r\n    $attrs: i => (reactivity.shallowReadonly(i.attrs) ),\r\n    $slots: i => (reactivity.shallowReadonly(i.slots) ),\r\n    $refs: i => (reactivity.shallowReadonly(i.refs) ),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (resolveMergedOptions(i) ),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy)),\r\n    $watch: i => (instanceWatch.bind(i) )\r\n});\r\nconst isReservedPrefix = (key) => key === '_' || key === '$';\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if (key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if (setupState !== shared.EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            shared.hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 1 /* AccessTypes.SETUP */:\r\n                        return setupState[key];\r\n                    case 2 /* AccessTypes.DATA */:\r\n                        return data[key];\r\n                    case 4 /* AccessTypes.CONTEXT */:\r\n                        return ctx[key];\r\n                    case 3 /* AccessTypes.PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\r\n                accessCache[key] = 1 /* AccessTypes.SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\r\n                accessCache[key] = 2 /* AccessTypes.DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                shared.hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 3 /* AccessTypes.PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\r\n                accessCache[key] = 4 /* AccessTypes.CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (shouldCacheAccess) {\r\n                accessCache[key] = 0 /* AccessTypes.OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                reactivity.track(instance, \"get\" /* TrackOpTypes.GET */, key);\r\n                markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 4 /* AccessTypes.CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            shared.hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if (currentRenderingInstance &&\r\n            (!shared.isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== shared.EMPTY_OBJ && isReservedPrefix(key[0]) && shared.hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n            return true;\r\n        }\r\n        else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\r\n            data[key] = value;\r\n            return true;\r\n        }\r\n        else if (shared.hasOwn(instance.props, key)) {\r\n            warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if (key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (!!accessCache[key] ||\r\n            (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) ||\r\n            (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key)) ||\r\n            shared.hasOwn(ctx, key) ||\r\n            shared.hasOwn(publicPropertiesMap, key) ||\r\n            shared.hasOwn(appContext.config.globalProperties, key));\r\n    },\r\n    defineProperty(target, key, descriptor) {\r\n        if (descriptor.get != null) {\r\n            // invalidate key cache of a getter based property #5417\r\n            target._.accessCache[key] = 0;\r\n        }\r\n        else if (shared.hasOwn(descriptor, 'value')) {\r\n            this.set(target, key, descriptor.value, null);\r\n        }\r\n        return Reflect.defineProperty(target, key, descriptor);\r\n    }\r\n};\r\n{\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ shared.extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !shared.isGloballyWhitelisted(key);\r\n        if (!has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createDevRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: shared.NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: shared.NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(reactivity.toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup) {\r\n            if (isReservedPrefix(key[0])) {\r\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                    `which are reserved prefixes for Vue internals.`);\r\n                return;\r\n            }\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => setupState[key],\r\n                set: shared.NOOP\r\n            });\r\n        }\r\n    });\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* LifecycleHooks.BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = createDuplicateChecker() ;\r\n    {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* OptionTypes.PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (shared.isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                {\r\n                    checkDuplicateProperties(\"Methods\" /* OptionTypes.METHODS */, key);\r\n                }\r\n            }\r\n            else {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if (!shared.isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if (shared.isPromise(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!shared.isObject(data)) {\r\n            warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactivity.reactive(data);\r\n            {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* OptionTypes.DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (!isReservedPrefix(key[0])) {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: shared.NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = shared.isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : shared.isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : shared.NOOP;\r\n            if (get === shared.NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !shared.isFunction(opt) && shared.isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    ;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            {\r\n                checkDuplicateProperties(\"Computed\" /* OptionTypes.COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = shared.isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* LifecycleHooks.CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (shared.isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (shared.isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === shared.NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP, unwrapRef = false) {\r\n    if (shared.isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (shared.isObject(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (reactivity.isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                {\r\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\r\n                        `To opt-in to the new behavior now, ` +\r\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n                        `temporary and will not be needed in the future.)`);\r\n                }\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n        {\r\n            checkDuplicateProperties(\"Inject\" /* OptionTypes.INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(shared.isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (shared.isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (shared.isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (shared.isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (shared.isObject(raw)) {\r\n        if (shared.isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = shared.isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (shared.isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    if (shared.isObject(base)) {\r\n        cache.set(base, resolved);\r\n    }\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (shared.extend)(shared.isFunction(to) ? to.call(this, this) : to, shared.isFunction(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (shared.isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? shared.extend(shared.extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = shared.extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    shared.def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : reactivity.shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction isInHmrContext(instance) {\r\n    while (instance) {\r\n        if (instance.type.__hmrId)\r\n            return true;\r\n        instance = instance.parent;\r\n    }\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = reactivity.toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(isInHmrContext(instance)) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* PatchFlags.FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PatchFlags.PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // skip if the prop key is a declared emit event listener\r\n                if (isEmitListener(instance.emitsOptions, key)) {\r\n                    continue;\r\n                }\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (shared.hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = shared.camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!shared.hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps ||\r\n                    (!shared.hasOwn(rawProps, key) &&\r\n                        (!false ))) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        reactivity.trigger(instance, \"set\" /* TriggerOpTypes.SET */, '$attrs');\r\n    }\r\n    {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (shared.isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && shared.hasOwn(options, (camelKey = shared.camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (!(key in attrs) || value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = reactivity.toRaw(props);\r\n        const castValues = rawCastValues || shared.EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !shared.hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = shared.hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && shared.isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* BooleanFlags.shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* BooleanFlags.shouldCastTrue */] &&\r\n                (value === '' || value === shared.hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (!shared.isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            shared.extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        if (shared.isObject(comp)) {\r\n            cache.set(comp, shared.EMPTY_ARR);\r\n        }\r\n        return shared.EMPTY_ARR;\r\n    }\r\n    if (shared.isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if (!shared.isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = shared.camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = shared.EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if (!shared.isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = shared.camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    shared.isArray(opt) || shared.isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* BooleanFlags.shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* BooleanFlags.shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || shared.hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    if (shared.isObject(comp)) {\r\n        cache.set(comp, res);\r\n    }\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (shared.isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (shared.isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = reactivity.toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !shared.hasOwn(rawProps, key) && !shared.hasOwn(rawProps, shared.hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = shared.isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ shared.makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = shared.isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = shared.isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(shared.capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = shared.toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => shared.isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    if (rawSlot._n) {\r\n        // already normalized - #5353\r\n        return rawSlot;\r\n    }\r\n    const normalized = withCtx((...args) => {\r\n        if (currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (shared.isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if (!isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = reactivity.toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            shared.def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    shared.def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = shared.EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if (isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                shared.extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* SlotFlags.STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                shared.extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* SlotFlags.STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: shared.NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (!shared.isFunction(rootComponent)) {\r\n            rootComponent = { ...rootComponent };\r\n        }\r\n        if (rootProps != null && !shared.isObject(rootProps)) {\r\n            warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && shared.isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (shared.isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if (context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if (context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    // #5571\r\n                    if (rootContainer.__vue_app__) {\r\n                        warn(`There is already an app instance mounted on the host container.\\n` +\r\n                            ` If you want to mount another app on the same host container,` +\r\n                            ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`);\r\n                    }\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n                else {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if (key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\n/**\r\n * Function for handling a template ref\r\n */\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (shared.isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if (!owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === shared.EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (shared.isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (shared.hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (reactivity.isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (shared.isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* ErrorCodes.FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else {\r\n        const _isString = shared.isString(ref);\r\n        const _isRef = reactivity.isRef(ref);\r\n        if (_isString || _isRef) {\r\n            const doSet = () => {\r\n                if (rawRef.f) {\r\n                    const existing = _isString ? refs[ref] : ref.value;\r\n                    if (isUnmount) {\r\n                        shared.isArray(existing) && shared.remove(existing, refValue);\r\n                    }\r\n                    else {\r\n                        if (!shared.isArray(existing)) {\r\n                            if (_isString) {\r\n                                refs[ref] = [refValue];\r\n                                if (shared.hasOwn(setupState, ref)) {\r\n                                    setupState[ref] = refs[ref];\r\n                                }\r\n                            }\r\n                            else {\r\n                                ref.value = [refValue];\r\n                                if (rawRef.k)\r\n                                    refs[rawRef.k] = ref.value;\r\n                            }\r\n                        }\r\n                        else if (!existing.includes(refValue)) {\r\n                            existing.push(refValue);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_isString) {\r\n                    refs[ref] = value;\r\n                    if (shared.hasOwn(setupState, ref)) {\r\n                        setupState[ref] = value;\r\n                    }\r\n                }\r\n                else if (_isRef) {\r\n                    ref.value = value;\r\n                    if (rawRef.k)\r\n                        refs[rawRef.k] = value;\r\n                }\r\n                else {\r\n                    warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n                }\r\n            };\r\n            if (value) {\r\n                doSet.id = -1;\r\n                queuePostRenderEffect(doSet, parentSuspense);\r\n            }\r\n            else {\r\n                doSet();\r\n            }\r\n        }\r\n        else {\r\n            warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n        }\r\n    }\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* DOMNodeTypes.COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, createText, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            container._vnode = vnode;\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag, patchFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        if (patchFlag === -2 /* PatchFlags.BAIL */) {\r\n            optimized = false;\r\n            vnode.dynamicChildren = null;\r\n        }\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* DOMNodeTypes.TEXT */) {\r\n                    // #5728 empty text node inside a slot can cause hydration failure\r\n                    // because the server rendered HTML won't contain a text node\r\n                    if (vnode.children === '') {\r\n                        insert((vnode.el = createText('')), parentNode(node), node);\r\n                        nextNode = node;\r\n                    }\r\n                    else {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* DOMNodeTypes.COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* DOMNodeTypes.ELEMENT */ && domType !== 3 /* DOMNodeTypes.TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children +=\r\n                                nextNode.nodeType === 1 /* DOMNodeTypes.ELEMENT */\r\n                                    ? nextNode.outerHTML\r\n                                    : nextNode.data;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\r\n                    if (domType !== 1 /* DOMNodeTypes.ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #4293 teleport as component root\r\n                    if (nextNode &&\r\n                        isComment(nextNode) &&\r\n                        nextNode.data === 'teleport end') {\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n                    if (domType !== 8 /* DOMNodeTypes.COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        // #5405 in dev, always hydrate children for HMR\r\n        {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* PatchFlags.FULL_PROPS */ | 32 /* PatchFlags.HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (shared.isOn(key) && !shared.isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if (!hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if (!hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* DOMNodeTypes.TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    {\r\n        devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    {\r\n        devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    return supported;\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const target = shared.getGlobalThis();\r\n    target.__VUE__ = true;\r\n    {\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = shared.NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* PatchFlags.BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !shared.isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if (subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* PatchFlags.FULL_PROPS */;\r\n        const oldProps = n1.props || shared.EMPTY_OBJ;\r\n        const newProps = n2.props || shared.EMPTY_OBJ;\r\n        let vnodeHook;\r\n        // disable recurse in beforeUpdate hooks\r\n        parentComponent && toggleRecurse(parentComponent, false);\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        parentComponent && toggleRecurse(parentComponent, true);\r\n        if (isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if (parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* PatchFlags.CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* PatchFlags.STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PatchFlags.PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* PatchFlags.TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 64 /* ShapeFlags.TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (shared.isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== shared.EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!shared.isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (// #5523 dev root fragment may inherit directives\r\n            (isHmrUpdating || patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */)) {\r\n            // HMR updated / Dev root fragment (w/ comments), force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if (parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if (instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                toggleRecurse(instance, false);\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    shared.invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */ ||\r\n                    (parent &&\r\n                        isAsyncWrapper(parent.vnode) &&\r\n                        parent.vnode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */)) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                toggleRecurse(instance, false);\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    shared.invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                // render\r\n                {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = (instance.effect = new reactivity.ReactiveEffect(componentUpdateFn, () => queueJob(update), instance.scope // track it in component's effect scope\r\n        ));\r\n        const update = (instance.update = () => effect.run());\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        toggleRecurse(instance, true);\r\n        {\r\n            effect.onTrack = instance.rtc\r\n                ? e => shared.invokeArrayFns(instance.rtc, e)\r\n                : void 0;\r\n            effect.onTrigger = instance.rtg\r\n                ? e => shared.invokeArrayFns(instance.rtg, e)\r\n                : void 0;\r\n            update.ownerInstance = instance;\r\n        }\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        reactivity.pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs();\r\n        reactivity.resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* PatchFlags.UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || shared.EMPTY_ARR;\r\n        c2 = c2 || shared.EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if (keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : shared.EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* MoveType.REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* MoveType.REORDER */ &&\r\n            shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* MoveType.ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ShapeFlags.ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* PatchFlags.KEYED_FRAGMENT */ | 256 /* PatchFlags.UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            if (vnode.patchFlag > 0 &&\r\n                vnode.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */ &&\r\n                transition &&\r\n                !transition.persisted) {\r\n                vnode.children.forEach(child => {\r\n                    if (child.type === Comment) {\r\n                        hostRemove(child.el);\r\n                    }\r\n                    else {\r\n                        remove(child);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                removeFragment(el, anchor);\r\n            }\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if (instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            shared.invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPreFlushCbs();\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction toggleRecurse({ effect, update }, allowed) {\r\n    effect.allowRecurse = update.allowRecurse = allowed;\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (shared.isArray(ch1) && shared.isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ShapeFlags.ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if (c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (shared.isString(targetSelector)) {\r\n        if (!select) {\r\n            warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if (!targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if (isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = createComment('teleport start')\r\n                );\r\n            const mainAnchor = (n2.anchor = createComment('teleport end')\r\n                );\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if (!disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TeleportMoveTypes.TARGET_CHANGE */);\r\n                    }\r\n                    else {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* TeleportMoveTypes.REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TeleportMoveTypes.TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* TeleportMoveTypes.REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* MoveType.REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                // lookahead until we find the target anchor\r\n                // we cannot rely on return value of hydrateChildren() because there\r\n                // could be nested teleports\r\n                let targetAnchor = targetNode;\r\n                while (targetAnchor) {\r\n                    targetAnchor = nextSibling(targetAnchor);\r\n                    if (targetAnchor &&\r\n                        targetAnchor.nodeType === 8 &&\r\n                        targetAnchor.data === 'teleport anchor') {\r\n                        vnode.targetAnchor = targetAnchor;\r\n                        target._lpa =\r\n                            vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n                        break;\r\n                    }\r\n                }\r\n                hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst Fragment = Symbol('Fragment' );\r\nconst Text = Symbol('Text' );\r\nconst Comment = Symbol('Comment' );\r\nconst Static = Symbol('Static' );\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if (n2.shapeFlag & 6 /* ShapeFlags.COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\r\n    return (ref != null\r\n        ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ShapeFlags.ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= shared.isString(children)\r\n            ? 8 /* ShapeFlags.TEXT_CHILDREN */\r\n            : 16 /* ShapeFlags.ARRAY_CHILDREN */;\r\n    }\r\n    // validate key\r\n    if (vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* ShapeFlags.COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* PatchFlags.HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = (createVNodeWithArgsTransform );\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if (!type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n            if (cloned.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n                currentBlock[currentBlock.indexOf(type)] = cloned;\r\n            }\r\n            else {\r\n                currentBlock.push(cloned);\r\n            }\r\n        }\r\n        cloned.patchFlag |= -2 /* PatchFlags.BAIL */;\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !shared.isString(klass)) {\r\n            props.class = shared.normalizeClass(klass);\r\n        }\r\n        if (shared.isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (reactivity.isProxy(style) && !shared.isArray(style)) {\r\n                style = shared.extend({}, style);\r\n            }\r\n            props.style = shared.normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = shared.isString(type)\r\n        ? 1 /* ShapeFlags.ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* ShapeFlags.SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* ShapeFlags.TELEPORT */\r\n                : shared.isObject(type)\r\n                    ? 4 /* ShapeFlags.STATEFUL_COMPONENT */\r\n                    : shared.isFunction(type)\r\n                        ? 2 /* ShapeFlags.FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if (shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */ && reactivity.isProxy(type)) {\r\n        type = reactivity.toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return reactivity.isProxy(props) || InternalObjectKey in props\r\n        ? shared.extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? shared.isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: patchFlag === -1 /* PatchFlags.HOISTED */ && shared.isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: preserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* PatchFlags.FULL_PROPS */\r\n                : patchFlag | 16 /* PatchFlags.FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (shared.isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (shared.isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (shared.isArray(children)) {\r\n        type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 64 /* ShapeFlags.TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* SlotFlags.FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* SlotFlags.STABLE */) {\r\n                    children._ = 1 /* SlotFlags.STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* SlotFlags.DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (shared.isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n            type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* ShapeFlags.TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = shared.normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (shared.isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (incoming &&\r\n                    existing !== incoming &&\r\n                    !(shared.isArray(existing) && existing.includes(incoming))) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* ErrorCodes.VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        effect: null,\r\n        update: null,\r\n        scope: new reactivity.EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resolved assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: shared.EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: shared.EMPTY_OBJ,\r\n        data: shared.EMPTY_OBJ,\r\n        props: shared.EMPTY_OBJ,\r\n        attrs: shared.EMPTY_OBJ,\r\n        slots: shared.EMPTY_OBJ,\r\n        refs: shared.EMPTY_OBJ,\r\n        setupState: shared.EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    {\r\n        instance.ctx = createDevRenderContext(instance);\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit$1.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ shared.makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || shared.NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    var _a;\r\n    const Component = instance.type;\r\n    {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = reactivity.markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        reactivity.pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* ErrorCodes.SETUP_FUNCTION */, [reactivity.shallowReadonly(instance.props) , setupContext]);\r\n        reactivity.resetTracking();\r\n        unsetCurrentInstance();\r\n        if (shared.isPromise(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n                if (!instance.suspense) {\r\n                    const name = (_a = Component.name) !== null && _a !== void 0 ? _a : 'Anonymous';\r\n                    warn(`Component <${name}>: setup function returned a promise, but no ` +\r\n                        `<Suspense> boundary was found in the parent component tree. ` +\r\n                        `A component with async setup() must be nested in a <Suspense> ` +\r\n                        `in order to be rendered.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (shared.isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        if (instance.type.__ssrInlineRender) {\r\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n            // set it as ssrRender instead.\r\n            instance.ssrRender = setupResult;\r\n        }\r\n        else {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (shared.isObject(setupResult)) {\r\n        if (isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = reactivity.proxyRefs(setupResult);\r\n        {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if (setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    // could be already set when returned from setup()\r\n    if (!instance.render) {\r\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n        // is done by server-renderer\r\n        if (!isSSR && compile && !Component.render) {\r\n            const template = Component.template ||\r\n                resolveMergedOptions(instance).template;\r\n            if (template) {\r\n                {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = shared.extend(shared.extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || shared.NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        setCurrentInstance(instance);\r\n        reactivity.pauseTracking();\r\n        applyOptions(instance);\r\n        reactivity.resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if (!Component.render && instance.render === shared.NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (``) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, {\r\n            get(target, key) {\r\n                markAttrsAccessed();\r\n                reactivity.track(instance, \"get\" /* TrackOpTypes.GET */, '$attrs');\r\n                return target[key];\r\n            },\r\n            set() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            },\r\n            deleteProperty() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            }\r\n        }\r\n        );\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if (instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            get slots() {\r\n                return reactivity.shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component, includeInferred = true) {\r\n    return shared.isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name || (includeInferred && Component.__name);\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return shared.isFunction(value) && '__vccOpts' in value;\r\n}\n\nconst computed = ((getterOrOptions, debugOptions) => {\r\n    // @ts-ignore\r\n    return reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\r\n});\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if (!i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(raw, defaults) {\r\n    const props = shared.isArray(raw)\r\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\r\n        : raw;\r\n    for (const key in defaults) {\r\n        const opt = props[key];\r\n        if (opt) {\r\n            if (shared.isArray(opt) || shared.isFunction(opt)) {\r\n                props[key] = { type: opt, default: defaults[key] };\r\n            }\r\n            else {\r\n                opt.default = defaults[key];\r\n            }\r\n        }\r\n        else if (opt === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nfunction createPropsRestProxy(props, excludedKeys) {\r\n    const ret = {};\r\n    for (const key in props) {\r\n        if (!excludedKeys.includes(key)) {\r\n            Object.defineProperty(ret, key, {\r\n                enumerable: true,\r\n                get: () => props[key]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    if (!ctx) {\r\n        warn(`withAsyncContext called without active current instance. ` +\r\n            `This is likely a bug.`);\r\n    }\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (shared.isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol(`ssrContext` );\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\r\n}\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!shared.isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (reactivity.isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (reactivity.isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${reactivity.isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (reactivity.isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', reactivity.toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== shared.EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== shared.EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', reactivity.toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = shared.extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (shared.isObject(v)) {\r\n            return ['object', { object: asRaw ? reactivity.toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (shared.isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((shared.isArray(opts) && opts.includes(key)) ||\r\n            (shared.isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (isShallow(v)) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (shared.hasChanged(prev[i], memo[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.39\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.Comment = Comment;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineProps = defineProps;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-core.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar runtimeCore = require('@vue/runtime-core');\nvar shared = require('@vue/shared');\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template');\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        // #5308 can only take cached path if:\r\n        // - has a single root node\r\n        // - nextSibling info is still available\r\n        if (start && (start === end || start.nextSibling)) {\r\n            // cached\r\n            while (true) {\r\n                parent.insertBefore(start.cloneNode(true), anchor);\r\n                if (start === end || !(start = start.nextSibling))\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // fresh insert\r\n            templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            const template = templateContainer.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            parent.insertBefore(template, anchor);\r\n        }\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    const isCssString = shared.isString(next);\r\n    if (next && !isCssString) {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !shared.isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const currentDisplay = style.display;\r\n        if (isCssString) {\r\n            if (prev !== next) {\r\n                style.cssText = next;\r\n            }\r\n        }\r\n        else if (prev) {\r\n            el.removeAttribute('style');\r\n        }\r\n        // indicates that the `display` of the element is controlled by `v-show`,\r\n        // so we always keep the current `display` value regardless of the `style`\r\n        // value, thus handing over control to `v-show`.\r\n        if ('_vod' in el) {\r\n            style.display = currentDisplay;\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (shared.isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (val == null)\r\n            val = '';\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(shared.hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = runtimeCore.camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = shared.capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = shared.isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && !shared.includeBooleanAttr(value))) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' &&\r\n        el.tagName !== 'PROGRESS' &&\r\n        // custom elements may use _value internally\r\n        !el.tagName.includes('-')) {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue ||\r\n            // #4956: always set for OPTION elements because its value falls back to\r\n            // textContent if no value attribute is present. And setting .value for\r\n            // OPTION has no side effect\r\n            el.tagName === 'OPTION') {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    let needRemove = false;\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            value = shared.includeBooleanAttr(value);\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            value = '';\r\n            needRemove = true;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            value = 0;\r\n            needRemove = true;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw,\r\n    // some properties has getter, no setter, will error in 'use strict'\r\n    // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        {\r\n            runtimeCore.warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n    needRemove && el.removeAttribute(key);\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/ (() => {\r\n    let _getNow = Date.now;\r\n    let skipTimestampCheck = false;\r\n    if (typeof window !== 'undefined') {\r\n        // Determine what event timestamp the browser is using. Annoyingly, the\r\n        // timestamp can either be hi-res (relative to page load) or low-res\r\n        // (relative to UNIX epoch), so in order to compare time we have to use the\r\n        // same timestamp type when saving the flush timestamp.\r\n        if (Date.now() > document.createEvent('Event').timeStamp) {\r\n            // if the low-res timestamp which is bigger than the event timestamp\r\n            // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n            // and we need to use the hi-res version for event listeners as well.\r\n            _getNow = performance.now.bind(performance);\r\n        }\r\n        // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n        // and does not fire microtasks in between event propagation, so safe to exclude.\r\n        const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n        skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n    }\r\n    return [_getNow, skipTimestampCheck];\r\n})();\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = /*#__PURE__*/ Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    const event = name[2] === ':' ? name.slice(3) : shared.hyphenate(name.slice(2));\r\n    return [event, options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            runtimeCore.callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* ErrorCodes.NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (shared.isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue, isSVG);\r\n    }\r\n    else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue);\r\n    }\r\n    else if (shared.isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!shared.isModelListener(key)) {\r\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n        }\r\n    }\r\n    else if (key[0] === '.'\r\n        ? ((key = key.slice(1)), true)\r\n        : key[0] === '^'\r\n            ? ((key = key.slice(1)), false)\r\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n    }\r\n    else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n            el._trueValue = nextValue;\r\n        }\r\n        else if (key === 'false-value') {\r\n            el._falseValue = nextValue;\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG);\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML & textContent\r\n        if (key === 'innerHTML' || key === 'textContent') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && shared.isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // these are enumerated attrs, however their corresponding DOM properties\r\n    // are actually booleans - this leads to setting it with a string \"false\"\r\n    // value leading it to be coerced to `true`, so we need to always treat\r\n    // them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && shared.isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction defineCustomElement(options, hydrate) {\r\n    const Comp = runtimeCore.defineComponent(options);\r\n    class VueCustomElement extends VueElement {\r\n        constructor(initialProps) {\r\n            super(Comp, initialProps, hydrate);\r\n        }\r\n    }\r\n    VueCustomElement.def = Comp;\r\n    return VueCustomElement;\r\n}\r\nconst defineSSRCustomElement = ((options) => {\r\n    // @ts-ignore\r\n    return defineCustomElement(options, hydrate);\r\n});\r\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\r\n});\r\nclass VueElement extends BaseClass {\r\n    constructor(_def, _props = {}, hydrate) {\r\n        super();\r\n        this._def = _def;\r\n        this._props = _props;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._instance = null;\r\n        this._connected = false;\r\n        this._resolved = false;\r\n        this._numberProps = null;\r\n        if (this.shadowRoot && hydrate) {\r\n            hydrate(this._createVNode(), this.shadowRoot);\r\n        }\r\n        else {\r\n            if (this.shadowRoot) {\r\n                runtimeCore.warn(`Custom element has pre-rendered declarative shadow root but is not ` +\r\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\r\n            }\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this._connected = true;\r\n        if (!this._instance) {\r\n            this._resolveDef();\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        this._connected = false;\r\n        runtimeCore.nextTick(() => {\r\n            if (!this._connected) {\r\n                render(null, this.shadowRoot);\r\n                this._instance = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * resolve inner component definition (handle possible async component)\r\n     */\r\n    _resolveDef() {\r\n        if (this._resolved) {\r\n            return;\r\n        }\r\n        this._resolved = true;\r\n        // set initial attrs\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            this._setAttr(this.attributes[i].name);\r\n        }\r\n        // watch future attr changes\r\n        new MutationObserver(mutations => {\r\n            for (const m of mutations) {\r\n                this._setAttr(m.attributeName);\r\n            }\r\n        }).observe(this, { attributes: true });\r\n        const resolve = (def) => {\r\n            const { props, styles } = def;\r\n            const hasOptions = !shared.isArray(props);\r\n            const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : [];\r\n            // cast Number-type props set before resolve\r\n            let numberProps;\r\n            if (hasOptions) {\r\n                for (const key in this._props) {\r\n                    const opt = props[key];\r\n                    if (opt === Number || (opt && opt.type === Number)) {\r\n                        this._props[key] = shared.toNumber(this._props[key]);\r\n                        (numberProps || (numberProps = Object.create(null)))[key] = true;\r\n                    }\r\n                }\r\n            }\r\n            this._numberProps = numberProps;\r\n            // check if there are props set pre-upgrade or connect\r\n            for (const key of Object.keys(this)) {\r\n                if (key[0] !== '_') {\r\n                    this._setProp(key, this[key], true, false);\r\n                }\r\n            }\r\n            // defining getter/setters on prototype\r\n            for (const key of rawKeys.map(shared.camelize)) {\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        return this._getProp(key);\r\n                    },\r\n                    set(val) {\r\n                        this._setProp(key, val);\r\n                    }\r\n                });\r\n            }\r\n            // apply CSS\r\n            this._applyStyles(styles);\r\n            // initial render\r\n            this._update();\r\n        };\r\n        const asyncDef = this._def.__asyncLoader;\r\n        if (asyncDef) {\r\n            asyncDef().then(resolve);\r\n        }\r\n        else {\r\n            resolve(this._def);\r\n        }\r\n    }\r\n    _setAttr(key) {\r\n        let value = this.getAttribute(key);\r\n        if (this._numberProps && this._numberProps[key]) {\r\n            value = shared.toNumber(value);\r\n        }\r\n        this._setProp(shared.camelize(key), value, false);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _getProp(key) {\r\n        return this._props[key];\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\r\n        if (val !== this._props[key]) {\r\n            this._props[key] = val;\r\n            if (shouldUpdate && this._instance) {\r\n                this._update();\r\n            }\r\n            // reflect\r\n            if (shouldReflect) {\r\n                if (val === true) {\r\n                    this.setAttribute(shared.hyphenate(key), '');\r\n                }\r\n                else if (typeof val === 'string' || typeof val === 'number') {\r\n                    this.setAttribute(shared.hyphenate(key), val + '');\r\n                }\r\n                else if (!val) {\r\n                    this.removeAttribute(shared.hyphenate(key));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _update() {\r\n        render(this._createVNode(), this.shadowRoot);\r\n    }\r\n    _createVNode() {\r\n        const vnode = runtimeCore.createVNode(this._def, shared.extend({}, this._props));\r\n        if (!this._instance) {\r\n            vnode.ce = instance => {\r\n                this._instance = instance;\r\n                instance.isCE = true;\r\n                // HMR\r\n                {\r\n                    instance.ceReload = newStyles => {\r\n                        // always reset styles\r\n                        if (this._styles) {\r\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\r\n                            this._styles.length = 0;\r\n                        }\r\n                        this._applyStyles(newStyles);\r\n                        // if this is an async component, ceReload is called from the inner\r\n                        // component so no need to reload the async wrapper\r\n                        if (!this._def.__asyncLoader) {\r\n                            // reload\r\n                            this._instance = null;\r\n                            this._update();\r\n                        }\r\n                    };\r\n                }\r\n                // intercept emit\r\n                instance.emit = (event, ...args) => {\r\n                    this.dispatchEvent(new CustomEvent(event, {\r\n                        detail: args\r\n                    }));\r\n                };\r\n                // locate nearest Vue custom element parent for provide/inject\r\n                let parent = this;\r\n                while ((parent =\r\n                    parent && (parent.parentNode || parent.host))) {\r\n                    if (parent instanceof VueElement) {\r\n                        instance.parent = parent._instance;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        return vnode;\r\n    }\r\n    _applyStyles(styles) {\r\n        if (styles) {\r\n            styles.forEach(css => {\r\n                const s = document.createElement('style');\r\n                s.textContent = css;\r\n                this.shadowRoot.appendChild(s);\r\n                // record for HMR\r\n                {\r\n                    (this._styles || (this._styles = [])).push(s);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = runtimeCore.getCurrentInstance();\r\n        if (!instance) {\r\n            runtimeCore.warn(`useCssModule must be called inside setup()`);\r\n            return shared.EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            runtimeCore.warn(`Current instance does not have CSS modules injected.`);\r\n            return shared.EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            runtimeCore.warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return shared.EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    return;\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => runtimeCore.h(runtimeCore.BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props =\r\n    /*#__PURE__*/ shared.extend({}, runtimeCore.BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (shared.isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? shared.isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        el._isLeaving = false;\r\n        removeTransitionClass(el, leaveFromClass);\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return shared.extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            el._isLeaving = true;\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                if (!el._isLeaving) {\r\n                    // cancelled\r\n                    return;\r\n                }\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (shared.isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = shared.toNumber(val);\r\n    validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        runtimeCore.warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        runtimeCore.warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ shared.extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = runtimeCore.getCurrentInstance();\r\n        const state = runtimeCore.useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        runtimeCore.onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = runtimeCore.toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || runtimeCore.Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? runtimeCore.getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    runtimeCore.setTransitionHooks(child, runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else {\r\n                    runtimeCore.warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    runtimeCore.setTransitionHooks(child, runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return runtimeCore.createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1 ? root : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'] ||\r\n        (false );\r\n    return shared.isArray(fn) ? value => shared.invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        target.dispatchEvent(new Event('input'));\r\n    }\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            if (castToNumber) {\r\n                domValue = shared.toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el && el.type !== 'range') {\r\n            if (lazy) {\r\n                return;\r\n            }\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && shared.toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (shared.isArray(modelValue)) {\r\n                const index = shared.looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (shared.isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (shared.isArray(value)) {\r\n        el.checked = shared.looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (shared.isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = shared.looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = shared.looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = shared.looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = shared.isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? shared.toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !shared.isArray(value) && !shared.isSet(value)) {\r\n        runtimeCore.warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (shared.isArray(value)) {\r\n                option.selected = shared.looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (shared.looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction resolveDynamicModel(tagName, type) {\r\n    switch (tagName) {\r\n        case 'SELECT':\r\n            return vModelSelect;\r\n        case 'TEXTAREA':\r\n            return vModelText;\r\n        default:\r\n            switch (type) {\r\n                case 'checkbox':\r\n                    return vModelCheckbox;\r\n                case 'radio':\r\n                    return vModelRadio;\r\n                default:\r\n                    return vModelText;\r\n            }\r\n    }\r\n}\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    const modelToUse = resolveDynamicModel(el.tagName, vnode.props && vnode.props.type);\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVModelForSSR() {\r\n    vModelText.getSSRProps = ({ value }) => ({ value });\r\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n        if (vnode.props && shared.looseEqual(vnode.props.value, value)) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n        if (shared.isArray(value)) {\r\n            if (vnode.props && shared.looseIndexOf(value, vnode.props.value) > -1) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (shared.isSet(value)) {\r\n            if (vnode.props && value.has(vnode.props.value)) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (value) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelDynamic.getSSRProps = (binding, vnode) => {\r\n        if (typeof vnode.type !== 'string') {\r\n            return;\r\n        }\r\n        const modelToUse = resolveDynamicModel(\r\n        // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n        vnode.type.toUpperCase(), vnode.props && vnode.props.type);\r\n        if (modelToUse.getSSRProps) {\r\n            return modelToUse.getSSRProps(binding, vnode);\r\n        }\r\n    };\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = shared.hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVShowForSSR() {\r\n    vShow.getSSRProps = ({ value }) => {\r\n        if (!value) {\r\n            return { style: { display: 'none' } };\r\n        }\r\n    };\r\n}\n\nconst rendererOptions = /*#__PURE__*/ shared.extend({ patchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return (renderer ||\r\n        (renderer = runtimeCore.createRenderer(rendererOptions)));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : runtimeCore.createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!shared.isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => shared.isHTMLTag(tag) || shared.isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (runtimeCore.isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                runtimeCore.warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                runtimeCore.warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                runtimeCore.warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (shared.isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if (!res) {\r\n            runtimeCore.warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if (window.ShadowRoot &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        runtimeCore.warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\r\nlet ssrDirectiveInitialized = false;\r\n/**\r\n * @internal\r\n */\r\nconst initDirectivesForSSR = () => {\r\n        if (!ssrDirectiveInitialized) {\r\n            ssrDirectiveInitialized = true;\r\n            initVModelForSSR();\r\n            initVShowForSSR();\r\n        }\r\n    }\r\n    ;\n\nObject.keys(runtimeCore).forEach(function (k) {\n  if (k !== 'default') exports[k] = runtimeCore[k];\n});\nexports.Transition = Transition;\nexports.TransitionGroup = TransitionGroup;\nexports.VueElement = VueElement;\nexports.createApp = createApp;\nexports.createSSRApp = createSSRApp;\nexports.defineCustomElement = defineCustomElement;\nexports.defineSSRCustomElement = defineSSRCustomElement;\nexports.hydrate = hydrate;\nexports.initDirectivesForSSR = initDirectivesForSSR;\nexports.render = render;\nexports.useCssModule = useCssModule;\nexports.useCssVars = useCssVars;\nexports.vModelCheckbox = vModelCheckbox;\nexports.vModelDynamic = vModelDynamic;\nexports.vModelRadio = vModelRadio;\nexports.vModelSelect = vModelSelect;\nexports.vModelText = vModelText;\nexports.vShow = vShow;\nexports.withKeys = withKeys;\nexports.withModifiers = withModifiers;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-dom.cjs.js')\n}\n", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n", "import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n", "export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n", "import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparanthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparanthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with \u201CPipeline\u201D or \u201CPrimaryTopic\u201D\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n", "import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync?: boolean | null,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(unfinished: Undone<N.AnyExport>) {\n      const node = super.parseExport(unfinished);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node as N.AnyExport;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the \u201Cargument\u201D subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = {\n  [name: string]: TokenType;\n};\n\nexport const tt: InternalTokenTypes = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b0000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b0000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b0000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b0001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b0010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b0100000_0000_00,\n             BIND_FLAGS_TS_IMPORT       = 0b1000000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM    | BIND_FLAGS_TS_CONST_ENUM                                 ,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0                   | BIND_FLAGS_TS_EXPORT_ONLY,\n             BIND_TS_TYPE_IMPORT= 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_TS_IMPORT,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport type * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlags {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin\u2019s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number;\n  end: number;\n  comments: Array<Comment>;\n  leadingNode: Node | null;\n  trailingNode: Node | null;\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Undone<Node>} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport type { Errors } from \"../parse-error\";\nimport { type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine,\n      } = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      ));\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return { pos, str: out, containsInvalid, lineStart, curLine };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport type * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, containsInvalid, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        containsInvalid ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        containsInvalid ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport type { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport type Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = number;\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return ((isAsync ? PARAM_AWAIT : 0) |\n    (isGenerator ? PARAM_YIELD : 0)) as ParamKind;\n}\n", "import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport type State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\nimport type ScopeHandler from \"../util/scope\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  // TODO\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length] as ParseError<any>,\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(pos: number, loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: Undone<N.FlowDeclare>,\n      isClass: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(\n          startPos,\n          startLoc,\n        );\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context?: string | null, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      allowModifiers?: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(\n        startPos,\n        startLoc,\n      );\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport type { TokContext } from \"../../tokenizer/context\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startPos,\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(\n                  this.jsxParseSpreadChild(node as Undone<N.JSXSpreadChild>),\n                );\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(\n                    node as Undone<N.JSXExpressionContainer>,\n                    tc.j_expr,\n                  ),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n  BIND_FLAGS_TS_IMPORT,\n  SCOPE_TS_MODULE,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\nimport { Errors } from \"../../parse-error\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: number): void {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_TS_TYPE_IMPORT,\n  BIND_CLASS,\n  BIND_NONE,\n  BIND_FLAGS_TS_IMPORT,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\nimport type { Pattern } from \"../../types\";\nimport type { Expression } from \"../../types\";\nimport type { IJSXParserMixin } from \"../jsx\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  CannotFindName: ({ name }: { name: string }) => `Cannot find name '${name}'.`,\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: ModifierBase;\n      allowedModifiers: readonly TsModifier[];\n      disallowedModifiers?: TsModifier[];\n      stopOnStartOfClassStaticBlock?: boolean;\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any;\n    }): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: Undone<N.TsTypeParameter>,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): N.TsTypeReference | undefined | null {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      return super\n        .parseBindingList(tt.parenR, charCodes.rightParenthesis)\n        .map(pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return pattern as any;\n        });\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined | null {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type: N.TsType | N.TsNamedTupleMember = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = type.typeName as N.Identifier;\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      // @ts-expect-error refine typings\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return super.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate as N.TsThisType;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate as N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation():\n      | N.TsTypeAnnotation\n      | undefined\n      | null {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined | null {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): N.TsType | undefined | null {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined | null {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | undefined | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined | null {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\" as const;\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return super.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined | null {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n    ): N.Declaration | undefined | null {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node as Undone<N.TsModuleDeclaration>;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined | null =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(\n            startPos,\n            startLoc,\n          );\n          node.typeParameters = this.tsParseTypeParameters();\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: boolean | undefined | null,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: N.Accessibility | undefined | null;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified: ModifierBase = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression = this.startNodeAt<N.TsNonNullExpression>(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node = this.startNodeAt<N.TsAsExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: Undone<N.Node>): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      context?: string | null,\n      topLevel?: boolean | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(\n            classBody,\n            member as any as N.StaticBlock,\n          );\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n      }\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: typeof charCodes[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          node as N.ClassDeclaration,\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type { BindingTypes } from \"../util/scopeflags\";\nimport type { Position } from \"../util/location\";\n\ntype PossiblePlaceholedrs = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholedrs;\n\ntype NodeOf<T extends keyof PossiblePlaceholedrs> = PossiblePlaceholedrs[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context?: string | null): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport type { ExpressionErrors } from \"../parser/util\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function\u2019s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startPos: number | null,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: typeof charCodes[keyof typeof charCodes],\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): Array<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    allowModifiers: boolean | undefined | null,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startPos?: number | null,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      allowingSloppyLetBinding?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          // @ts-expect-error: refine types\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: typeof charCodes[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts \u2014 that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport type { ParamKind } from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\nimport type { SourceType } from \"../options\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(\n    node: N.Function,\n    allowModifiers?: boolean,\n  ): void;\n  abstract takeDecorators(node: N.HasDecorators): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(\n          finishedNode,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startPos,\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startPos, startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode<N.Class>();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that \u201Ctopic token\u201D.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the \u201Ctopic token\u201D, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token\u2019s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin\u2019s configuration matches the current token\u2019s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin\u2019s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin\u2019s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin\u2019s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin\u2019s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin\u2019s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration\u2019s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(\n      startPos,\n      startLoc,\n    );\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(\n        innerStartPos,\n        innerStartLoc,\n      );\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startPos,\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt<N.ParenthesizedExpression>(\n      startPos,\n      startLoc,\n    );\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startPos: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(\n    node: N.BodilessFunctionOrMethodBase,\n    isAsync?: boolean | null,\n  ): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead \u2260 {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        (this.prodParam.currentFlags() | PARAM_RETURN) as ParamKind,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been gaurded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(\n    this: Parser,\n    startPos: number,\n    startLoc: Position,\n  ): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(\n        startPos,\n        startLoc,\n      );\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(\n        startPos,\n        startLoc,\n      );\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser\u2019s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport type { Position } from \"../util/location\";\nimport { createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context?: string | null): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context?: string | null): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean,\n  ): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean | null,\n  ): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !context,\n        );\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node as Undone<N.ClassDeclaration>, true);\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !context,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        context,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    context?: string | null,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\",\n  ): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    statement: number = FUNC_NO_FLAGS,\n    isAsync: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowModifiers?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(\n        node as Undone<N.ExportNamedDeclaration>,\n        true,\n        false,\n        !!(node as Undone<N.ExportNamedDeclaration>).source,\n      );\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      (node as Undone<N.ExportDefaultDeclaration>).declaration =\n        this.parseExportDefaultExpression();\n      this.checkExport(node as Undone<N.ExportDefaultDeclaration>, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr as Undone<N.FunctionExpression>,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    return this.parseStatement(null) as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"], bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      // @ts-expect-error refine types\n      in: specifier,\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.estreeWalker = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// @ts-check\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\n\t/** @typedef {{\n\t\tskip: () => void;\n\t\tremove: () => void;\n\t\treplace: (node: BaseNode) => void;\n\t}} WalkerContext */\n\n\tclass WalkerBase {\n\t\tconstructor() {\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_skip = false;\n\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_remove = false;\n\n\t\t\t/** @type {BaseNode | null} */\n\t\t\tthis.replacement = null;\n\n\t\t\t/** @type {WalkerContext} */\n\t\t\tthis.context = {\n\t\t\t\tskip: () => (this.should_skip = true),\n\t\t\t\tremove: () => (this.should_remove = true),\n\t\t\t\treplace: (node) => (this.replacement = node)\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t * @param {BaseNode} node\n\t\t */\n\t\treplace(parent, prop, index, node) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop][index] = node;\n\t\t\t\t} else {\n\t\t\t\t\tparent[prop] = node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t */\n\t\tremove(parent, prop, index) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t\t} else {\n\t\t\t\t\tdelete parent[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => void} SyncHandler */\n\n\tclass SyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {SyncHandler} enter\n\t\t * @param {SyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {BaseNode}\n\t\t */\n\t\tvisit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => Promise<void>} AsyncHandler */\n\n\tclass AsyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {AsyncHandler} enter\n\t\t * @param {AsyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {Promise<BaseNode>}\n\t\t */\n\t\tasync visit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n\t/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: SyncHandler\n\t *   leave?: SyncHandler\n\t * }} walker\n\t * @returns {BaseNode}\n\t */\n\tfunction walk(ast, { enter, leave }) {\n\t\tconst instance = new SyncWalker(enter, leave);\n\t\treturn instance.visit(ast, null);\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: AsyncHandler\n\t *   leave?: AsyncHandler\n\t * }} walker\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync function asyncWalk(ast, { enter, leave }) {\n\t\tconst instance = new AsyncWalker(enter, leave);\n\t\treturn await instance.visit(ast, null);\n\t}\n\n\texports.asyncWalk = asyncWalk;\n\texports.walk = walk;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar parser = require('@babel/parser');\nvar sourceMap = require('source-map');\nvar estreeWalker = require('estree-walker');\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        ;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* ErrorCodes.EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* ErrorCodes.EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* ErrorCodes.EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* ErrorCodes.MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* ErrorCodes.NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* ErrorCodes.X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* ErrorCodes.X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* ErrorCodes.X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* ErrorCodes.X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* ErrorCodes.X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* ErrorCodes.__EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol(`Fragment` );\r\nconst TELEPORT = Symbol(`Teleport` );\r\nconst SUSPENSE = Symbol(`Suspense` );\r\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\r\nconst BASE_TRANSITION = Symbol(`BaseTransition` );\r\nconst OPEN_BLOCK = Symbol(`openBlock` );\r\nconst CREATE_BLOCK = Symbol(`createBlock` );\r\nconst CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock` );\r\nconst CREATE_VNODE = Symbol(`createVNode` );\r\nconst CREATE_ELEMENT_VNODE = Symbol(`createElementVNode` );\r\nconst CREATE_COMMENT = Symbol(`createCommentVNode` );\r\nconst CREATE_TEXT = Symbol(`createTextVNode` );\r\nconst CREATE_STATIC = Symbol(`createStaticVNode` );\r\nconst RESOLVE_COMPONENT = Symbol(`resolveComponent` );\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(`resolveDynamicComponent` );\r\nconst RESOLVE_DIRECTIVE = Symbol(`resolveDirective` );\r\nconst RESOLVE_FILTER = Symbol(`resolveFilter` );\r\nconst WITH_DIRECTIVES = Symbol(`withDirectives` );\r\nconst RENDER_LIST = Symbol(`renderList` );\r\nconst RENDER_SLOT = Symbol(`renderSlot` );\r\nconst CREATE_SLOTS = Symbol(`createSlots` );\r\nconst TO_DISPLAY_STRING = Symbol(`toDisplayString` );\r\nconst MERGE_PROPS = Symbol(`mergeProps` );\r\nconst NORMALIZE_CLASS = Symbol(`normalizeClass` );\r\nconst NORMALIZE_STYLE = Symbol(`normalizeStyle` );\r\nconst NORMALIZE_PROPS = Symbol(`normalizeProps` );\r\nconst GUARD_REACTIVE_PROPS = Symbol(`guardReactiveProps` );\r\nconst TO_HANDLERS = Symbol(`toHandlers` );\r\nconst CAMELIZE = Symbol(`camelize` );\r\nconst CAPITALIZE = Symbol(`capitalize` );\r\nconst TO_HANDLER_KEY = Symbol(`toHandlerKey` );\r\nconst SET_BLOCK_TRACKING = Symbol(`setBlockTracking` );\r\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\r\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\r\nconst WITH_CTX = Symbol(`withCtx` );\r\nconst UNREF = Symbol(`unref` );\r\nconst IS_REF = Symbol(`isRef` );\r\nconst WITH_MEMO = Symbol(`withMemo` );\r\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* NodeTypes.ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* NodeTypes.VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* NodeTypes.JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: shared.isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* NodeTypes.INTERPOLATION */,\r\n        loc,\r\n        content: shared.isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* NodeTypes.JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === shared.hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* MemberExpLexState.inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* MemberExpLexState.inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* MemberExpLexState.inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* MemberExpLexState.inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* MemberExpLexState.inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* MemberExpLexState.inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* MemberExpLexState.inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* MemberExpLexState.inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* MemberExpLexState.inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = (path, context) => {\r\n        try {\r\n            let ret = parser.parseExpression(path, {\r\n                plugins: context.expressionPlugins\r\n            });\r\n            if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n                ret = ret.expression;\r\n            }\r\n            return (ret.type === 'MemberExpression' ||\r\n                ret.type === 'OptionalMemberExpression' ||\r\n                ret.type === 'Identifier');\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\nconst isMemberExpression = isMemberExpressionNode;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(shared.extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (shared.isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !shared.isString(props) &&\r\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!shared.isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !shared.isString(props) &&\r\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || shared.isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!shared.isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* NodeTypes.FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* NodeTypes.IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => shared.isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* NodeTypes.TEXT */:\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if (enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* Namespaces.HTML */,\r\n    getTextMode: () => 0 /* TextModes.DATA */,\r\n    isVoidTag: shared.NO,\r\n    isPreTag: shared.NO,\r\n    isCustomElement: shared.NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: true\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = shared.extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* Namespaces.HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* TagType.End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context, node.loc);\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (shared.isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* NodeTypes.TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* NodeTypes.COMMENT */ ||\r\n                                next.type === 3 /* NodeTypes.COMMENT */ ||\r\n                                (prev.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                    next.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* NodeTypes.TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* NodeTypes.TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* NodeTypes.TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* NodeTypes.COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* NodeTypes.COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* TagType.Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* NodeTypes.TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* TagType.End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ shared.makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* TagType.Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        shared.extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* TagType.End */ && isSelfClosing) {\r\n            emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* TagType.End */) {\r\n        return;\r\n    }\r\n    // 2.x deprecation checks\r\n    if (isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\r\n        let hasIf = false;\r\n        let hasFor = false;\r\n        for (let i = 0; i < props.length; i++) {\r\n            const p = props[i];\r\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                if (p.name === 'if') {\r\n                    hasIf = true;\r\n                }\r\n                else if (p.name === 'for') {\r\n                    hasFor = true;\r\n                }\r\n            }\r\n            if (hasIf && hasFor) {\r\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    let tagType = 0 /* ElementTypes.ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* ElementTypes.SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* ElementTypes.TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* ElementTypes.COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* NodeTypes.ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* TagType.End */) {\r\n            emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* TagType.Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* ConstantTypes.CAN_STRINGIFY */\r\n                    : 0 /* ConstantTypes.NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n            if (modifiers.includes('prop')) {\r\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */, context, loc);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* NodeTypes.DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* ConstantTypes.NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* NodeTypes.ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* NodeTypes.TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* NodeTypes.INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* ConstantTypes.NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* NodeTypes.TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* TextModes.RAWTEXT */ ||\r\n        mode === 3 /* TextModes.CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* TextModes.DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* TextModes.RCDATA */:\r\n        case 2 /* TextModes.RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* TextModes.CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            child.tagType === 0 /* ElementTypes.ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* ConstantTypes.NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* PatchFlags.HOISTED */ + (` /* HOISTED */` );\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* PatchFlags.NEED_PATCH */ ||\r\n                        flag === 1 /* PatchFlags.TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* ConstantTypes.CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* NodeTypes.TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* ConstantTypes.CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* NodeTypes.FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* NodeTypes.IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ &&\r\n        shared.isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                        return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    // except set custom directives.\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                        }\r\n                    }\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n        case 2 /* NodeTypes.TEXT */:\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n        case 9 /* NodeTypes.IF */:\r\n        case 11 /* NodeTypes.FOR */:\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (shared.isString(child) || shared.isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ &&\r\n        !shared.isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = shared.NOOP, isCustomElement = shared.NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = shared.EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if (!context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if (removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n            // identifier tracking only happens in non-browser builds.\r\n            {\r\n                if (shared.isString(exp)) {\r\n                    addId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(addId);\r\n                }\r\n                else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    addId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        removeIdentifiers(exp) {\r\n            {\r\n                if (shared.isString(exp)) {\r\n                    removeId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(removeId);\r\n                }\r\n                else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    removeId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        hoist(exp) {\r\n            if (shared.isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    function addId(id) {\r\n        const { identifiers } = context;\r\n        if (identifiers[id] === undefined) {\r\n            identifiers[id] = 0;\r\n        }\r\n        identifiers[id]++;\r\n    }\r\n    function removeId(id) {\r\n        context.identifiers[id]--;\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\r\n        let patchFlagText = shared.PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if (children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${shared.PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (` /* ${patchFlagText} */` ), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (shared.isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (shared.isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* NodeTypes.IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n        case 11 /* NodeTypes.FOR */:\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n        case 0 /* NodeTypes.ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = shared.isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap: sourceMap$1 = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap: sourceMap$1,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n            if (context.map) {\r\n                if (node) {\r\n                    let name;\r\n                    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !node.isStatic) {\r\n                        const content = node.content.replace(/^_ctx\\./, '');\r\n                        if (content !== node.content && isSimpleIdentifier(content)) {\r\n                            name = content;\r\n                        }\r\n                    }\r\n                    addMapping(node.loc.start, name);\r\n                }\r\n                advancePositionWithMutation(context, code);\r\n                if (node && node.loc !== locStub) {\r\n                    addMapping(node.loc.end);\r\n                }\r\n            }\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    function addMapping(loc, name) {\r\n        context.map.addMapping({\r\n            name,\r\n            source: context.filename,\r\n            original: {\r\n                line: loc.line,\r\n                column: loc.column - 1 // source-map column is 0 based\r\n            },\r\n            generated: {\r\n                line: context.line,\r\n                column: context.column - 1\r\n            }\r\n        });\r\n    }\r\n    if (sourceMap$1) {\r\n        // lazy require source-map implementation, only in non-browser builds\r\n        context.map = new sourceMap.SourceMapGenerator();\r\n        context.map.setSourceContent(filename, context.source);\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    const genScopeId = scopeId != null && mode === 'module';\r\n    const isSetupInlined = !!options.inline;\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = isSetupInlined\r\n        ? createCodegenContext(ast, options)\r\n        : context;\r\n    if (mode === 'module') {\r\n        genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\r\n    }\r\n    else {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    if (options.bindingMetadata && !options.inline) {\r\n        // binding optimization args\r\n        args.push('$props', '$setup', '$data', '$options');\r\n    }\r\n    const signature = options.isTS\r\n        ? args.map(arg => `${arg}: any`).join(',')\r\n        : args.join(', ');\r\n    if (isSetupInlined) {\r\n        push(`(${signature}) => {`);\r\n    }\r\n    else {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: isSetupInlined ? preambleContext.code : ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = ssr\r\n        ? `require(${JSON.stringify(runtimeModuleName)})`\r\n        : runtimeGlobalName;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        if (prefixIdentifiers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`);\r\n        }\r\n        else {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    // generate variables for ssr helpers\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        // ssr guarantees prefixIdentifier: true\r\n        push(`const { ${ast.ssrHelpers\r\n            .map(aliasHelper)\r\n            .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`);\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genModulePreamble(ast, context, genScopeId, inline) {\r\n    const { push, newline, optimizeImports, runtimeModuleName, ssrRuntimeModuleName } = context;\r\n    if (genScopeId && ast.hoists.length) {\r\n        ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID);\r\n    }\r\n    // generate import statements for helpers\r\n    if (ast.helpers.length) {\r\n        if (optimizeImports) {\r\n            // when bundled with webpack with code-split, calling an import binding\r\n            // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n            // incurring both payload size increase and potential perf overhead.\r\n            // therefore we assign the imports to variables (which is a constant ~50b\r\n            // cost per-component instead of scaling with template size)\r\n            push(`import { ${ast.helpers\r\n                .map(s => helperNameMap[s])\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n            push(`\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n                .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n                .join(', ')}\\n`);\r\n        }\r\n        else {\r\n            push(`import { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n        }\r\n    }\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        push(`import { ${ast.ssrHelpers\r\n            .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n            .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`);\r\n    }\r\n    if (ast.imports.length) {\r\n        genImports(ast.imports, context);\r\n        newline();\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    if (!inline) {\r\n        push(`export `);\r\n    }\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    const genScopeId = scopeId != null && mode !== 'function';\r\n    newline();\r\n    // generate inlined withScopeId helper\r\n    if (genScopeId) {\r\n        push(`const _withScopeId = n => (${helper(PUSH_SCOPE_ID)}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`);\r\n        newline();\r\n    }\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            const needScopeIdWrapper = genScopeId && exp.type === 13 /* NodeTypes.VNODE_CALL */;\r\n            push(`const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`);\r\n            genNode(exp, context);\r\n            if (needScopeIdWrapper) {\r\n                push(`)`);\r\n            }\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction genImports(importsOptions, context) {\r\n    if (!importsOptions.length) {\r\n        return;\r\n    }\r\n    importsOptions.forEach(imports => {\r\n        context.push(`import `);\r\n        genNode(imports.exp, context);\r\n        context.push(` from '${imports.path}'`);\r\n        context.newline();\r\n    });\r\n}\r\nfunction isText$1(n) {\r\n    return (shared.isString(n) ||\r\n        n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* NodeTypes.TEXT */ ||\r\n        n.type === 5 /* NodeTypes.INTERPOLATION */ ||\r\n        n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (nodes.some(n => shared.isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (shared.isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (shared.isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (shared.isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (shared.isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n        case 9 /* NodeTypes.IF */:\r\n        case 11 /* NodeTypes.FOR */:\r\n            assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* NodeTypes.TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* NodeTypes.VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\r\n            genTemplateLiteral(node, context);\r\n            break;\r\n        case 23 /* NodeTypes.JS_IF_STATEMENT */:\r\n            genIfStatement(node, context);\r\n            break;\r\n        case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\r\n            genAssignmentExpression(node, context);\r\n            break;\r\n        case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\r\n            genSequenceExpression(node, context);\r\n            break;\r\n        case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\r\n            genReturnStatement(node, context);\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (shared.isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (properties.some(p => p.value.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (shared.isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (shared.isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\r\nfunction genTemplateLiteral(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    push('`');\r\n    const l = node.elements.length;\r\n    const multilines = l > 3;\r\n    for (let i = 0; i < l; i++) {\r\n        const e = node.elements[i];\r\n        if (shared.isString(e)) {\r\n            push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'));\r\n        }\r\n        else {\r\n            push('${');\r\n            if (multilines)\r\n                indent();\r\n            genNode(e, context);\r\n            if (multilines)\r\n                deindent();\r\n            push('}');\r\n        }\r\n    }\r\n    push('`');\r\n}\r\nfunction genIfStatement(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { test, consequent, alternate } = node;\r\n    push(`if (`);\r\n    genNode(test, context);\r\n    push(`) {`);\r\n    indent();\r\n    genNode(consequent, context);\r\n    deindent();\r\n    push(`}`);\r\n    if (alternate) {\r\n        push(` else `);\r\n        if (alternate.type === 23 /* NodeTypes.JS_IF_STATEMENT */) {\r\n            genIfStatement(alternate, context);\r\n        }\r\n        else {\r\n            push(`{`);\r\n            indent();\r\n            genNode(alternate, context);\r\n            deindent();\r\n            push(`}`);\r\n        }\r\n    }\r\n}\r\nfunction genAssignmentExpression(node, context) {\r\n    genNode(node.left, context);\r\n    context.push(` = `);\r\n    genNode(node.right, context);\r\n}\r\nfunction genSequenceExpression(node, context) {\r\n    context.push(`(`);\r\n    genNodeList(node.expressions, context);\r\n    context.push(`)`);\r\n}\r\nfunction genReturnStatement({ returns }, context) {\r\n    context.push(`return `);\r\n    if (shared.isArray(returns)) {\r\n        genNodeListAsArray(returns, context);\r\n    }\r\n    else {\r\n        genNode(returns, context);\r\n    }\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    const rootExp = root.type === 'Program' &&\r\n        root.body[0].type === 'ExpressionStatement' &&\r\n        root.body[0].expression;\r\n    estreeWalker.walk(root, {\r\n        enter(node, parent) {\r\n            parent && parentStack.push(parent);\r\n            if (parent &&\r\n                parent.type.startsWith('TS') &&\r\n                parent.type !== 'TSAsExpression' &&\r\n                parent.type !== 'TSNonNullExpression' &&\r\n                parent.type !== 'TSTypeAssertion') {\r\n                return this.skip();\r\n            }\r\n            if (node.type === 'Identifier') {\r\n                const isLocal = !!knownIds[node.name];\r\n                const isRefed = isReferencedIdentifier(node, parent, parentStack);\r\n                if (includeAll || (isRefed && !isLocal)) {\r\n                    onIdentifier(node, parent, parentStack, isRefed, isLocal);\r\n                }\r\n            }\r\n            else if (node.type === 'ObjectProperty' &&\r\n                parent.type === 'ObjectPattern') {\r\n                node.inPattern = true;\r\n            }\r\n            else if (isFunctionType(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                walkFunctionParams(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n            else if (node.type === 'BlockStatement') {\r\n                // #3445 record block-level local variables\r\n                walkBlockDeclarations(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n        },\r\n        leave(node, parent) {\r\n            parent && parentStack.pop();\r\n            if (node !== rootExp && node.scopeIds) {\r\n                for (const id of node.scopeIds) {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    if (!parent) {\r\n        return true;\r\n    }\r\n    // is a special keyword but parsed as identifier\r\n    if (id.name === 'arguments') {\r\n        return false;\r\n    }\r\n    if (isReferenced(id, parent)) {\r\n        return true;\r\n    }\r\n    // babel's isReferenced check returns false for ids being assigned to, so we\r\n    // need to cover those cases here\r\n    switch (parent.type) {\r\n        case 'AssignmentExpression':\r\n        case 'AssignmentPattern':\r\n            return true;\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return isInDestructureAssignment(parent, parentStack);\r\n    }\r\n    return false;\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nfunction markScopeIdentifier(node, child, knownIds) {\r\n    const { name } = child;\r\n    if (node.scopeIds && node.scopeIds.has(name)) {\r\n        return;\r\n    }\r\n    if (name in knownIds) {\r\n        knownIds[name]++;\r\n    }\r\n    else {\r\n        knownIds[name] = 1;\r\n    }\r\n    (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\n/**\r\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\r\n * To avoid runtime dependency on @babel/types (which includes process references)\r\n * This file should not change very often in babel but we may need to keep it\r\n * up-to-date from time to time.\r\n *\r\n * https://github.com/babel/babel/blob/main/LICENSE\r\n *\r\n */\r\nfunction isReferenced(node, parent, grandparent) {\r\n    switch (parent.type) {\r\n        // yes: PARENT[NODE]\r\n        // yes: NODE.child\r\n        // no: parent.NODE\r\n        case 'MemberExpression':\r\n        case 'OptionalMemberExpression':\r\n            if (parent.property === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return parent.object === node;\r\n        case 'JSXMemberExpression':\r\n            return parent.object === node;\r\n        // no: let NODE = init;\r\n        // yes: let id = NODE;\r\n        case 'VariableDeclarator':\r\n            return parent.init === node;\r\n        // yes: () => NODE\r\n        // no: (NODE) => {}\r\n        case 'ArrowFunctionExpression':\r\n            return parent.body === node;\r\n        // no: class { #NODE; }\r\n        // no: class { get #NODE() {} }\r\n        // no: class { #NODE() {} }\r\n        // no: class { fn() { return this.#NODE; } }\r\n        case 'PrivateName':\r\n            return false;\r\n        // no: class { NODE() {} }\r\n        // yes: class { [NODE]() {} }\r\n        // no: class { foo(NODE) {} }\r\n        case 'ClassMethod':\r\n        case 'ClassPrivateMethod':\r\n        case 'ObjectMethod':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return false;\r\n        // yes: { [NODE]: \"\" }\r\n        // no: { NODE: \"\" }\r\n        // depends: { NODE }\r\n        // depends: { key: NODE }\r\n        case 'ObjectProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            // parent.value === node\r\n            return !grandparent || grandparent.type !== 'ObjectPattern';\r\n        // no: class { NODE = value; }\r\n        // yes: class { [NODE] = value; }\r\n        // yes: class { key = NODE; }\r\n        case 'ClassProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n        case 'ClassPrivateProperty':\r\n            return parent.key !== node;\r\n        // no: class NODE {}\r\n        // yes: class Foo extends NODE {}\r\n        case 'ClassDeclaration':\r\n        case 'ClassExpression':\r\n            return parent.superClass === node;\r\n        // yes: left = NODE;\r\n        // no: NODE = right;\r\n        case 'AssignmentExpression':\r\n            return parent.right === node;\r\n        // no: [NODE = foo] = [];\r\n        // yes: [foo = NODE] = [];\r\n        case 'AssignmentPattern':\r\n            return parent.right === node;\r\n        // no: NODE: for (;;) {}\r\n        case 'LabeledStatement':\r\n            return false;\r\n        // no: try {} catch (NODE) {}\r\n        case 'CatchClause':\r\n            return false;\r\n        // no: function foo(...NODE) {}\r\n        case 'RestElement':\r\n            return false;\r\n        case 'BreakStatement':\r\n        case 'ContinueStatement':\r\n            return false;\r\n        // no: function NODE() {}\r\n        // no: function foo(NODE) {}\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n            return false;\r\n        // no: export NODE from \"foo\";\r\n        // no: export * as NODE from \"foo\";\r\n        case 'ExportNamespaceSpecifier':\r\n        case 'ExportDefaultSpecifier':\r\n            return false;\r\n        // no: export { foo as NODE };\r\n        // yes: export { NODE as foo };\r\n        // no: export { NODE as foo } from \"foo\";\r\n        case 'ExportSpecifier':\r\n            // @ts-expect-error\r\n            if (grandparent === null || grandparent === void 0 ? void 0 : grandparent.source) {\r\n                return false;\r\n            }\r\n            return parent.local === node;\r\n        // no: import NODE from \"foo\";\r\n        // no: import * as NODE from \"foo\";\r\n        // no: import { NODE as foo } from \"foo\";\r\n        // no: import { foo as NODE } from \"foo\";\r\n        // no: import NODE from \"bar\";\r\n        case 'ImportDefaultSpecifier':\r\n        case 'ImportNamespaceSpecifier':\r\n        case 'ImportSpecifier':\r\n            return false;\r\n        // no: import \"foo\" assert { NODE: \"json\" }\r\n        case 'ImportAttribute':\r\n            return false;\r\n        // no: <div NODE=\"foo\" />\r\n        case 'JSXAttribute':\r\n            return false;\r\n        // no: [NODE] = [];\r\n        // no: ({ NODE }) = [];\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return false;\r\n        // no: new.NODE\r\n        // no: NODE.target\r\n        case 'MetaProperty':\r\n            return false;\r\n        // yes: type X = { someProperty: NODE }\r\n        // no: type X = { NODE: OtherType }\r\n        case 'ObjectTypeProperty':\r\n            return parent.key !== node;\r\n        // yes: enum X { Foo = NODE }\r\n        // no: enum X { NODE }\r\n        case 'TSEnumMember':\r\n            return parent.id !== node;\r\n        // yes: { [NODE]: value }\r\n        // no: { NODE: value }\r\n        case 'TSPropertySignature':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n    }\r\n    return true;\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ shared.makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !false check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { inline, bindingMetadata } = context;\r\n    const rewriteIdentifier = (raw, parent, id) => {\r\n        const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\r\n        if (inline) {\r\n            // x = y\r\n            const isAssignmentLVal = parent && parent.type === 'AssignmentExpression' && parent.left === id;\r\n            // x++\r\n            const isUpdateArg = parent && parent.type === 'UpdateExpression' && parent.argument === id;\r\n            // ({ x } = y)\r\n            const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\r\n            if (type === \"setup-const\" /* BindingTypes.SETUP_CONST */ ||\r\n                type === \"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */ ||\r\n                localVars[raw]) {\r\n                return raw;\r\n            }\r\n            else if (type === \"setup-ref\" /* BindingTypes.SETUP_REF */) {\r\n                return `${raw}.value`;\r\n            }\r\n            else if (type === \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */) {\r\n                // const binding that may or may not be ref\r\n                // if it's not a ref, then assignments don't make sense -\r\n                // so we ignore the non-ref assignment case and generate code\r\n                // that assumes the value to be a ref for more efficiency\r\n                return isAssignmentLVal || isUpdateArg || isDestructureAssignment\r\n                    ? `${raw}.value`\r\n                    : `${context.helperString(UNREF)}(${raw})`;\r\n            }\r\n            else if (type === \"setup-let\" /* BindingTypes.SETUP_LET */) {\r\n                if (isAssignmentLVal) {\r\n                    // let binding.\r\n                    // this is a bit more tricky as we need to cover the case where\r\n                    // let is a local non-ref value, and we need to replicate the\r\n                    // right hand side value.\r\n                    // x = y --> isRef(x) ? x.value = y : x = y\r\n                    const { right: rVal, operator } = parent;\r\n                    const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\r\n                    const rExpString = stringifyExpression(processExpression(createSimpleExpression(rExp, false), context, false, false, knownIds));\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\r\n                }\r\n                else if (isUpdateArg) {\r\n                    // make id replace parent in the code range so the raw update operator\r\n                    // is removed\r\n                    id.start = parent.start;\r\n                    id.end = parent.end;\r\n                    const { prefix: isPrefix, operator } = parent;\r\n                    const prefix = isPrefix ? operator : ``;\r\n                    const postfix = isPrefix ? `` : operator;\r\n                    // let binding.\r\n                    // x++ --> isRef(a) ? a.value++ : a++\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\r\n                }\r\n                else if (isDestructureAssignment) {\r\n                    // TODO\r\n                    // let binding in a destructure assignment - it's very tricky to\r\n                    // handle both possible cases here without altering the original\r\n                    // structure of the code, so we just assume it's not a ref here\r\n                    // for now\r\n                    return raw;\r\n                }\r\n                else {\r\n                    return `${context.helperString(UNREF)}(${raw})`;\r\n                }\r\n            }\r\n            else if (type === \"props\" /* BindingTypes.PROPS */) {\r\n                // use __props which is generated by compileScript so in ts mode\r\n                // it gets correct type\r\n                return shared.genPropsAccessExp(raw);\r\n            }\r\n            else if (type === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n                // prop with a different local alias (from defineProps() destructure)\r\n                return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\r\n            }\r\n        }\r\n        else {\r\n            if (type && type.startsWith('setup')) {\r\n                // setup bindings in non-inline mode\r\n                return `$setup.${raw}`;\r\n            }\r\n            else if (type === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n                return `$props['${bindingMetadata.__propsAliases[raw]}']`;\r\n            }\r\n            else if (type) {\r\n                return `$${type}.${raw}`;\r\n            }\r\n        }\r\n        // fallback to ctx\r\n        return `_ctx.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail constant on parens (function invocation) and dot (member access)\r\n    const bailConstant = rawExp.indexOf(`(`) > -1 || rawExp.indexOf('.') > 0;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        const isScopeVarReference = context.identifiers[rawExp];\r\n        const isAllowedGlobal = shared.isGloballyWhitelisted(rawExp);\r\n        const isLiteral = isLiteralWhitelisted(rawExp);\r\n        if (!asParams && !isScopeVarReference && !isAllowedGlobal && !isLiteral) {\r\n            // const bindings exposed from setup can be skipped for patching but\r\n            // cannot be hoisted to module scope\r\n            if (bindingMetadata[node.content] === \"setup-const\" /* BindingTypes.SETUP_CONST */) {\r\n                node.constType = 1 /* ConstantTypes.CAN_SKIP_PATCH */;\r\n            }\r\n            node.content = rewriteIdentifier(rawExp);\r\n        }\r\n        else if (!isScopeVarReference) {\r\n            if (isLiteral) {\r\n                node.constType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n            }\r\n            else {\r\n                node.constType = 2 /* ConstantTypes.CAN_HOIST */;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parser.parse(source, {\r\n            plugins: context.expressionPlugins\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(44 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const parentStack = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    walkIdentifiers(ast, (node, parent, _, isReferenced, isLocal) => {\r\n        if (isStaticPropertyKey(node, parent)) {\r\n            return;\r\n        }\r\n        // v2 wrapped filter call\r\n        if (node.name.startsWith('_filter_')) {\r\n            return;\r\n        }\r\n        const needPrefix = isReferenced && canPrefix(node);\r\n        if (needPrefix && !isLocal) {\r\n            if (isStaticProperty(parent) && parent.shorthand) {\r\n                node.prefix = `${node.name}: `;\r\n            }\r\n            node.name = rewriteIdentifier(node.name, parent, node);\r\n            ids.push(node);\r\n        }\r\n        else {\r\n            // The identifier is considered constant unless it's pointing to a\r\n            // local scope variable (a v-for alias, or a v-slot prop)\r\n            if (!(needPrefix && isLocal) && !bailConstant) {\r\n                node.isConstant = true;\r\n            }\r\n            // also generate sub-expressions for other identifiers for better\r\n            // source map support. (except for property keys which are static)\r\n            ids.push(node);\r\n        }\r\n    }, true, // invoke on ALL identifiers\r\n    parentStack, knownIds);\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant ? 3 /* ConstantTypes.CAN_STRINGIFY */ : 0 /* ConstantTypes.NOT_CONSTANT */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.constType = bailConstant\r\n            ? 0 /* ConstantTypes.NOT_CONSTANT */\r\n            : 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nfunction canPrefix(id) {\r\n    // skip whitelisted globals\r\n    if (shared.isGloballyWhitelisted(id.name)) {\r\n        return false;\r\n    }\r\n    // special case for webpack compilation\r\n    if (id.name === 'require') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction stringifyExpression(exp) {\r\n    if (shared.isString(exp)) {\r\n        return exp;\r\n    }\r\n    else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        return exp.content;\r\n    }\r\n    else {\r\n        return exp.children\r\n            .map(stringifyExpression)\r\n            .join('');\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if (context.prefixIdentifiers && dir.exp) {\r\n        // dir.exp can only be simple expression because vIf transform is applied\r\n        // before expression transform.\r\n        dir.exp = processExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* NodeTypes.IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 3 /* NodeTypes.COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* NodeTypes.TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if (comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    const isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\r\n    return {\r\n        type: 10 /* NodeTypes.IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n        userKey: findProp(node, `key`),\r\n        isTemplateIf\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            '\"v-if\"' ,\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\r\n            let patchFlagText = shared.PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if (!branch.isTemplateIf &&\r\n                children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${shared.PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (` /* ${patchFlagText} */` ), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        if (isTemplate) {\r\n            // #2085 / #5288 process :key and v-memo expressions need to be\r\n            // processed on `<template v-for>`. In this case the node is discarded\r\n            // and never traversed so its binding expressions won't be processed\r\n            // by the normal transforms.\r\n            if (memo) {\r\n                memo.exp = processExpression(memo.exp, context);\r\n            }\r\n            if (keyProperty && keyProp.type !== 6 /* NodeTypes.ATTRIBUTE */) {\r\n                keyProperty.value = processExpression(keyProperty.value, context);\r\n            }\r\n        }\r\n        const isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* PatchFlags.STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* PatchFlags.KEYED_FRAGMENT */\r\n                : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            (` /* ${shared.PatchFlagNames[fragmentFlag]} */` ), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* NodeTypes.ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ +\r\n                    (` /* ${shared.PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */]} */`\r\n                        ), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* NodeTypes.FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    if (context.prefixIdentifiers) {\r\n        // scope management\r\n        // inject identifiers to context\r\n        value && addIdentifiers(value);\r\n        key && addIdentifiers(key);\r\n        index && addIdentifiers(index);\r\n    }\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (context.prefixIdentifiers) {\r\n            value && removeIdentifiers(value);\r\n            key && removeIdentifiers(key);\r\n            index && removeIdentifiers(index);\r\n        }\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if (context.prefixIdentifiers) {\r\n        result.source = processExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if (context.prefixIdentifiers) {\r\n                result.key = processExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if (context.prefixIdentifiers) {\r\n                    result.index = processExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if (context.prefixIdentifiers) {\r\n            result.value = processExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        (node.tagType === 1 /* ElementTypes.COMPONENT */ ||\r\n            node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            if (context.prefixIdentifiers) {\r\n                slotProps && context.addIdentifiers(slotProps);\r\n            }\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                if (context.prefixIdentifiers) {\r\n                    slotProps && context.removeIdentifiers(slotProps);\r\n                }\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // with `prefixIdentifiers: true`, this can be further optimized to make\r\n    // it dynamic only when the slot actually uses the scope variables.\r\n    if (!context.ssr && context.prefixIdentifiers) {\r\n        hasDynamicSlots = hasScopeRef(node, context.identifiers);\r\n    }\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    let conditionalBranchIndex = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* NodeTypes.COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* SlotFlags.DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* SlotFlags.FORWARDED */\r\n            : 1 /* SlotFlags.STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + (` /* ${shared.slotFlagsText[slotFlag]} */` ), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn, index) {\r\n    const props = [\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ];\r\n    if (index != null) {\r\n        props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\r\n    }\r\n    return createObjectExpression(props);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* NodeTypes.ELEMENT */:\r\n                if (child.tagType === 2 /* ElementTypes.SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* NodeTypes.IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* NodeTypes.IF_BRANCH */:\r\n            case 11 /* NodeTypes.FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* NodeTypes.TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\r\n                node.tagType === 1 /* ElementTypes.COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                if (node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ ||\r\n                    type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* PatchFlags.TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${shared.PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(shared.PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => shared.PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    // this is skipped in browser build since browser builds do not perform\r\n    // binding analysis.\r\n    {\r\n        const fromSetup = resolveSetupReference(tag, context);\r\n        if (fromSetup) {\r\n            return fromSetup;\r\n        }\r\n        const dotIndex = tag.indexOf('.');\r\n        if (dotIndex > 0) {\r\n            const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\r\n            if (ns) {\r\n                return ns + tag.slice(dotIndex);\r\n            }\r\n        }\r\n    }\r\n    // 4. Self referencing component (inferred from filename)\r\n    if (context.selfName &&\r\n        shared.capitalize(shared.camelize(tag)) === context.selfName) {\r\n        context.helper(RESOLVE_COMPONENT);\r\n        // codegen.ts has special check for __self postfix when generating\r\n        // component imports, which will pass additional `maybeSelfReference` flag\r\n        // to `resolveComponent`.\r\n        context.components.add(tag + `__self`);\r\n        return toValidAssetId(tag, `component`);\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction resolveSetupReference(name, context) {\r\n    const bindings = context.bindingMetadata;\r\n    if (!bindings || bindings.__isScriptSetup === false) {\r\n        return;\r\n    }\r\n    const camelName = shared.camelize(name);\r\n    const PascalName = shared.capitalize(camelName);\r\n    const checkType = (type) => {\r\n        if (bindings[name] === type) {\r\n            return name;\r\n        }\r\n        if (bindings[camelName] === type) {\r\n            return camelName;\r\n        }\r\n        if (bindings[PascalName] === type) {\r\n            return PascalName;\r\n        }\r\n    };\r\n    const fromConst = checkType(\"setup-const\" /* BindingTypes.SETUP_CONST */) ||\r\n        checkType(\"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */);\r\n    if (fromConst) {\r\n        return context.inline\r\n            ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n                fromConst\r\n            : `$setup[${JSON.stringify(fromConst)}]`;\r\n    }\r\n    const fromMaybeRef = checkType(\"setup-let\" /* BindingTypes.SETUP_LET */) ||\r\n        checkType(\"setup-ref\" /* BindingTypes.SETUP_REF */) ||\r\n        checkType(\"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */);\r\n    if (fromMaybeRef) {\r\n        return context.inline\r\n            ? // setup scope bindings that may be refs need to be unrefed\r\n                `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n            : `$setup[${JSON.stringify(fromMaybeRef)}]`;\r\n    }\r\n}\r\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = shared.isOn(name);\r\n            if (isEventHandler &&\r\n                (!isComponent || isDynamicComponent) &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !shared.isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && shared.isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n                // in inline mode there is no setupState object, so we can't use string\r\n                // keys to set the ref. Instead, we need to transform it to pass the\r\n                // actual ref instead.\r\n                if (value &&\r\n                    context.inline &&\r\n                    context.bindingMetadata[value.content]) {\r\n                    isStatic = false;\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_key', true), createSimpleExpression(value.content, true, value.loc)));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            // 2.x v-bind object order compat\r\n                            {\r\n                                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                                    if (arg.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n                                        return arg.properties.some(({ key }) => {\r\n                                            if (key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n                                                !key.isStatic) {\r\n                                                return true;\r\n                                            }\r\n                                            return (key.content !== 'class' &&\r\n                                                key.content !== 'style' &&\r\n                                                !shared.isOn(key.content));\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        // dynamic expression\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (hasOverridableKeys) {\r\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\r\n                                }\r\n                            }\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: isComponent ? [exp] : [exp, `true`]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (shared.isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!shared.isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* PatchFlags.CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* PatchFlags.STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PatchFlags.PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            (styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                                styleProp.value.content.trim()[0] === `[`) ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || shared.isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // user directive.\r\n        // see if we have directives exposed via <script setup>\r\n        const fromSetup = resolveSetupReference('v-' + dir.name, context);\r\n        if (fromSetup) {\r\n            dirArgs.push(fromSetup);\r\n        }\r\n        else {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\nObject.freeze({})\r\n    ;\r\nObject.freeze([]) ;\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            const eventString = node.tagType === 1 /* ElementTypes.COMPONENT */ ||\r\n                rawName.startsWith('vnode') ||\r\n                !/[A-Z]/.test(rawName)\r\n                ? // for component and vnode lifecycle event listeners, auto convert\r\n                    // it to camelCase. See issue #2249\r\n                    shared.toHandlerKey(shared.camelize(rawName))\r\n                // preserve case for plain element listeners that have uppercase\r\n                // letters, as these may be custom elements' custom events\r\n                : `on:${rawName}`;\r\n            eventName = createSimpleExpression(eventString, true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content, context);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        // process the expression since it's been skipped\r\n        if (context.prefixIdentifiers) {\r\n            isInlineStatement && context.addIdentifiers(`$event`);\r\n            exp = dir.exp = processExpression(exp, context, false, hasMultipleStatements);\r\n            isInlineStatement && context.removeIdentifiers(`$event`);\r\n            // with scope analysis, the function is hoistable if it has no reference\r\n            // to scope variables.\r\n            shouldCache =\r\n                context.cacheHandlers &&\r\n                    // unnecessary to cache inside v-once\r\n                    !context.inVOnce &&\r\n                    // runtime constants don't need to be cached\r\n                    // (this is analyzed by compileScript in SFC <script setup>)\r\n                    !(exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && exp.constType > 0) &&\r\n                    // #1541 bail if this is a member exp handler passed to a component -\r\n                    // we need to use the original function to preserve arity,\r\n                    // e.g. <transition> relies on checking cb.length to determine\r\n                    // transition end handling. Inline function is ok since its arity\r\n                    // is preserved even when cached.\r\n                    !(isMemberExp && node.tagType === 1 /* ElementTypes.COMPONENT */) &&\r\n                    // bail if the function references closure variables (v-for, v-slot)\r\n                    // it must be passed fresh to avoid stale values.\r\n                    !hasScopeRef(exp, context.identifiers);\r\n            // If the expression is optimizable and is a member expression pointing\r\n            // to a function, turn it into invocation (and wrap in an arrow function\r\n            // below) so that it always accesses the latest value when called - thus\r\n            // avoiding the need to be patched.\r\n            if (shouldCache && isMemberExp) {\r\n                if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    exp.content = `${exp.content} && ${exp.content}(...args)`;\r\n                }\r\n                else {\r\n                    exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\r\n                }\r\n            }\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? context.isTS\r\n                        ? `($event: any)`\r\n                        : `$event`\r\n                    : `${context.isTS ? `\\n//@ts-ignore\\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = shared.camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* NodeTypes.ROOT */ ||\r\n        node.type === 1 /* NodeTypes.ELEMENT */ ||\r\n        node.type === 11 /* NodeTypes.FOR */ ||\r\n        node.type === 10 /* NodeTypes.IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* NodeTypes.ROOT */ ||\r\n                        (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                            node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* NodeTypes.TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* PatchFlags.TEXT */ +\r\n                            (` /* ${shared.PatchFlagNames[1 /* PatchFlags.TEXT */]} */` ));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* NodeTypes.TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    const bindingType = context.bindingMetadata[rawExp];\r\n    const maybeRef = context.inline &&\r\n        bindingType &&\r\n        bindingType !== \"setup-const\" /* BindingTypes.SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString, context) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    if (context.prefixIdentifiers &&\r\n        isSimpleIdentifier(expString) &&\r\n        context.identifiers[expString]) {\r\n        context.onError(createCompilerError(43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    if (maybeRef) {\r\n        if (bindingType === \"setup-ref\" /* BindingTypes.SETUP_REF */) {\r\n            // v-model used on known ref.\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => ((`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event)`\r\n            ]);\r\n        }\r\n        else {\r\n            // v-model used on a potentially ref binding in <script setup> inline mode.\r\n            // the assignment needs to check whether the binding is actually a ref.\r\n            const altAssignment = bindingType === \"setup-let\" /* BindingTypes.SETUP_LET */ ? `${rawExp} = $event` : `null`;\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event : ${altAssignment})`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n    if (context.prefixIdentifiers &&\r\n        !context.inVOnce &&\r\n        context.cacheHandlers &&\r\n        !hasScopeRef(exp, context.identifiers)) {\r\n        props[1].value = context.cache(props[1].value);\r\n    }\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        warnDeprecation(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context, node.loc);\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...(prefixIdentifiers\r\n                ? [\r\n                    // order is important\r\n                    trackVForSlotScopes,\r\n                    transformExpression\r\n                ]\r\n                : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    const prefixIdentifiers = (options.prefixIdentifiers === true || isModuleMode);\r\n    if (!prefixIdentifiers && options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = shared.isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\r\n    if (options.isTS) {\r\n        const { expressionPlugins } = options;\r\n        if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n            options.expressionPlugins = [...(expressionPlugins || []), 'typescript'];\r\n        }\r\n    }\r\n    transform(ast, shared.extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: shared.extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, shared.extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getInnerRange = getInnerRange;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isBuiltInType = isBuiltInType;\nexports.isCoreComponent = isCoreComponent;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.makeBlock = makeBlock;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-core.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerCore = require('@vue/compiler-core');\nvar shared = require('@vue/shared');\n\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\r\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\r\nconst V_MODEL_TEXT = Symbol(`vModelText` );\r\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\r\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\r\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\r\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\r\nconst V_SHOW = Symbol(`vShow` );\r\nconst TRANSITION = Symbol(`Transition` );\r\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\r\ncompilerCore.registerRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\nvar namedCharacterReferences = {\n\tGT: \">\",\n\tgt: \">\",\n\tLT: \"<\",\n\tlt: \"<\",\n\t\"ac;\": \"\u223E\",\n\t\"af;\": \"\u2061\",\n\tAMP: \"&\",\n\tamp: \"&\",\n\t\"ap;\": \"\u2248\",\n\t\"DD;\": \"\u2145\",\n\t\"dd;\": \"\u2146\",\n\tdeg: \"\u00B0\",\n\t\"ee;\": \"\u2147\",\n\t\"eg;\": \"\u2A9A\",\n\t\"el;\": \"\u2A99\",\n\tETH: \"\u00D0\",\n\teth: \"\u00F0\",\n\t\"gE;\": \"\u2267\",\n\t\"ge;\": \"\u2265\",\n\t\"Gg;\": \"\u22D9\",\n\t\"gg;\": \"\u226B\",\n\t\"gl;\": \"\u2277\",\n\t\"GT;\": \">\",\n\t\"Gt;\": \"\u226B\",\n\t\"gt;\": \">\",\n\t\"ic;\": \"\u2063\",\n\t\"ii;\": \"\u2148\",\n\t\"Im;\": \"\u2111\",\n\t\"in;\": \"\u2208\",\n\t\"it;\": \"\u2062\",\n\t\"lE;\": \"\u2266\",\n\t\"le;\": \"\u2264\",\n\t\"lg;\": \"\u2276\",\n\t\"Ll;\": \"\u22D8\",\n\t\"ll;\": \"\u226A\",\n\t\"LT;\": \"<\",\n\t\"Lt;\": \"\u226A\",\n\t\"lt;\": \"<\",\n\t\"mp;\": \"\u2213\",\n\t\"Mu;\": \"\u039C\",\n\t\"mu;\": \"\u03BC\",\n\t\"ne;\": \"\u2260\",\n\t\"ni;\": \"\u220B\",\n\tnot: \"\u00AC\",\n\t\"Nu;\": \"\u039D\",\n\t\"nu;\": \"\u03BD\",\n\t\"Or;\": \"\u2A54\",\n\t\"or;\": \"\u2228\",\n\t\"oS;\": \"\u24C8\",\n\t\"Pi;\": \"\u03A0\",\n\t\"pi;\": \"\u03C0\",\n\t\"pm;\": \"\u00B1\",\n\t\"Pr;\": \"\u2ABB\",\n\t\"pr;\": \"\u227A\",\n\t\"Re;\": \"\u211C\",\n\tREG: \"\u00AE\",\n\treg: \"\u00AE\",\n\t\"rx;\": \"\u211E\",\n\t\"Sc;\": \"\u2ABC\",\n\t\"sc;\": \"\u227B\",\n\tshy: \"\u00AD\",\n\tuml: \"\u00A8\",\n\t\"wp;\": \"\u2118\",\n\t\"wr;\": \"\u2240\",\n\t\"Xi;\": \"\u039E\",\n\t\"xi;\": \"\u03BE\",\n\tyen: \"\u00A5\",\n\t\"acd;\": \"\u223F\",\n\t\"acE;\": \"\u223E\u0333\",\n\t\"Acy;\": \"\u0410\",\n\t\"acy;\": \"\u0430\",\n\t\"Afr;\": \"\uD835\uDD04\",\n\t\"afr;\": \"\uD835\uDD1E\",\n\t\"AMP;\": \"&\",\n\t\"amp;\": \"&\",\n\t\"And;\": \"\u2A53\",\n\t\"and;\": \"\u2227\",\n\t\"ang;\": \"\u2220\",\n\t\"apE;\": \"\u2A70\",\n\t\"ape;\": \"\u224A\",\n\t\"ast;\": \"*\",\n\tAuml: \"\u00C4\",\n\tauml: \"\u00E4\",\n\t\"Bcy;\": \"\u0411\",\n\t\"bcy;\": \"\u0431\",\n\t\"Bfr;\": \"\uD835\uDD05\",\n\t\"bfr;\": \"\uD835\uDD1F\",\n\t\"bne;\": \"=\u20E5\",\n\t\"bot;\": \"\u22A5\",\n\t\"Cap;\": \"\u22D2\",\n\t\"cap;\": \"\u2229\",\n\tcent: \"\u00A2\",\n\t\"Cfr;\": \"\u212D\",\n\t\"cfr;\": \"\uD835\uDD20\",\n\t\"Chi;\": \"\u03A7\",\n\t\"chi;\": \"\u03C7\",\n\t\"cir;\": \"\u25CB\",\n\tCOPY: \"\u00A9\",\n\tcopy: \"\u00A9\",\n\t\"Cup;\": \"\u22D3\",\n\t\"cup;\": \"\u222A\",\n\t\"Dcy;\": \"\u0414\",\n\t\"dcy;\": \"\u0434\",\n\t\"deg;\": \"\u00B0\",\n\t\"Del;\": \"\u2207\",\n\t\"Dfr;\": \"\uD835\uDD07\",\n\t\"dfr;\": \"\uD835\uDD21\",\n\t\"die;\": \"\u00A8\",\n\t\"div;\": \"\u00F7\",\n\t\"Dot;\": \"\u00A8\",\n\t\"dot;\": \"\u02D9\",\n\t\"Ecy;\": \"\u042D\",\n\t\"ecy;\": \"\u044D\",\n\t\"Efr;\": \"\uD835\uDD08\",\n\t\"efr;\": \"\uD835\uDD22\",\n\t\"egs;\": \"\u2A96\",\n\t\"ell;\": \"\u2113\",\n\t\"els;\": \"\u2A95\",\n\t\"ENG;\": \"\u014A\",\n\t\"eng;\": \"\u014B\",\n\t\"Eta;\": \"\u0397\",\n\t\"eta;\": \"\u03B7\",\n\t\"ETH;\": \"\u00D0\",\n\t\"eth;\": \"\u00F0\",\n\tEuml: \"\u00CB\",\n\teuml: \"\u00EB\",\n\t\"Fcy;\": \"\u0424\",\n\t\"fcy;\": \"\u0444\",\n\t\"Ffr;\": \"\uD835\uDD09\",\n\t\"ffr;\": \"\uD835\uDD23\",\n\t\"gap;\": \"\u2A86\",\n\t\"Gcy;\": \"\u0413\",\n\t\"gcy;\": \"\u0433\",\n\t\"gEl;\": \"\u2A8C\",\n\t\"gel;\": \"\u22DB\",\n\t\"geq;\": \"\u2265\",\n\t\"ges;\": \"\u2A7E\",\n\t\"Gfr;\": \"\uD835\uDD0A\",\n\t\"gfr;\": \"\uD835\uDD24\",\n\t\"ggg;\": \"\u22D9\",\n\t\"gla;\": \"\u2AA5\",\n\t\"glE;\": \"\u2A92\",\n\t\"glj;\": \"\u2AA4\",\n\t\"gnE;\": \"\u2269\",\n\t\"gne;\": \"\u2A88\",\n\t\"Hat;\": \"^\",\n\t\"Hfr;\": \"\u210C\",\n\t\"hfr;\": \"\uD835\uDD25\",\n\t\"Icy;\": \"\u0418\",\n\t\"icy;\": \"\u0438\",\n\t\"iff;\": \"\u21D4\",\n\t\"Ifr;\": \"\u2111\",\n\t\"ifr;\": \"\uD835\uDD26\",\n\t\"Int;\": \"\u222C\",\n\t\"int;\": \"\u222B\",\n\tIuml: \"\u00CF\",\n\tiuml: \"\u00EF\",\n\t\"Jcy;\": \"\u0419\",\n\t\"jcy;\": \"\u0439\",\n\t\"Jfr;\": \"\uD835\uDD0D\",\n\t\"jfr;\": \"\uD835\uDD27\",\n\t\"Kcy;\": \"\u041A\",\n\t\"kcy;\": \"\u043A\",\n\t\"Kfr;\": \"\uD835\uDD0E\",\n\t\"kfr;\": \"\uD835\uDD28\",\n\t\"lap;\": \"\u2A85\",\n\t\"lat;\": \"\u2AAB\",\n\t\"Lcy;\": \"\u041B\",\n\t\"lcy;\": \"\u043B\",\n\t\"lEg;\": \"\u2A8B\",\n\t\"leg;\": \"\u22DA\",\n\t\"leq;\": \"\u2264\",\n\t\"les;\": \"\u2A7D\",\n\t\"Lfr;\": \"\uD835\uDD0F\",\n\t\"lfr;\": \"\uD835\uDD29\",\n\t\"lgE;\": \"\u2A91\",\n\t\"lnE;\": \"\u2268\",\n\t\"lne;\": \"\u2A87\",\n\t\"loz;\": \"\u25CA\",\n\t\"lrm;\": \"\u200E\",\n\t\"Lsh;\": \"\u21B0\",\n\t\"lsh;\": \"\u21B0\",\n\tmacr: \"\u00AF\",\n\t\"Map;\": \"\u2905\",\n\t\"map;\": \"\u21A6\",\n\t\"Mcy;\": \"\u041C\",\n\t\"mcy;\": \"\u043C\",\n\t\"Mfr;\": \"\uD835\uDD10\",\n\t\"mfr;\": \"\uD835\uDD2A\",\n\t\"mho;\": \"\u2127\",\n\t\"mid;\": \"\u2223\",\n\t\"nap;\": \"\u2249\",\n\tnbsp: \"\u00A0\",\n\t\"Ncy;\": \"\u041D\",\n\t\"ncy;\": \"\u043D\",\n\t\"Nfr;\": \"\uD835\uDD11\",\n\t\"nfr;\": \"\uD835\uDD2B\",\n\t\"ngE;\": \"\u2267\u0338\",\n\t\"nge;\": \"\u2271\",\n\t\"nGg;\": \"\u22D9\u0338\",\n\t\"nGt;\": \"\u226B\u20D2\",\n\t\"ngt;\": \"\u226F\",\n\t\"nis;\": \"\u22FC\",\n\t\"niv;\": \"\u220B\",\n\t\"nlE;\": \"\u2266\u0338\",\n\t\"nle;\": \"\u2270\",\n\t\"nLl;\": \"\u22D8\u0338\",\n\t\"nLt;\": \"\u226A\u20D2\",\n\t\"nlt;\": \"\u226E\",\n\t\"Not;\": \"\u2AEC\",\n\t\"not;\": \"\u00AC\",\n\t\"npr;\": \"\u2280\",\n\t\"nsc;\": \"\u2281\",\n\t\"num;\": \"#\",\n\t\"Ocy;\": \"\u041E\",\n\t\"ocy;\": \"\u043E\",\n\t\"Ofr;\": \"\uD835\uDD12\",\n\t\"ofr;\": \"\uD835\uDD2C\",\n\t\"ogt;\": \"\u29C1\",\n\t\"ohm;\": \"\u03A9\",\n\t\"olt;\": \"\u29C0\",\n\t\"ord;\": \"\u2A5D\",\n\tordf: \"\u00AA\",\n\tordm: \"\u00BA\",\n\t\"orv;\": \"\u2A5B\",\n\tOuml: \"\u00D6\",\n\touml: \"\u00F6\",\n\t\"par;\": \"\u2225\",\n\tpara: \"\u00B6\",\n\t\"Pcy;\": \"\u041F\",\n\t\"pcy;\": \"\u043F\",\n\t\"Pfr;\": \"\uD835\uDD13\",\n\t\"pfr;\": \"\uD835\uDD2D\",\n\t\"Phi;\": \"\u03A6\",\n\t\"phi;\": \"\u03C6\",\n\t\"piv;\": \"\u03D6\",\n\t\"prE;\": \"\u2AB3\",\n\t\"pre;\": \"\u2AAF\",\n\t\"Psi;\": \"\u03A8\",\n\t\"psi;\": \"\u03C8\",\n\t\"Qfr;\": \"\uD835\uDD14\",\n\t\"qfr;\": \"\uD835\uDD2E\",\n\tQUOT: \"\\\"\",\n\tquot: \"\\\"\",\n\t\"Rcy;\": \"\u0420\",\n\t\"rcy;\": \"\u0440\",\n\t\"REG;\": \"\u00AE\",\n\t\"reg;\": \"\u00AE\",\n\t\"Rfr;\": \"\u211C\",\n\t\"rfr;\": \"\uD835\uDD2F\",\n\t\"Rho;\": \"\u03A1\",\n\t\"rho;\": \"\u03C1\",\n\t\"rlm;\": \"\u200F\",\n\t\"Rsh;\": \"\u21B1\",\n\t\"rsh;\": \"\u21B1\",\n\t\"scE;\": \"\u2AB4\",\n\t\"sce;\": \"\u2AB0\",\n\t\"Scy;\": \"\u0421\",\n\t\"scy;\": \"\u0441\",\n\tsect: \"\u00A7\",\n\t\"Sfr;\": \"\uD835\uDD16\",\n\t\"sfr;\": \"\uD835\uDD30\",\n\t\"shy;\": \"\u00AD\",\n\t\"sim;\": \"\u223C\",\n\t\"smt;\": \"\u2AAA\",\n\t\"sol;\": \"/\",\n\t\"squ;\": \"\u25A1\",\n\t\"Sub;\": \"\u22D0\",\n\t\"sub;\": \"\u2282\",\n\t\"Sum;\": \"\u2211\",\n\t\"sum;\": \"\u2211\",\n\t\"Sup;\": \"\u22D1\",\n\t\"sup;\": \"\u2283\",\n\tsup1: \"\u00B9\",\n\tsup2: \"\u00B2\",\n\tsup3: \"\u00B3\",\n\t\"Tab;\": \"\\t\",\n\t\"Tau;\": \"\u03A4\",\n\t\"tau;\": \"\u03C4\",\n\t\"Tcy;\": \"\u0422\",\n\t\"tcy;\": \"\u0442\",\n\t\"Tfr;\": \"\uD835\uDD17\",\n\t\"tfr;\": \"\uD835\uDD31\",\n\t\"top;\": \"\u22A4\",\n\t\"Ucy;\": \"\u0423\",\n\t\"ucy;\": \"\u0443\",\n\t\"Ufr;\": \"\uD835\uDD18\",\n\t\"ufr;\": \"\uD835\uDD32\",\n\t\"uml;\": \"\u00A8\",\n\tUuml: \"\u00DC\",\n\tuuml: \"\u00FC\",\n\t\"Vcy;\": \"\u0412\",\n\t\"vcy;\": \"\u0432\",\n\t\"Vee;\": \"\u22C1\",\n\t\"vee;\": \"\u2228\",\n\t\"Vfr;\": \"\uD835\uDD19\",\n\t\"vfr;\": \"\uD835\uDD33\",\n\t\"Wfr;\": \"\uD835\uDD1A\",\n\t\"wfr;\": \"\uD835\uDD34\",\n\t\"Xfr;\": \"\uD835\uDD1B\",\n\t\"xfr;\": \"\uD835\uDD35\",\n\t\"Ycy;\": \"\u042B\",\n\t\"ycy;\": \"\u044B\",\n\t\"yen;\": \"\u00A5\",\n\t\"Yfr;\": \"\uD835\uDD1C\",\n\t\"yfr;\": \"\uD835\uDD36\",\n\tyuml: \"\u00FF\",\n\t\"Zcy;\": \"\u0417\",\n\t\"zcy;\": \"\u0437\",\n\t\"Zfr;\": \"\u2128\",\n\t\"zfr;\": \"\uD835\uDD37\",\n\t\"zwj;\": \"\u200D\",\n\tAcirc: \"\u00C2\",\n\tacirc: \"\u00E2\",\n\tacute: \"\u00B4\",\n\tAElig: \"\u00C6\",\n\taelig: \"\u00E6\",\n\t\"andd;\": \"\u2A5C\",\n\t\"andv;\": \"\u2A5A\",\n\t\"ange;\": \"\u29A4\",\n\t\"Aopf;\": \"\uD835\uDD38\",\n\t\"aopf;\": \"\uD835\uDD52\",\n\t\"apid;\": \"\u224B\",\n\t\"apos;\": \"'\",\n\tAring: \"\u00C5\",\n\taring: \"\u00E5\",\n\t\"Ascr;\": \"\uD835\uDC9C\",\n\t\"ascr;\": \"\uD835\uDCB6\",\n\t\"Auml;\": \"\u00C4\",\n\t\"auml;\": \"\u00E4\",\n\t\"Barv;\": \"\u2AE7\",\n\t\"bbrk;\": \"\u23B5\",\n\t\"Beta;\": \"\u0392\",\n\t\"beta;\": \"\u03B2\",\n\t\"beth;\": \"\u2136\",\n\t\"bNot;\": \"\u2AED\",\n\t\"bnot;\": \"\u2310\",\n\t\"Bopf;\": \"\uD835\uDD39\",\n\t\"bopf;\": \"\uD835\uDD53\",\n\t\"boxH;\": \"\u2550\",\n\t\"boxh;\": \"\u2500\",\n\t\"boxV;\": \"\u2551\",\n\t\"boxv;\": \"\u2502\",\n\t\"Bscr;\": \"\u212C\",\n\t\"bscr;\": \"\uD835\uDCB7\",\n\t\"bsim;\": \"\u223D\",\n\t\"bsol;\": \"\\\\\",\n\t\"bull;\": \"\u2022\",\n\t\"bump;\": \"\u224E\",\n\t\"caps;\": \"\u2229\uFE00\",\n\t\"Cdot;\": \"\u010A\",\n\t\"cdot;\": \"\u010B\",\n\tcedil: \"\u00B8\",\n\t\"cent;\": \"\u00A2\",\n\t\"CHcy;\": \"\u0427\",\n\t\"chcy;\": \"\u0447\",\n\t\"circ;\": \"\u02C6\",\n\t\"cirE;\": \"\u29C3\",\n\t\"cire;\": \"\u2257\",\n\t\"comp;\": \"\u2201\",\n\t\"cong;\": \"\u2245\",\n\t\"Copf;\": \"\u2102\",\n\t\"copf;\": \"\uD835\uDD54\",\n\t\"COPY;\": \"\u00A9\",\n\t\"copy;\": \"\u00A9\",\n\t\"Cscr;\": \"\uD835\uDC9E\",\n\t\"cscr;\": \"\uD835\uDCB8\",\n\t\"csub;\": \"\u2ACF\",\n\t\"csup;\": \"\u2AD0\",\n\t\"cups;\": \"\u222A\uFE00\",\n\t\"Darr;\": \"\u21A1\",\n\t\"dArr;\": \"\u21D3\",\n\t\"darr;\": \"\u2193\",\n\t\"dash;\": \"\u2010\",\n\t\"dHar;\": \"\u2965\",\n\t\"diam;\": \"\u22C4\",\n\t\"DJcy;\": \"\u0402\",\n\t\"djcy;\": \"\u0452\",\n\t\"Dopf;\": \"\uD835\uDD3B\",\n\t\"dopf;\": \"\uD835\uDD55\",\n\t\"Dscr;\": \"\uD835\uDC9F\",\n\t\"dscr;\": \"\uD835\uDCB9\",\n\t\"DScy;\": \"\u0405\",\n\t\"dscy;\": \"\u0455\",\n\t\"dsol;\": \"\u29F6\",\n\t\"dtri;\": \"\u25BF\",\n\t\"DZcy;\": \"\u040F\",\n\t\"dzcy;\": \"\u045F\",\n\t\"ecir;\": \"\u2256\",\n\tEcirc: \"\u00CA\",\n\tecirc: \"\u00EA\",\n\t\"Edot;\": \"\u0116\",\n\t\"eDot;\": \"\u2251\",\n\t\"edot;\": \"\u0117\",\n\t\"emsp;\": \"\u2003\",\n\t\"ensp;\": \"\u2002\",\n\t\"Eopf;\": \"\uD835\uDD3C\",\n\t\"eopf;\": \"\uD835\uDD56\",\n\t\"epar;\": \"\u22D5\",\n\t\"epsi;\": \"\u03B5\",\n\t\"Escr;\": \"\u2130\",\n\t\"escr;\": \"\u212F\",\n\t\"Esim;\": \"\u2A73\",\n\t\"esim;\": \"\u2242\",\n\t\"Euml;\": \"\u00CB\",\n\t\"euml;\": \"\u00EB\",\n\t\"euro;\": \"\u20AC\",\n\t\"excl;\": \"!\",\n\t\"flat;\": \"\u266D\",\n\t\"fnof;\": \"\u0192\",\n\t\"Fopf;\": \"\uD835\uDD3D\",\n\t\"fopf;\": \"\uD835\uDD57\",\n\t\"fork;\": \"\u22D4\",\n\t\"Fscr;\": \"\u2131\",\n\t\"fscr;\": \"\uD835\uDCBB\",\n\t\"Gdot;\": \"\u0120\",\n\t\"gdot;\": \"\u0121\",\n\t\"geqq;\": \"\u2267\",\n\t\"gesl;\": \"\u22DB\uFE00\",\n\t\"GJcy;\": \"\u0403\",\n\t\"gjcy;\": \"\u0453\",\n\t\"gnap;\": \"\u2A8A\",\n\t\"gneq;\": \"\u2A88\",\n\t\"Gopf;\": \"\uD835\uDD3E\",\n\t\"gopf;\": \"\uD835\uDD58\",\n\t\"Gscr;\": \"\uD835\uDCA2\",\n\t\"gscr;\": \"\u210A\",\n\t\"gsim;\": \"\u2273\",\n\t\"gtcc;\": \"\u2AA7\",\n\t\"gvnE;\": \"\u2269\uFE00\",\n\t\"half;\": \"\u00BD\",\n\t\"hArr;\": \"\u21D4\",\n\t\"harr;\": \"\u2194\",\n\t\"hbar;\": \"\u210F\",\n\t\"Hopf;\": \"\u210D\",\n\t\"hopf;\": \"\uD835\uDD59\",\n\t\"Hscr;\": \"\u210B\",\n\t\"hscr;\": \"\uD835\uDCBD\",\n\tIcirc: \"\u00CE\",\n\ticirc: \"\u00EE\",\n\t\"Idot;\": \"\u0130\",\n\t\"IEcy;\": \"\u0415\",\n\t\"iecy;\": \"\u0435\",\n\tiexcl: \"\u00A1\",\n\t\"imof;\": \"\u22B7\",\n\t\"IOcy;\": \"\u0401\",\n\t\"iocy;\": \"\u0451\",\n\t\"Iopf;\": \"\uD835\uDD40\",\n\t\"iopf;\": \"\uD835\uDD5A\",\n\t\"Iota;\": \"\u0399\",\n\t\"iota;\": \"\u03B9\",\n\t\"Iscr;\": \"\u2110\",\n\t\"iscr;\": \"\uD835\uDCBE\",\n\t\"isin;\": \"\u2208\",\n\t\"Iuml;\": \"\u00CF\",\n\t\"iuml;\": \"\u00EF\",\n\t\"Jopf;\": \"\uD835\uDD41\",\n\t\"jopf;\": \"\uD835\uDD5B\",\n\t\"Jscr;\": \"\uD835\uDCA5\",\n\t\"jscr;\": \"\uD835\uDCBF\",\n\t\"KHcy;\": \"\u0425\",\n\t\"khcy;\": \"\u0445\",\n\t\"KJcy;\": \"\u040C\",\n\t\"kjcy;\": \"\u045C\",\n\t\"Kopf;\": \"\uD835\uDD42\",\n\t\"kopf;\": \"\uD835\uDD5C\",\n\t\"Kscr;\": \"\uD835\uDCA6\",\n\t\"kscr;\": \"\uD835\uDCC0\",\n\t\"Lang;\": \"\u27EA\",\n\t\"lang;\": \"\u27E8\",\n\tlaquo: \"\u00AB\",\n\t\"Larr;\": \"\u219E\",\n\t\"lArr;\": \"\u21D0\",\n\t\"larr;\": \"\u2190\",\n\t\"late;\": \"\u2AAD\",\n\t\"lcub;\": \"{\",\n\t\"ldca;\": \"\u2936\",\n\t\"ldsh;\": \"\u21B2\",\n\t\"leqq;\": \"\u2266\",\n\t\"lesg;\": \"\u22DA\uFE00\",\n\t\"lHar;\": \"\u2962\",\n\t\"LJcy;\": \"\u0409\",\n\t\"ljcy;\": \"\u0459\",\n\t\"lnap;\": \"\u2A89\",\n\t\"lneq;\": \"\u2A87\",\n\t\"Lopf;\": \"\uD835\uDD43\",\n\t\"lopf;\": \"\uD835\uDD5D\",\n\t\"lozf;\": \"\u29EB\",\n\t\"lpar;\": \"(\",\n\t\"Lscr;\": \"\u2112\",\n\t\"lscr;\": \"\uD835\uDCC1\",\n\t\"lsim;\": \"\u2272\",\n\t\"lsqb;\": \"[\",\n\t\"ltcc;\": \"\u2AA6\",\n\t\"ltri;\": \"\u25C3\",\n\t\"lvnE;\": \"\u2268\uFE00\",\n\t\"macr;\": \"\u00AF\",\n\t\"male;\": \"\u2642\",\n\t\"malt;\": \"\u2720\",\n\tmicro: \"\u00B5\",\n\t\"mlcp;\": \"\u2ADB\",\n\t\"mldr;\": \"\u2026\",\n\t\"Mopf;\": \"\uD835\uDD44\",\n\t\"mopf;\": \"\uD835\uDD5E\",\n\t\"Mscr;\": \"\u2133\",\n\t\"mscr;\": \"\uD835\uDCC2\",\n\t\"nang;\": \"\u2220\u20D2\",\n\t\"napE;\": \"\u2A70\u0338\",\n\t\"nbsp;\": \"\u00A0\",\n\t\"ncap;\": \"\u2A43\",\n\t\"ncup;\": \"\u2A42\",\n\t\"ngeq;\": \"\u2271\",\n\t\"nges;\": \"\u2A7E\u0338\",\n\t\"ngtr;\": \"\u226F\",\n\t\"nGtv;\": \"\u226B\u0338\",\n\t\"nisd;\": \"\u22FA\",\n\t\"NJcy;\": \"\u040A\",\n\t\"njcy;\": \"\u045A\",\n\t\"nldr;\": \"\u2025\",\n\t\"nleq;\": \"\u2270\",\n\t\"nles;\": \"\u2A7D\u0338\",\n\t\"nLtv;\": \"\u226A\u0338\",\n\t\"nmid;\": \"\u2224\",\n\t\"Nopf;\": \"\u2115\",\n\t\"nopf;\": \"\uD835\uDD5F\",\n\t\"npar;\": \"\u2226\",\n\t\"npre;\": \"\u2AAF\u0338\",\n\t\"nsce;\": \"\u2AB0\u0338\",\n\t\"Nscr;\": \"\uD835\uDCA9\",\n\t\"nscr;\": \"\uD835\uDCC3\",\n\t\"nsim;\": \"\u2241\",\n\t\"nsub;\": \"\u2284\",\n\t\"nsup;\": \"\u2285\",\n\t\"ntgl;\": \"\u2279\",\n\t\"ntlg;\": \"\u2278\",\n\t\"nvap;\": \"\u224D\u20D2\",\n\t\"nvge;\": \"\u2265\u20D2\",\n\t\"nvgt;\": \">\u20D2\",\n\t\"nvle;\": \"\u2264\u20D2\",\n\t\"nvlt;\": \"<\u20D2\",\n\t\"oast;\": \"\u229B\",\n\t\"ocir;\": \"\u229A\",\n\tOcirc: \"\u00D4\",\n\tocirc: \"\u00F4\",\n\t\"odiv;\": \"\u2A38\",\n\t\"odot;\": \"\u2299\",\n\t\"ogon;\": \"\u02DB\",\n\t\"oint;\": \"\u222E\",\n\t\"omid;\": \"\u29B6\",\n\t\"Oopf;\": \"\uD835\uDD46\",\n\t\"oopf;\": \"\uD835\uDD60\",\n\t\"opar;\": \"\u29B7\",\n\t\"ordf;\": \"\u00AA\",\n\t\"ordm;\": \"\u00BA\",\n\t\"oror;\": \"\u2A56\",\n\t\"Oscr;\": \"\uD835\uDCAA\",\n\t\"oscr;\": \"\u2134\",\n\t\"osol;\": \"\u2298\",\n\t\"Ouml;\": \"\u00D6\",\n\t\"ouml;\": \"\u00F6\",\n\t\"para;\": \"\u00B6\",\n\t\"part;\": \"\u2202\",\n\t\"perp;\": \"\u22A5\",\n\t\"phiv;\": \"\u03D5\",\n\t\"plus;\": \"+\",\n\t\"Popf;\": \"\u2119\",\n\t\"popf;\": \"\uD835\uDD61\",\n\tpound: \"\u00A3\",\n\t\"prap;\": \"\u2AB7\",\n\t\"prec;\": \"\u227A\",\n\t\"prnE;\": \"\u2AB5\",\n\t\"prod;\": \"\u220F\",\n\t\"prop;\": \"\u221D\",\n\t\"Pscr;\": \"\uD835\uDCAB\",\n\t\"pscr;\": \"\uD835\uDCC5\",\n\t\"qint;\": \"\u2A0C\",\n\t\"Qopf;\": \"\u211A\",\n\t\"qopf;\": \"\uD835\uDD62\",\n\t\"Qscr;\": \"\uD835\uDCAC\",\n\t\"qscr;\": \"\uD835\uDCC6\",\n\t\"QUOT;\": \"\\\"\",\n\t\"quot;\": \"\\\"\",\n\t\"race;\": \"\u223D\u0331\",\n\t\"Rang;\": \"\u27EB\",\n\t\"rang;\": \"\u27E9\",\n\traquo: \"\u00BB\",\n\t\"Rarr;\": \"\u21A0\",\n\t\"rArr;\": \"\u21D2\",\n\t\"rarr;\": \"\u2192\",\n\t\"rcub;\": \"}\",\n\t\"rdca;\": \"\u2937\",\n\t\"rdsh;\": \"\u21B3\",\n\t\"real;\": \"\u211C\",\n\t\"rect;\": \"\u25AD\",\n\t\"rHar;\": \"\u2964\",\n\t\"rhov;\": \"\u03F1\",\n\t\"ring;\": \"\u02DA\",\n\t\"Ropf;\": \"\u211D\",\n\t\"ropf;\": \"\uD835\uDD63\",\n\t\"rpar;\": \")\",\n\t\"Rscr;\": \"\u211B\",\n\t\"rscr;\": \"\uD835\uDCC7\",\n\t\"rsqb;\": \"]\",\n\t\"rtri;\": \"\u25B9\",\n\t\"scap;\": \"\u2AB8\",\n\t\"scnE;\": \"\u2AB6\",\n\t\"sdot;\": \"\u22C5\",\n\t\"sect;\": \"\u00A7\",\n\t\"semi;\": \";\",\n\t\"sext;\": \"\u2736\",\n\t\"SHcy;\": \"\u0428\",\n\t\"shcy;\": \"\u0448\",\n\t\"sime;\": \"\u2243\",\n\t\"simg;\": \"\u2A9E\",\n\t\"siml;\": \"\u2A9D\",\n\t\"smid;\": \"\u2223\",\n\t\"smte;\": \"\u2AAC\",\n\t\"solb;\": \"\u29C4\",\n\t\"Sopf;\": \"\uD835\uDD4A\",\n\t\"sopf;\": \"\uD835\uDD64\",\n\t\"spar;\": \"\u2225\",\n\t\"Sqrt;\": \"\u221A\",\n\t\"squf;\": \"\u25AA\",\n\t\"Sscr;\": \"\uD835\uDCAE\",\n\t\"sscr;\": \"\uD835\uDCC8\",\n\t\"Star;\": \"\u22C6\",\n\t\"star;\": \"\u2606\",\n\t\"subE;\": \"\u2AC5\",\n\t\"sube;\": \"\u2286\",\n\t\"succ;\": \"\u227B\",\n\t\"sung;\": \"\u266A\",\n\t\"sup1;\": \"\u00B9\",\n\t\"sup2;\": \"\u00B2\",\n\t\"sup3;\": \"\u00B3\",\n\t\"supE;\": \"\u2AC6\",\n\t\"supe;\": \"\u2287\",\n\tszlig: \"\u00DF\",\n\t\"tbrk;\": \"\u23B4\",\n\t\"tdot;\": \"\u20DB\",\n\tTHORN: \"\u00DE\",\n\tthorn: \"\u00FE\",\n\ttimes: \"\u00D7\",\n\t\"tint;\": \"\u222D\",\n\t\"toea;\": \"\u2928\",\n\t\"Topf;\": \"\uD835\uDD4B\",\n\t\"topf;\": \"\uD835\uDD65\",\n\t\"tosa;\": \"\u2929\",\n\t\"trie;\": \"\u225C\",\n\t\"Tscr;\": \"\uD835\uDCAF\",\n\t\"tscr;\": \"\uD835\uDCC9\",\n\t\"TScy;\": \"\u0426\",\n\t\"tscy;\": \"\u0446\",\n\t\"Uarr;\": \"\u219F\",\n\t\"uArr;\": \"\u21D1\",\n\t\"uarr;\": \"\u2191\",\n\tUcirc: \"\u00DB\",\n\tucirc: \"\u00FB\",\n\t\"uHar;\": \"\u2963\",\n\t\"Uopf;\": \"\uD835\uDD4C\",\n\t\"uopf;\": \"\uD835\uDD66\",\n\t\"Upsi;\": \"\u03D2\",\n\t\"upsi;\": \"\u03C5\",\n\t\"Uscr;\": \"\uD835\uDCB0\",\n\t\"uscr;\": \"\uD835\uDCCA\",\n\t\"utri;\": \"\u25B5\",\n\t\"Uuml;\": \"\u00DC\",\n\t\"uuml;\": \"\u00FC\",\n\t\"vArr;\": \"\u21D5\",\n\t\"varr;\": \"\u2195\",\n\t\"Vbar;\": \"\u2AEB\",\n\t\"vBar;\": \"\u2AE8\",\n\t\"Vert;\": \"\u2016\",\n\t\"vert;\": \"|\",\n\t\"Vopf;\": \"\uD835\uDD4D\",\n\t\"vopf;\": \"\uD835\uDD67\",\n\t\"Vscr;\": \"\uD835\uDCB1\",\n\t\"vscr;\": \"\uD835\uDCCB\",\n\t\"Wopf;\": \"\uD835\uDD4E\",\n\t\"wopf;\": \"\uD835\uDD68\",\n\t\"Wscr;\": \"\uD835\uDCB2\",\n\t\"wscr;\": \"\uD835\uDCCC\",\n\t\"xcap;\": \"\u22C2\",\n\t\"xcup;\": \"\u22C3\",\n\t\"xmap;\": \"\u27FC\",\n\t\"xnis;\": \"\u22FB\",\n\t\"Xopf;\": \"\uD835\uDD4F\",\n\t\"xopf;\": \"\uD835\uDD69\",\n\t\"Xscr;\": \"\uD835\uDCB3\",\n\t\"xscr;\": \"\uD835\uDCCD\",\n\t\"xvee;\": \"\u22C1\",\n\t\"YAcy;\": \"\u042F\",\n\t\"yacy;\": \"\u044F\",\n\t\"YIcy;\": \"\u0407\",\n\t\"yicy;\": \"\u0457\",\n\t\"Yopf;\": \"\uD835\uDD50\",\n\t\"yopf;\": \"\uD835\uDD6A\",\n\t\"Yscr;\": \"\uD835\uDCB4\",\n\t\"yscr;\": \"\uD835\uDCCE\",\n\t\"YUcy;\": \"\u042E\",\n\t\"yucy;\": \"\u044E\",\n\t\"Yuml;\": \"\u0178\",\n\t\"yuml;\": \"\u00FF\",\n\t\"Zdot;\": \"\u017B\",\n\t\"zdot;\": \"\u017C\",\n\t\"Zeta;\": \"\u0396\",\n\t\"zeta;\": \"\u03B6\",\n\t\"ZHcy;\": \"\u0416\",\n\t\"zhcy;\": \"\u0436\",\n\t\"Zopf;\": \"\u2124\",\n\t\"zopf;\": \"\uD835\uDD6B\",\n\t\"Zscr;\": \"\uD835\uDCB5\",\n\t\"zscr;\": \"\uD835\uDCCF\",\n\t\"zwnj;\": \"\u200C\",\n\tAacute: \"\u00C1\",\n\taacute: \"\u00E1\",\n\t\"Acirc;\": \"\u00C2\",\n\t\"acirc;\": \"\u00E2\",\n\t\"acute;\": \"\u00B4\",\n\t\"AElig;\": \"\u00C6\",\n\t\"aelig;\": \"\u00E6\",\n\tAgrave: \"\u00C0\",\n\tagrave: \"\u00E0\",\n\t\"aleph;\": \"\u2135\",\n\t\"Alpha;\": \"\u0391\",\n\t\"alpha;\": \"\u03B1\",\n\t\"Amacr;\": \"\u0100\",\n\t\"amacr;\": \"\u0101\",\n\t\"amalg;\": \"\u2A3F\",\n\t\"angle;\": \"\u2220\",\n\t\"angrt;\": \"\u221F\",\n\t\"angst;\": \"\u00C5\",\n\t\"Aogon;\": \"\u0104\",\n\t\"aogon;\": \"\u0105\",\n\t\"Aring;\": \"\u00C5\",\n\t\"aring;\": \"\u00E5\",\n\t\"asymp;\": \"\u2248\",\n\tAtilde: \"\u00C3\",\n\tatilde: \"\u00E3\",\n\t\"awint;\": \"\u2A11\",\n\t\"bcong;\": \"\u224C\",\n\t\"bdquo;\": \"\u201E\",\n\t\"bepsi;\": \"\u03F6\",\n\t\"blank;\": \"\u2423\",\n\t\"blk12;\": \"\u2592\",\n\t\"blk14;\": \"\u2591\",\n\t\"blk34;\": \"\u2593\",\n\t\"block;\": \"\u2588\",\n\t\"boxDL;\": \"\u2557\",\n\t\"boxDl;\": \"\u2556\",\n\t\"boxdL;\": \"\u2555\",\n\t\"boxdl;\": \"\u2510\",\n\t\"boxDR;\": \"\u2554\",\n\t\"boxDr;\": \"\u2553\",\n\t\"boxdR;\": \"\u2552\",\n\t\"boxdr;\": \"\u250C\",\n\t\"boxHD;\": \"\u2566\",\n\t\"boxHd;\": \"\u2564\",\n\t\"boxhD;\": \"\u2565\",\n\t\"boxhd;\": \"\u252C\",\n\t\"boxHU;\": \"\u2569\",\n\t\"boxHu;\": \"\u2567\",\n\t\"boxhU;\": \"\u2568\",\n\t\"boxhu;\": \"\u2534\",\n\t\"boxUL;\": \"\u255D\",\n\t\"boxUl;\": \"\u255C\",\n\t\"boxuL;\": \"\u255B\",\n\t\"boxul;\": \"\u2518\",\n\t\"boxUR;\": \"\u255A\",\n\t\"boxUr;\": \"\u2559\",\n\t\"boxuR;\": \"\u2558\",\n\t\"boxur;\": \"\u2514\",\n\t\"boxVH;\": \"\u256C\",\n\t\"boxVh;\": \"\u256B\",\n\t\"boxvH;\": \"\u256A\",\n\t\"boxvh;\": \"\u253C\",\n\t\"boxVL;\": \"\u2563\",\n\t\"boxVl;\": \"\u2562\",\n\t\"boxvL;\": \"\u2561\",\n\t\"boxvl;\": \"\u2524\",\n\t\"boxVR;\": \"\u2560\",\n\t\"boxVr;\": \"\u255F\",\n\t\"boxvR;\": \"\u255E\",\n\t\"boxvr;\": \"\u251C\",\n\t\"Breve;\": \"\u02D8\",\n\t\"breve;\": \"\u02D8\",\n\tbrvbar: \"\u00A6\",\n\t\"bsemi;\": \"\u204F\",\n\t\"bsime;\": \"\u22CD\",\n\t\"bsolb;\": \"\u29C5\",\n\t\"bumpE;\": \"\u2AAE\",\n\t\"bumpe;\": \"\u224F\",\n\t\"caret;\": \"\u2041\",\n\t\"caron;\": \"\u02C7\",\n\t\"ccaps;\": \"\u2A4D\",\n\tCcedil: \"\u00C7\",\n\tccedil: \"\u00E7\",\n\t\"Ccirc;\": \"\u0108\",\n\t\"ccirc;\": \"\u0109\",\n\t\"ccups;\": \"\u2A4C\",\n\t\"cedil;\": \"\u00B8\",\n\t\"check;\": \"\u2713\",\n\t\"clubs;\": \"\u2663\",\n\t\"Colon;\": \"\u2237\",\n\t\"colon;\": \":\",\n\t\"comma;\": \",\",\n\t\"crarr;\": \"\u21B5\",\n\t\"Cross;\": \"\u2A2F\",\n\t\"cross;\": \"\u2717\",\n\t\"csube;\": \"\u2AD1\",\n\t\"csupe;\": \"\u2AD2\",\n\t\"ctdot;\": \"\u22EF\",\n\t\"cuepr;\": \"\u22DE\",\n\t\"cuesc;\": \"\u22DF\",\n\t\"cupor;\": \"\u2A45\",\n\tcurren: \"\u00A4\",\n\t\"cuvee;\": \"\u22CE\",\n\t\"cuwed;\": \"\u22CF\",\n\t\"cwint;\": \"\u2231\",\n\t\"Dashv;\": \"\u2AE4\",\n\t\"dashv;\": \"\u22A3\",\n\t\"dblac;\": \"\u02DD\",\n\t\"ddarr;\": \"\u21CA\",\n\t\"Delta;\": \"\u0394\",\n\t\"delta;\": \"\u03B4\",\n\t\"dharl;\": \"\u21C3\",\n\t\"dharr;\": \"\u21C2\",\n\t\"diams;\": \"\u2666\",\n\t\"disin;\": \"\u22F2\",\n\tdivide: \"\u00F7\",\n\t\"doteq;\": \"\u2250\",\n\t\"dtdot;\": \"\u22F1\",\n\t\"dtrif;\": \"\u25BE\",\n\t\"duarr;\": \"\u21F5\",\n\t\"duhar;\": \"\u296F\",\n\tEacute: \"\u00C9\",\n\teacute: \"\u00E9\",\n\t\"Ecirc;\": \"\u00CA\",\n\t\"ecirc;\": \"\u00EA\",\n\t\"eDDot;\": \"\u2A77\",\n\t\"efDot;\": \"\u2252\",\n\tEgrave: \"\u00C8\",\n\tegrave: \"\u00E8\",\n\t\"Emacr;\": \"\u0112\",\n\t\"emacr;\": \"\u0113\",\n\t\"empty;\": \"\u2205\",\n\t\"Eogon;\": \"\u0118\",\n\t\"eogon;\": \"\u0119\",\n\t\"eplus;\": \"\u2A71\",\n\t\"epsiv;\": \"\u03F5\",\n\t\"eqsim;\": \"\u2242\",\n\t\"Equal;\": \"\u2A75\",\n\t\"equiv;\": \"\u2261\",\n\t\"erarr;\": \"\u2971\",\n\t\"erDot;\": \"\u2253\",\n\t\"esdot;\": \"\u2250\",\n\t\"exist;\": \"\u2203\",\n\t\"fflig;\": \"\uFB00\",\n\t\"filig;\": \"\uFB01\",\n\t\"fjlig;\": \"fj\",\n\t\"fllig;\": \"\uFB02\",\n\t\"fltns;\": \"\u25B1\",\n\t\"forkv;\": \"\u2AD9\",\n\tfrac12: \"\u00BD\",\n\tfrac14: \"\u00BC\",\n\tfrac34: \"\u00BE\",\n\t\"frasl;\": \"\u2044\",\n\t\"frown;\": \"\u2322\",\n\t\"Gamma;\": \"\u0393\",\n\t\"gamma;\": \"\u03B3\",\n\t\"Gcirc;\": \"\u011C\",\n\t\"gcirc;\": \"\u011D\",\n\t\"gescc;\": \"\u2AA9\",\n\t\"gimel;\": \"\u2137\",\n\t\"gneqq;\": \"\u2269\",\n\t\"gnsim;\": \"\u22E7\",\n\t\"grave;\": \"`\",\n\t\"gsime;\": \"\u2A8E\",\n\t\"gsiml;\": \"\u2A90\",\n\t\"gtcir;\": \"\u2A7A\",\n\t\"gtdot;\": \"\u22D7\",\n\t\"Hacek;\": \"\u02C7\",\n\t\"harrw;\": \"\u21AD\",\n\t\"Hcirc;\": \"\u0124\",\n\t\"hcirc;\": \"\u0125\",\n\t\"hoarr;\": \"\u21FF\",\n\tIacute: \"\u00CD\",\n\tiacute: \"\u00ED\",\n\t\"Icirc;\": \"\u00CE\",\n\t\"icirc;\": \"\u00EE\",\n\t\"iexcl;\": \"\u00A1\",\n\tIgrave: \"\u00CC\",\n\tigrave: \"\u00EC\",\n\t\"iiint;\": \"\u222D\",\n\t\"iiota;\": \"\u2129\",\n\t\"IJlig;\": \"\u0132\",\n\t\"ijlig;\": \"\u0133\",\n\t\"Imacr;\": \"\u012A\",\n\t\"imacr;\": \"\u012B\",\n\t\"image;\": \"\u2111\",\n\t\"imath;\": \"\u0131\",\n\t\"imped;\": \"\u01B5\",\n\t\"infin;\": \"\u221E\",\n\t\"Iogon;\": \"\u012E\",\n\t\"iogon;\": \"\u012F\",\n\t\"iprod;\": \"\u2A3C\",\n\tiquest: \"\u00BF\",\n\t\"isinE;\": \"\u22F9\",\n\t\"isins;\": \"\u22F4\",\n\t\"isinv;\": \"\u2208\",\n\t\"Iukcy;\": \"\u0406\",\n\t\"iukcy;\": \"\u0456\",\n\t\"Jcirc;\": \"\u0134\",\n\t\"jcirc;\": \"\u0135\",\n\t\"jmath;\": \"\u0237\",\n\t\"Jukcy;\": \"\u0404\",\n\t\"jukcy;\": \"\u0454\",\n\t\"Kappa;\": \"\u039A\",\n\t\"kappa;\": \"\u03BA\",\n\t\"lAarr;\": \"\u21DA\",\n\t\"langd;\": \"\u2991\",\n\t\"laquo;\": \"\u00AB\",\n\t\"larrb;\": \"\u21E4\",\n\t\"lates;\": \"\u2AAD\uFE00\",\n\t\"lBarr;\": \"\u290E\",\n\t\"lbarr;\": \"\u290C\",\n\t\"lbbrk;\": \"\u2772\",\n\t\"lbrke;\": \"\u298B\",\n\t\"lceil;\": \"\u2308\",\n\t\"ldquo;\": \"\u201C\",\n\t\"lescc;\": \"\u2AA8\",\n\t\"lhard;\": \"\u21BD\",\n\t\"lharu;\": \"\u21BC\",\n\t\"lhblk;\": \"\u2584\",\n\t\"llarr;\": \"\u21C7\",\n\t\"lltri;\": \"\u25FA\",\n\t\"lneqq;\": \"\u2268\",\n\t\"lnsim;\": \"\u22E6\",\n\t\"loang;\": \"\u27EC\",\n\t\"loarr;\": \"\u21FD\",\n\t\"lobrk;\": \"\u27E6\",\n\t\"lopar;\": \"\u2985\",\n\t\"lrarr;\": \"\u21C6\",\n\t\"lrhar;\": \"\u21CB\",\n\t\"lrtri;\": \"\u22BF\",\n\t\"lsime;\": \"\u2A8D\",\n\t\"lsimg;\": \"\u2A8F\",\n\t\"lsquo;\": \"\u2018\",\n\t\"ltcir;\": \"\u2A79\",\n\t\"ltdot;\": \"\u22D6\",\n\t\"ltrie;\": \"\u22B4\",\n\t\"ltrif;\": \"\u25C2\",\n\t\"mdash;\": \"\u2014\",\n\t\"mDDot;\": \"\u223A\",\n\t\"micro;\": \"\u00B5\",\n\tmiddot: \"\u00B7\",\n\t\"minus;\": \"\u2212\",\n\t\"mumap;\": \"\u22B8\",\n\t\"nabla;\": \"\u2207\",\n\t\"napid;\": \"\u224B\u0338\",\n\t\"napos;\": \"\u0149\",\n\t\"natur;\": \"\u266E\",\n\t\"nbump;\": \"\u224E\u0338\",\n\t\"ncong;\": \"\u2247\",\n\t\"ndash;\": \"\u2013\",\n\t\"neArr;\": \"\u21D7\",\n\t\"nearr;\": \"\u2197\",\n\t\"nedot;\": \"\u2250\u0338\",\n\t\"nesim;\": \"\u2242\u0338\",\n\t\"ngeqq;\": \"\u2267\u0338\",\n\t\"ngsim;\": \"\u2275\",\n\t\"nhArr;\": \"\u21CE\",\n\t\"nharr;\": \"\u21AE\",\n\t\"nhpar;\": \"\u2AF2\",\n\t\"nlArr;\": \"\u21CD\",\n\t\"nlarr;\": \"\u219A\",\n\t\"nleqq;\": \"\u2266\u0338\",\n\t\"nless;\": \"\u226E\",\n\t\"nlsim;\": \"\u2274\",\n\t\"nltri;\": \"\u22EA\",\n\t\"notin;\": \"\u2209\",\n\t\"notni;\": \"\u220C\",\n\t\"npart;\": \"\u2202\u0338\",\n\t\"nprec;\": \"\u2280\",\n\t\"nrArr;\": \"\u21CF\",\n\t\"nrarr;\": \"\u219B\",\n\t\"nrtri;\": \"\u22EB\",\n\t\"nsime;\": \"\u2244\",\n\t\"nsmid;\": \"\u2224\",\n\t\"nspar;\": \"\u2226\",\n\t\"nsubE;\": \"\u2AC5\u0338\",\n\t\"nsube;\": \"\u2288\",\n\t\"nsucc;\": \"\u2281\",\n\t\"nsupE;\": \"\u2AC6\u0338\",\n\t\"nsupe;\": \"\u2289\",\n\tNtilde: \"\u00D1\",\n\tntilde: \"\u00F1\",\n\t\"numsp;\": \"\u2007\",\n\t\"nvsim;\": \"\u223C\u20D2\",\n\t\"nwArr;\": \"\u21D6\",\n\t\"nwarr;\": \"\u2196\",\n\tOacute: \"\u00D3\",\n\toacute: \"\u00F3\",\n\t\"Ocirc;\": \"\u00D4\",\n\t\"ocirc;\": \"\u00F4\",\n\t\"odash;\": \"\u229D\",\n\t\"OElig;\": \"\u0152\",\n\t\"oelig;\": \"\u0153\",\n\t\"ofcir;\": \"\u29BF\",\n\tOgrave: \"\u00D2\",\n\tograve: \"\u00F2\",\n\t\"ohbar;\": \"\u29B5\",\n\t\"olarr;\": \"\u21BA\",\n\t\"olcir;\": \"\u29BE\",\n\t\"oline;\": \"\u203E\",\n\t\"Omacr;\": \"\u014C\",\n\t\"omacr;\": \"\u014D\",\n\t\"Omega;\": \"\u03A9\",\n\t\"omega;\": \"\u03C9\",\n\t\"operp;\": \"\u29B9\",\n\t\"oplus;\": \"\u2295\",\n\t\"orarr;\": \"\u21BB\",\n\t\"order;\": \"\u2134\",\n\tOslash: \"\u00D8\",\n\toslash: \"\u00F8\",\n\tOtilde: \"\u00D5\",\n\totilde: \"\u00F5\",\n\t\"ovbar;\": \"\u233D\",\n\t\"parsl;\": \"\u2AFD\",\n\t\"phone;\": \"\u260E\",\n\t\"plusb;\": \"\u229E\",\n\t\"pluse;\": \"\u2A72\",\n\tplusmn: \"\u00B1\",\n\t\"pound;\": \"\u00A3\",\n\t\"prcue;\": \"\u227C\",\n\t\"Prime;\": \"\u2033\",\n\t\"prime;\": \"\u2032\",\n\t\"prnap;\": \"\u2AB9\",\n\t\"prsim;\": \"\u227E\",\n\t\"quest;\": \"?\",\n\t\"rAarr;\": \"\u21DB\",\n\t\"radic;\": \"\u221A\",\n\t\"rangd;\": \"\u2992\",\n\t\"range;\": \"\u29A5\",\n\t\"raquo;\": \"\u00BB\",\n\t\"rarrb;\": \"\u21E5\",\n\t\"rarrc;\": \"\u2933\",\n\t\"rarrw;\": \"\u219D\",\n\t\"ratio;\": \"\u2236\",\n\t\"RBarr;\": \"\u2910\",\n\t\"rBarr;\": \"\u290F\",\n\t\"rbarr;\": \"\u290D\",\n\t\"rbbrk;\": \"\u2773\",\n\t\"rbrke;\": \"\u298C\",\n\t\"rceil;\": \"\u2309\",\n\t\"rdquo;\": \"\u201D\",\n\t\"reals;\": \"\u211D\",\n\t\"rhard;\": \"\u21C1\",\n\t\"rharu;\": \"\u21C0\",\n\t\"rlarr;\": \"\u21C4\",\n\t\"rlhar;\": \"\u21CC\",\n\t\"rnmid;\": \"\u2AEE\",\n\t\"roang;\": \"\u27ED\",\n\t\"roarr;\": \"\u21FE\",\n\t\"robrk;\": \"\u27E7\",\n\t\"ropar;\": \"\u2986\",\n\t\"rrarr;\": \"\u21C9\",\n\t\"rsquo;\": \"\u2019\",\n\t\"rtrie;\": \"\u22B5\",\n\t\"rtrif;\": \"\u25B8\",\n\t\"sbquo;\": \"\u201A\",\n\t\"sccue;\": \"\u227D\",\n\t\"Scirc;\": \"\u015C\",\n\t\"scirc;\": \"\u015D\",\n\t\"scnap;\": \"\u2ABA\",\n\t\"scsim;\": \"\u227F\",\n\t\"sdotb;\": \"\u22A1\",\n\t\"sdote;\": \"\u2A66\",\n\t\"seArr;\": \"\u21D8\",\n\t\"searr;\": \"\u2198\",\n\t\"setmn;\": \"\u2216\",\n\t\"sharp;\": \"\u266F\",\n\t\"Sigma;\": \"\u03A3\",\n\t\"sigma;\": \"\u03C3\",\n\t\"simeq;\": \"\u2243\",\n\t\"simgE;\": \"\u2AA0\",\n\t\"simlE;\": \"\u2A9F\",\n\t\"simne;\": \"\u2246\",\n\t\"slarr;\": \"\u2190\",\n\t\"smile;\": \"\u2323\",\n\t\"smtes;\": \"\u2AAC\uFE00\",\n\t\"sqcap;\": \"\u2293\",\n\t\"sqcup;\": \"\u2294\",\n\t\"sqsub;\": \"\u228F\",\n\t\"sqsup;\": \"\u2290\",\n\t\"srarr;\": \"\u2192\",\n\t\"starf;\": \"\u2605\",\n\t\"strns;\": \"\u00AF\",\n\t\"subnE;\": \"\u2ACB\",\n\t\"subne;\": \"\u228A\",\n\t\"supnE;\": \"\u2ACC\",\n\t\"supne;\": \"\u228B\",\n\t\"swArr;\": \"\u21D9\",\n\t\"swarr;\": \"\u2199\",\n\t\"szlig;\": \"\u00DF\",\n\t\"Theta;\": \"\u0398\",\n\t\"theta;\": \"\u03B8\",\n\t\"thkap;\": \"\u2248\",\n\t\"THORN;\": \"\u00DE\",\n\t\"thorn;\": \"\u00FE\",\n\t\"Tilde;\": \"\u223C\",\n\t\"tilde;\": \"\u02DC\",\n\t\"times;\": \"\u00D7\",\n\t\"TRADE;\": \"\u2122\",\n\t\"trade;\": \"\u2122\",\n\t\"trisb;\": \"\u29CD\",\n\t\"TSHcy;\": \"\u040B\",\n\t\"tshcy;\": \"\u045B\",\n\t\"twixt;\": \"\u226C\",\n\tUacute: \"\u00DA\",\n\tuacute: \"\u00FA\",\n\t\"Ubrcy;\": \"\u040E\",\n\t\"ubrcy;\": \"\u045E\",\n\t\"Ucirc;\": \"\u00DB\",\n\t\"ucirc;\": \"\u00FB\",\n\t\"udarr;\": \"\u21C5\",\n\t\"udhar;\": \"\u296E\",\n\tUgrave: \"\u00D9\",\n\tugrave: \"\u00F9\",\n\t\"uharl;\": \"\u21BF\",\n\t\"uharr;\": \"\u21BE\",\n\t\"uhblk;\": \"\u2580\",\n\t\"ultri;\": \"\u25F8\",\n\t\"Umacr;\": \"\u016A\",\n\t\"umacr;\": \"\u016B\",\n\t\"Union;\": \"\u22C3\",\n\t\"Uogon;\": \"\u0172\",\n\t\"uogon;\": \"\u0173\",\n\t\"uplus;\": \"\u228E\",\n\t\"upsih;\": \"\u03D2\",\n\t\"UpTee;\": \"\u22A5\",\n\t\"Uring;\": \"\u016E\",\n\t\"uring;\": \"\u016F\",\n\t\"urtri;\": \"\u25F9\",\n\t\"utdot;\": \"\u22F0\",\n\t\"utrif;\": \"\u25B4\",\n\t\"uuarr;\": \"\u21C8\",\n\t\"varpi;\": \"\u03D6\",\n\t\"vBarv;\": \"\u2AE9\",\n\t\"VDash;\": \"\u22AB\",\n\t\"Vdash;\": \"\u22A9\",\n\t\"vDash;\": \"\u22A8\",\n\t\"vdash;\": \"\u22A2\",\n\t\"veeeq;\": \"\u225A\",\n\t\"vltri;\": \"\u22B2\",\n\t\"vnsub;\": \"\u2282\u20D2\",\n\t\"vnsup;\": \"\u2283\u20D2\",\n\t\"vprop;\": \"\u221D\",\n\t\"vrtri;\": \"\u22B3\",\n\t\"Wcirc;\": \"\u0174\",\n\t\"wcirc;\": \"\u0175\",\n\t\"Wedge;\": \"\u22C0\",\n\t\"wedge;\": \"\u2227\",\n\t\"xcirc;\": \"\u25EF\",\n\t\"xdtri;\": \"\u25BD\",\n\t\"xhArr;\": \"\u27FA\",\n\t\"xharr;\": \"\u27F7\",\n\t\"xlArr;\": \"\u27F8\",\n\t\"xlarr;\": \"\u27F5\",\n\t\"xodot;\": \"\u2A00\",\n\t\"xrArr;\": \"\u27F9\",\n\t\"xrarr;\": \"\u27F6\",\n\t\"xutri;\": \"\u25B3\",\n\tYacute: \"\u00DD\",\n\tyacute: \"\u00FD\",\n\t\"Ycirc;\": \"\u0176\",\n\t\"ycirc;\": \"\u0177\",\n\t\"Aacute;\": \"\u00C1\",\n\t\"aacute;\": \"\u00E1\",\n\t\"Abreve;\": \"\u0102\",\n\t\"abreve;\": \"\u0103\",\n\t\"Agrave;\": \"\u00C0\",\n\t\"agrave;\": \"\u00E0\",\n\t\"andand;\": \"\u2A55\",\n\t\"angmsd;\": \"\u2221\",\n\t\"angsph;\": \"\u2222\",\n\t\"apacir;\": \"\u2A6F\",\n\t\"approx;\": \"\u2248\",\n\t\"Assign;\": \"\u2254\",\n\t\"Atilde;\": \"\u00C3\",\n\t\"atilde;\": \"\u00E3\",\n\t\"barvee;\": \"\u22BD\",\n\t\"Barwed;\": \"\u2306\",\n\t\"barwed;\": \"\u2305\",\n\t\"becaus;\": \"\u2235\",\n\t\"bernou;\": \"\u212C\",\n\t\"bigcap;\": \"\u22C2\",\n\t\"bigcup;\": \"\u22C3\",\n\t\"bigvee;\": \"\u22C1\",\n\t\"bkarow;\": \"\u290D\",\n\t\"bottom;\": \"\u22A5\",\n\t\"bowtie;\": \"\u22C8\",\n\t\"boxbox;\": \"\u29C9\",\n\t\"bprime;\": \"\u2035\",\n\t\"brvbar;\": \"\u00A6\",\n\t\"bullet;\": \"\u2022\",\n\t\"Bumpeq;\": \"\u224E\",\n\t\"bumpeq;\": \"\u224F\",\n\t\"Cacute;\": \"\u0106\",\n\t\"cacute;\": \"\u0107\",\n\t\"capand;\": \"\u2A44\",\n\t\"capcap;\": \"\u2A4B\",\n\t\"capcup;\": \"\u2A47\",\n\t\"capdot;\": \"\u2A40\",\n\t\"Ccaron;\": \"\u010C\",\n\t\"ccaron;\": \"\u010D\",\n\t\"Ccedil;\": \"\u00C7\",\n\t\"ccedil;\": \"\u00E7\",\n\t\"circeq;\": \"\u2257\",\n\t\"cirmid;\": \"\u2AEF\",\n\t\"Colone;\": \"\u2A74\",\n\t\"colone;\": \"\u2254\",\n\t\"commat;\": \"@\",\n\t\"compfn;\": \"\u2218\",\n\t\"Conint;\": \"\u222F\",\n\t\"conint;\": \"\u222E\",\n\t\"coprod;\": \"\u2210\",\n\t\"copysr;\": \"\u2117\",\n\t\"cularr;\": \"\u21B6\",\n\t\"CupCap;\": \"\u224D\",\n\t\"cupcap;\": \"\u2A46\",\n\t\"cupcup;\": \"\u2A4A\",\n\t\"cupdot;\": \"\u228D\",\n\t\"curarr;\": \"\u21B7\",\n\t\"curren;\": \"\u00A4\",\n\t\"cylcty;\": \"\u232D\",\n\t\"Dagger;\": \"\u2021\",\n\t\"dagger;\": \"\u2020\",\n\t\"daleth;\": \"\u2138\",\n\t\"Dcaron;\": \"\u010E\",\n\t\"dcaron;\": \"\u010F\",\n\t\"dfisht;\": \"\u297F\",\n\t\"divide;\": \"\u00F7\",\n\t\"divonx;\": \"\u22C7\",\n\t\"dlcorn;\": \"\u231E\",\n\t\"dlcrop;\": \"\u230D\",\n\t\"dollar;\": \"$\",\n\t\"DotDot;\": \"\u20DC\",\n\t\"drcorn;\": \"\u231F\",\n\t\"drcrop;\": \"\u230C\",\n\t\"Dstrok;\": \"\u0110\",\n\t\"dstrok;\": \"\u0111\",\n\t\"Eacute;\": \"\u00C9\",\n\t\"eacute;\": \"\u00E9\",\n\t\"easter;\": \"\u2A6E\",\n\t\"Ecaron;\": \"\u011A\",\n\t\"ecaron;\": \"\u011B\",\n\t\"ecolon;\": \"\u2255\",\n\t\"Egrave;\": \"\u00C8\",\n\t\"egrave;\": \"\u00E8\",\n\t\"egsdot;\": \"\u2A98\",\n\t\"elsdot;\": \"\u2A97\",\n\t\"emptyv;\": \"\u2205\",\n\t\"emsp13;\": \"\u2004\",\n\t\"emsp14;\": \"\u2005\",\n\t\"eparsl;\": \"\u29E3\",\n\t\"eqcirc;\": \"\u2256\",\n\t\"equals;\": \"=\",\n\t\"equest;\": \"\u225F\",\n\t\"Exists;\": \"\u2203\",\n\t\"female;\": \"\u2640\",\n\t\"ffilig;\": \"\uFB03\",\n\t\"ffllig;\": \"\uFB04\",\n\t\"ForAll;\": \"\u2200\",\n\t\"forall;\": \"\u2200\",\n\t\"frac12;\": \"\u00BD\",\n\t\"frac13;\": \"\u2153\",\n\t\"frac14;\": \"\u00BC\",\n\t\"frac15;\": \"\u2155\",\n\t\"frac16;\": \"\u2159\",\n\t\"frac18;\": \"\u215B\",\n\t\"frac23;\": \"\u2154\",\n\t\"frac25;\": \"\u2156\",\n\t\"frac34;\": \"\u00BE\",\n\t\"frac35;\": \"\u2157\",\n\t\"frac38;\": \"\u215C\",\n\t\"frac45;\": \"\u2158\",\n\t\"frac56;\": \"\u215A\",\n\t\"frac58;\": \"\u215D\",\n\t\"frac78;\": \"\u215E\",\n\t\"gacute;\": \"\u01F5\",\n\t\"Gammad;\": \"\u03DC\",\n\t\"gammad;\": \"\u03DD\",\n\t\"Gbreve;\": \"\u011E\",\n\t\"gbreve;\": \"\u011F\",\n\t\"Gcedil;\": \"\u0122\",\n\t\"gesdot;\": \"\u2A80\",\n\t\"gesles;\": \"\u2A94\",\n\t\"gtlPar;\": \"\u2995\",\n\t\"gtrarr;\": \"\u2978\",\n\t\"gtrdot;\": \"\u22D7\",\n\t\"gtrsim;\": \"\u2273\",\n\t\"hairsp;\": \"\u200A\",\n\t\"hamilt;\": \"\u210B\",\n\t\"HARDcy;\": \"\u042A\",\n\t\"hardcy;\": \"\u044A\",\n\t\"hearts;\": \"\u2665\",\n\t\"hellip;\": \"\u2026\",\n\t\"hercon;\": \"\u22B9\",\n\t\"homtht;\": \"\u223B\",\n\t\"horbar;\": \"\u2015\",\n\t\"hslash;\": \"\u210F\",\n\t\"Hstrok;\": \"\u0126\",\n\t\"hstrok;\": \"\u0127\",\n\t\"hybull;\": \"\u2043\",\n\t\"hyphen;\": \"\u2010\",\n\t\"Iacute;\": \"\u00CD\",\n\t\"iacute;\": \"\u00ED\",\n\t\"Igrave;\": \"\u00CC\",\n\t\"igrave;\": \"\u00EC\",\n\t\"iiiint;\": \"\u2A0C\",\n\t\"iinfin;\": \"\u29DC\",\n\t\"incare;\": \"\u2105\",\n\t\"inodot;\": \"\u0131\",\n\t\"intcal;\": \"\u22BA\",\n\t\"iquest;\": \"\u00BF\",\n\t\"isinsv;\": \"\u22F3\",\n\t\"Itilde;\": \"\u0128\",\n\t\"itilde;\": \"\u0129\",\n\t\"Jsercy;\": \"\u0408\",\n\t\"jsercy;\": \"\u0458\",\n\t\"kappav;\": \"\u03F0\",\n\t\"Kcedil;\": \"\u0136\",\n\t\"kcedil;\": \"\u0137\",\n\t\"kgreen;\": \"\u0138\",\n\t\"Lacute;\": \"\u0139\",\n\t\"lacute;\": \"\u013A\",\n\t\"lagran;\": \"\u2112\",\n\t\"Lambda;\": \"\u039B\",\n\t\"lambda;\": \"\u03BB\",\n\t\"langle;\": \"\u27E8\",\n\t\"larrfs;\": \"\u291D\",\n\t\"larrhk;\": \"\u21A9\",\n\t\"larrlp;\": \"\u21AB\",\n\t\"larrpl;\": \"\u2939\",\n\t\"larrtl;\": \"\u21A2\",\n\t\"lAtail;\": \"\u291B\",\n\t\"latail;\": \"\u2919\",\n\t\"lbrace;\": \"{\",\n\t\"lbrack;\": \"[\",\n\t\"Lcaron;\": \"\u013D\",\n\t\"lcaron;\": \"\u013E\",\n\t\"Lcedil;\": \"\u013B\",\n\t\"lcedil;\": \"\u013C\",\n\t\"ldquor;\": \"\u201E\",\n\t\"lesdot;\": \"\u2A7F\",\n\t\"lesges;\": \"\u2A93\",\n\t\"lfisht;\": \"\u297C\",\n\t\"lfloor;\": \"\u230A\",\n\t\"lharul;\": \"\u296A\",\n\t\"llhard;\": \"\u296B\",\n\t\"Lmidot;\": \"\u013F\",\n\t\"lmidot;\": \"\u0140\",\n\t\"lmoust;\": \"\u23B0\",\n\t\"loplus;\": \"\u2A2D\",\n\t\"lowast;\": \"\u2217\",\n\t\"lowbar;\": \"_\",\n\t\"lparlt;\": \"\u2993\",\n\t\"lrhard;\": \"\u296D\",\n\t\"lsaquo;\": \"\u2039\",\n\t\"lsquor;\": \"\u201A\",\n\t\"Lstrok;\": \"\u0141\",\n\t\"lstrok;\": \"\u0142\",\n\t\"lthree;\": \"\u22CB\",\n\t\"ltimes;\": \"\u22C9\",\n\t\"ltlarr;\": \"\u2976\",\n\t\"ltrPar;\": \"\u2996\",\n\t\"mapsto;\": \"\u21A6\",\n\t\"marker;\": \"\u25AE\",\n\t\"mcomma;\": \"\u2A29\",\n\t\"midast;\": \"*\",\n\t\"midcir;\": \"\u2AF0\",\n\t\"middot;\": \"\u00B7\",\n\t\"minusb;\": \"\u229F\",\n\t\"minusd;\": \"\u2238\",\n\t\"mnplus;\": \"\u2213\",\n\t\"models;\": \"\u22A7\",\n\t\"mstpos;\": \"\u223E\",\n\t\"Nacute;\": \"\u0143\",\n\t\"nacute;\": \"\u0144\",\n\t\"nbumpe;\": \"\u224F\u0338\",\n\t\"Ncaron;\": \"\u0147\",\n\t\"ncaron;\": \"\u0148\",\n\t\"Ncedil;\": \"\u0145\",\n\t\"ncedil;\": \"\u0146\",\n\t\"nearhk;\": \"\u2924\",\n\t\"nequiv;\": \"\u2262\",\n\t\"nesear;\": \"\u2928\",\n\t\"nexist;\": \"\u2204\",\n\t\"nltrie;\": \"\u22EC\",\n\t\"notinE;\": \"\u22F9\u0338\",\n\t\"nparsl;\": \"\u2AFD\u20E5\",\n\t\"nprcue;\": \"\u22E0\",\n\t\"nrarrc;\": \"\u2933\u0338\",\n\t\"nrarrw;\": \"\u219D\u0338\",\n\t\"nrtrie;\": \"\u22ED\",\n\t\"nsccue;\": \"\u22E1\",\n\t\"nsimeq;\": \"\u2244\",\n\t\"Ntilde;\": \"\u00D1\",\n\t\"ntilde;\": \"\u00F1\",\n\t\"numero;\": \"\u2116\",\n\t\"nVDash;\": \"\u22AF\",\n\t\"nVdash;\": \"\u22AE\",\n\t\"nvDash;\": \"\u22AD\",\n\t\"nvdash;\": \"\u22AC\",\n\t\"nvHarr;\": \"\u2904\",\n\t\"nvlArr;\": \"\u2902\",\n\t\"nvrArr;\": \"\u2903\",\n\t\"nwarhk;\": \"\u2923\",\n\t\"nwnear;\": \"\u2927\",\n\t\"Oacute;\": \"\u00D3\",\n\t\"oacute;\": \"\u00F3\",\n\t\"Odblac;\": \"\u0150\",\n\t\"odblac;\": \"\u0151\",\n\t\"odsold;\": \"\u29BC\",\n\t\"Ograve;\": \"\u00D2\",\n\t\"ograve;\": \"\u00F2\",\n\t\"ominus;\": \"\u2296\",\n\t\"origof;\": \"\u22B6\",\n\t\"Oslash;\": \"\u00D8\",\n\t\"oslash;\": \"\u00F8\",\n\t\"Otilde;\": \"\u00D5\",\n\t\"otilde;\": \"\u00F5\",\n\t\"Otimes;\": \"\u2A37\",\n\t\"otimes;\": \"\u2297\",\n\t\"parsim;\": \"\u2AF3\",\n\t\"percnt;\": \"%\",\n\t\"period;\": \".\",\n\t\"permil;\": \"\u2030\",\n\t\"phmmat;\": \"\u2133\",\n\t\"planck;\": \"\u210F\",\n\t\"plankv;\": \"\u210F\",\n\t\"plusdo;\": \"\u2214\",\n\t\"plusdu;\": \"\u2A25\",\n\t\"plusmn;\": \"\u00B1\",\n\t\"preceq;\": \"\u2AAF\",\n\t\"primes;\": \"\u2119\",\n\t\"prnsim;\": \"\u22E8\",\n\t\"propto;\": \"\u221D\",\n\t\"prurel;\": \"\u22B0\",\n\t\"puncsp;\": \"\u2008\",\n\t\"qprime;\": \"\u2057\",\n\t\"Racute;\": \"\u0154\",\n\t\"racute;\": \"\u0155\",\n\t\"rangle;\": \"\u27E9\",\n\t\"rarrap;\": \"\u2975\",\n\t\"rarrfs;\": \"\u291E\",\n\t\"rarrhk;\": \"\u21AA\",\n\t\"rarrlp;\": \"\u21AC\",\n\t\"rarrpl;\": \"\u2945\",\n\t\"Rarrtl;\": \"\u2916\",\n\t\"rarrtl;\": \"\u21A3\",\n\t\"rAtail;\": \"\u291C\",\n\t\"ratail;\": \"\u291A\",\n\t\"rbrace;\": \"}\",\n\t\"rbrack;\": \"]\",\n\t\"Rcaron;\": \"\u0158\",\n\t\"rcaron;\": \"\u0159\",\n\t\"Rcedil;\": \"\u0156\",\n\t\"rcedil;\": \"\u0157\",\n\t\"rdquor;\": \"\u201D\",\n\t\"rfisht;\": \"\u297D\",\n\t\"rfloor;\": \"\u230B\",\n\t\"rharul;\": \"\u296C\",\n\t\"rmoust;\": \"\u23B1\",\n\t\"roplus;\": \"\u2A2E\",\n\t\"rpargt;\": \"\u2994\",\n\t\"rsaquo;\": \"\u203A\",\n\t\"rsquor;\": \"\u2019\",\n\t\"rthree;\": \"\u22CC\",\n\t\"rtimes;\": \"\u22CA\",\n\t\"Sacute;\": \"\u015A\",\n\t\"sacute;\": \"\u015B\",\n\t\"Scaron;\": \"\u0160\",\n\t\"scaron;\": \"\u0161\",\n\t\"Scedil;\": \"\u015E\",\n\t\"scedil;\": \"\u015F\",\n\t\"scnsim;\": \"\u22E9\",\n\t\"searhk;\": \"\u2925\",\n\t\"seswar;\": \"\u2929\",\n\t\"sfrown;\": \"\u2322\",\n\t\"SHCHcy;\": \"\u0429\",\n\t\"shchcy;\": \"\u0449\",\n\t\"sigmaf;\": \"\u03C2\",\n\t\"sigmav;\": \"\u03C2\",\n\t\"simdot;\": \"\u2A6A\",\n\t\"smashp;\": \"\u2A33\",\n\t\"SOFTcy;\": \"\u042C\",\n\t\"softcy;\": \"\u044C\",\n\t\"solbar;\": \"\u233F\",\n\t\"spades;\": \"\u2660\",\n\t\"sqcaps;\": \"\u2293\uFE00\",\n\t\"sqcups;\": \"\u2294\uFE00\",\n\t\"sqsube;\": \"\u2291\",\n\t\"sqsupe;\": \"\u2292\",\n\t\"Square;\": \"\u25A1\",\n\t\"square;\": \"\u25A1\",\n\t\"squarf;\": \"\u25AA\",\n\t\"ssetmn;\": \"\u2216\",\n\t\"ssmile;\": \"\u2323\",\n\t\"sstarf;\": \"\u22C6\",\n\t\"subdot;\": \"\u2ABD\",\n\t\"Subset;\": \"\u22D0\",\n\t\"subset;\": \"\u2282\",\n\t\"subsim;\": \"\u2AC7\",\n\t\"subsub;\": \"\u2AD5\",\n\t\"subsup;\": \"\u2AD3\",\n\t\"succeq;\": \"\u2AB0\",\n\t\"supdot;\": \"\u2ABE\",\n\t\"Supset;\": \"\u22D1\",\n\t\"supset;\": \"\u2283\",\n\t\"supsim;\": \"\u2AC8\",\n\t\"supsub;\": \"\u2AD4\",\n\t\"supsup;\": \"\u2AD6\",\n\t\"swarhk;\": \"\u2926\",\n\t\"swnwar;\": \"\u292A\",\n\t\"target;\": \"\u2316\",\n\t\"Tcaron;\": \"\u0164\",\n\t\"tcaron;\": \"\u0165\",\n\t\"Tcedil;\": \"\u0162\",\n\t\"tcedil;\": \"\u0163\",\n\t\"telrec;\": \"\u2315\",\n\t\"there4;\": \"\u2234\",\n\t\"thetav;\": \"\u03D1\",\n\t\"thinsp;\": \"\u2009\",\n\t\"thksim;\": \"\u223C\",\n\t\"timesb;\": \"\u22A0\",\n\t\"timesd;\": \"\u2A30\",\n\t\"topbot;\": \"\u2336\",\n\t\"topcir;\": \"\u2AF1\",\n\t\"tprime;\": \"\u2034\",\n\t\"tridot;\": \"\u25EC\",\n\t\"Tstrok;\": \"\u0166\",\n\t\"tstrok;\": \"\u0167\",\n\t\"Uacute;\": \"\u00DA\",\n\t\"uacute;\": \"\u00FA\",\n\t\"Ubreve;\": \"\u016C\",\n\t\"ubreve;\": \"\u016D\",\n\t\"Udblac;\": \"\u0170\",\n\t\"udblac;\": \"\u0171\",\n\t\"ufisht;\": \"\u297E\",\n\t\"Ugrave;\": \"\u00D9\",\n\t\"ugrave;\": \"\u00F9\",\n\t\"ulcorn;\": \"\u231C\",\n\t\"ulcrop;\": \"\u230F\",\n\t\"urcorn;\": \"\u231D\",\n\t\"urcrop;\": \"\u230E\",\n\t\"Utilde;\": \"\u0168\",\n\t\"utilde;\": \"\u0169\",\n\t\"vangrt;\": \"\u299C\",\n\t\"varphi;\": \"\u03D5\",\n\t\"varrho;\": \"\u03F1\",\n\t\"Vdashl;\": \"\u2AE6\",\n\t\"veebar;\": \"\u22BB\",\n\t\"vellip;\": \"\u22EE\",\n\t\"Verbar;\": \"\u2016\",\n\t\"verbar;\": \"|\",\n\t\"vsubnE;\": \"\u2ACB\uFE00\",\n\t\"vsubne;\": \"\u228A\uFE00\",\n\t\"vsupnE;\": \"\u2ACC\uFE00\",\n\t\"vsupne;\": \"\u228B\uFE00\",\n\t\"Vvdash;\": \"\u22AA\",\n\t\"wedbar;\": \"\u2A5F\",\n\t\"wedgeq;\": \"\u2259\",\n\t\"weierp;\": \"\u2118\",\n\t\"wreath;\": \"\u2240\",\n\t\"xoplus;\": \"\u2A01\",\n\t\"xotime;\": \"\u2A02\",\n\t\"xsqcup;\": \"\u2A06\",\n\t\"xuplus;\": \"\u2A04\",\n\t\"xwedge;\": \"\u22C0\",\n\t\"Yacute;\": \"\u00DD\",\n\t\"yacute;\": \"\u00FD\",\n\t\"Zacute;\": \"\u0179\",\n\t\"zacute;\": \"\u017A\",\n\t\"Zcaron;\": \"\u017D\",\n\t\"zcaron;\": \"\u017E\",\n\t\"zeetrf;\": \"\u2128\",\n\t\"alefsym;\": \"\u2135\",\n\t\"angrtvb;\": \"\u22BE\",\n\t\"angzarr;\": \"\u237C\",\n\t\"asympeq;\": \"\u224D\",\n\t\"backsim;\": \"\u223D\",\n\t\"Because;\": \"\u2235\",\n\t\"because;\": \"\u2235\",\n\t\"bemptyv;\": \"\u29B0\",\n\t\"between;\": \"\u226C\",\n\t\"bigcirc;\": \"\u25EF\",\n\t\"bigodot;\": \"\u2A00\",\n\t\"bigstar;\": \"\u2605\",\n\t\"bnequiv;\": \"\u2261\u20E5\",\n\t\"boxplus;\": \"\u229E\",\n\t\"Cayleys;\": \"\u212D\",\n\t\"Cconint;\": \"\u2230\",\n\t\"ccupssm;\": \"\u2A50\",\n\t\"Cedilla;\": \"\u00B8\",\n\t\"cemptyv;\": \"\u29B2\",\n\t\"cirscir;\": \"\u29C2\",\n\t\"coloneq;\": \"\u2254\",\n\t\"congdot;\": \"\u2A6D\",\n\t\"cudarrl;\": \"\u2938\",\n\t\"cudarrr;\": \"\u2935\",\n\t\"cularrp;\": \"\u293D\",\n\t\"curarrm;\": \"\u293C\",\n\t\"dbkarow;\": \"\u290F\",\n\t\"ddagger;\": \"\u2021\",\n\t\"ddotseq;\": \"\u2A77\",\n\t\"demptyv;\": \"\u29B1\",\n\t\"Diamond;\": \"\u22C4\",\n\t\"diamond;\": \"\u22C4\",\n\t\"digamma;\": \"\u03DD\",\n\t\"dotplus;\": \"\u2214\",\n\t\"DownTee;\": \"\u22A4\",\n\t\"dwangle;\": \"\u29A6\",\n\t\"Element;\": \"\u2208\",\n\t\"Epsilon;\": \"\u0395\",\n\t\"epsilon;\": \"\u03B5\",\n\t\"eqcolon;\": \"\u2255\",\n\t\"equivDD;\": \"\u2A78\",\n\t\"gesdoto;\": \"\u2A82\",\n\t\"gtquest;\": \"\u2A7C\",\n\t\"gtrless;\": \"\u2277\",\n\t\"harrcir;\": \"\u2948\",\n\t\"Implies;\": \"\u21D2\",\n\t\"intprod;\": \"\u2A3C\",\n\t\"isindot;\": \"\u22F5\",\n\t\"larrbfs;\": \"\u291F\",\n\t\"larrsim;\": \"\u2973\",\n\t\"lbrksld;\": \"\u298F\",\n\t\"lbrkslu;\": \"\u298D\",\n\t\"ldrdhar;\": \"\u2967\",\n\t\"LeftTee;\": \"\u22A3\",\n\t\"lesdoto;\": \"\u2A81\",\n\t\"lessdot;\": \"\u22D6\",\n\t\"lessgtr;\": \"\u2276\",\n\t\"lesssim;\": \"\u2272\",\n\t\"lotimes;\": \"\u2A34\",\n\t\"lozenge;\": \"\u25CA\",\n\t\"ltquest;\": \"\u2A7B\",\n\t\"luruhar;\": \"\u2966\",\n\t\"maltese;\": \"\u2720\",\n\t\"minusdu;\": \"\u2A2A\",\n\t\"napprox;\": \"\u2249\",\n\t\"natural;\": \"\u266E\",\n\t\"nearrow;\": \"\u2197\",\n\t\"NewLine;\": \"\\n\",\n\t\"nexists;\": \"\u2204\",\n\t\"NoBreak;\": \"\u2060\",\n\t\"notinva;\": \"\u2209\",\n\t\"notinvb;\": \"\u22F7\",\n\t\"notinvc;\": \"\u22F6\",\n\t\"NotLess;\": \"\u226E\",\n\t\"notniva;\": \"\u220C\",\n\t\"notnivb;\": \"\u22FE\",\n\t\"notnivc;\": \"\u22FD\",\n\t\"npolint;\": \"\u2A14\",\n\t\"npreceq;\": \"\u2AAF\u0338\",\n\t\"nsqsube;\": \"\u22E2\",\n\t\"nsqsupe;\": \"\u22E3\",\n\t\"nsubset;\": \"\u2282\u20D2\",\n\t\"nsucceq;\": \"\u2AB0\u0338\",\n\t\"nsupset;\": \"\u2283\u20D2\",\n\t\"nvinfin;\": \"\u29DE\",\n\t\"nvltrie;\": \"\u22B4\u20D2\",\n\t\"nvrtrie;\": \"\u22B5\u20D2\",\n\t\"nwarrow;\": \"\u2196\",\n\t\"olcross;\": \"\u29BB\",\n\t\"Omicron;\": \"\u039F\",\n\t\"omicron;\": \"\u03BF\",\n\t\"orderof;\": \"\u2134\",\n\t\"orslope;\": \"\u2A57\",\n\t\"OverBar;\": \"\u203E\",\n\t\"pertenk;\": \"\u2031\",\n\t\"planckh;\": \"\u210E\",\n\t\"pluscir;\": \"\u2A22\",\n\t\"plussim;\": \"\u2A26\",\n\t\"plustwo;\": \"\u2A27\",\n\t\"precsim;\": \"\u227E\",\n\t\"Product;\": \"\u220F\",\n\t\"quatint;\": \"\u2A16\",\n\t\"questeq;\": \"\u225F\",\n\t\"rarrbfs;\": \"\u2920\",\n\t\"rarrsim;\": \"\u2974\",\n\t\"rbrksld;\": \"\u298E\",\n\t\"rbrkslu;\": \"\u2990\",\n\t\"rdldhar;\": \"\u2969\",\n\t\"realine;\": \"\u211B\",\n\t\"rotimes;\": \"\u2A35\",\n\t\"ruluhar;\": \"\u2968\",\n\t\"searrow;\": \"\u2198\",\n\t\"simplus;\": \"\u2A24\",\n\t\"simrarr;\": \"\u2972\",\n\t\"subedot;\": \"\u2AC3\",\n\t\"submult;\": \"\u2AC1\",\n\t\"subplus;\": \"\u2ABF\",\n\t\"subrarr;\": \"\u2979\",\n\t\"succsim;\": \"\u227F\",\n\t\"supdsub;\": \"\u2AD8\",\n\t\"supedot;\": \"\u2AC4\",\n\t\"suphsol;\": \"\u27C9\",\n\t\"suphsub;\": \"\u2AD7\",\n\t\"suplarr;\": \"\u297B\",\n\t\"supmult;\": \"\u2AC2\",\n\t\"supplus;\": \"\u2AC0\",\n\t\"swarrow;\": \"\u2199\",\n\t\"topfork;\": \"\u2ADA\",\n\t\"triplus;\": \"\u2A39\",\n\t\"tritime;\": \"\u2A3B\",\n\t\"UpArrow;\": \"\u2191\",\n\t\"Uparrow;\": \"\u21D1\",\n\t\"uparrow;\": \"\u2191\",\n\t\"Upsilon;\": \"\u03A5\",\n\t\"upsilon;\": \"\u03C5\",\n\t\"uwangle;\": \"\u29A7\",\n\t\"vzigzag;\": \"\u299A\",\n\t\"zigrarr;\": \"\u21DD\",\n\t\"andslope;\": \"\u2A58\",\n\t\"angmsdaa;\": \"\u29A8\",\n\t\"angmsdab;\": \"\u29A9\",\n\t\"angmsdac;\": \"\u29AA\",\n\t\"angmsdad;\": \"\u29AB\",\n\t\"angmsdae;\": \"\u29AC\",\n\t\"angmsdaf;\": \"\u29AD\",\n\t\"angmsdag;\": \"\u29AE\",\n\t\"angmsdah;\": \"\u29AF\",\n\t\"angrtvbd;\": \"\u299D\",\n\t\"approxeq;\": \"\u224A\",\n\t\"awconint;\": \"\u2233\",\n\t\"backcong;\": \"\u224C\",\n\t\"barwedge;\": \"\u2305\",\n\t\"bbrktbrk;\": \"\u23B6\",\n\t\"bigoplus;\": \"\u2A01\",\n\t\"bigsqcup;\": \"\u2A06\",\n\t\"biguplus;\": \"\u2A04\",\n\t\"bigwedge;\": \"\u22C0\",\n\t\"boxminus;\": \"\u229F\",\n\t\"boxtimes;\": \"\u22A0\",\n\t\"bsolhsub;\": \"\u27C8\",\n\t\"capbrcup;\": \"\u2A49\",\n\t\"circledR;\": \"\u00AE\",\n\t\"circledS;\": \"\u24C8\",\n\t\"cirfnint;\": \"\u2A10\",\n\t\"clubsuit;\": \"\u2663\",\n\t\"cupbrcap;\": \"\u2A48\",\n\t\"curlyvee;\": \"\u22CE\",\n\t\"cwconint;\": \"\u2232\",\n\t\"DDotrahd;\": \"\u2911\",\n\t\"doteqdot;\": \"\u2251\",\n\t\"DotEqual;\": \"\u2250\",\n\t\"dotminus;\": \"\u2238\",\n\t\"drbkarow;\": \"\u2910\",\n\t\"dzigrarr;\": \"\u27FF\",\n\t\"elinters;\": \"\u23E7\",\n\t\"emptyset;\": \"\u2205\",\n\t\"eqvparsl;\": \"\u29E5\",\n\t\"fpartint;\": \"\u2A0D\",\n\t\"geqslant;\": \"\u2A7E\",\n\t\"gesdotol;\": \"\u2A84\",\n\t\"gnapprox;\": \"\u2A8A\",\n\t\"hksearow;\": \"\u2925\",\n\t\"hkswarow;\": \"\u2926\",\n\t\"imagline;\": \"\u2110\",\n\t\"imagpart;\": \"\u2111\",\n\t\"infintie;\": \"\u29DD\",\n\t\"integers;\": \"\u2124\",\n\t\"Integral;\": \"\u222B\",\n\t\"intercal;\": \"\u22BA\",\n\t\"intlarhk;\": \"\u2A17\",\n\t\"laemptyv;\": \"\u29B4\",\n\t\"ldrushar;\": \"\u294B\",\n\t\"leqslant;\": \"\u2A7D\",\n\t\"lesdotor;\": \"\u2A83\",\n\t\"LessLess;\": \"\u2AA1\",\n\t\"llcorner;\": \"\u231E\",\n\t\"lnapprox;\": \"\u2A89\",\n\t\"lrcorner;\": \"\u231F\",\n\t\"lurdshar;\": \"\u294A\",\n\t\"mapstoup;\": \"\u21A5\",\n\t\"multimap;\": \"\u22B8\",\n\t\"naturals;\": \"\u2115\",\n\t\"ncongdot;\": \"\u2A6D\u0338\",\n\t\"NotEqual;\": \"\u2260\",\n\t\"notindot;\": \"\u22F5\u0338\",\n\t\"NotTilde;\": \"\u2241\",\n\t\"otimesas;\": \"\u2A36\",\n\t\"parallel;\": \"\u2225\",\n\t\"PartialD;\": \"\u2202\",\n\t\"plusacir;\": \"\u2A23\",\n\t\"pointint;\": \"\u2A15\",\n\t\"Precedes;\": \"\u227A\",\n\t\"precneqq;\": \"\u2AB5\",\n\t\"precnsim;\": \"\u22E8\",\n\t\"profalar;\": \"\u232E\",\n\t\"profline;\": \"\u2312\",\n\t\"profsurf;\": \"\u2313\",\n\t\"raemptyv;\": \"\u29B3\",\n\t\"realpart;\": \"\u211C\",\n\t\"RightTee;\": \"\u22A2\",\n\t\"rppolint;\": \"\u2A12\",\n\t\"rtriltri;\": \"\u29CE\",\n\t\"scpolint;\": \"\u2A13\",\n\t\"setminus;\": \"\u2216\",\n\t\"shortmid;\": \"\u2223\",\n\t\"smeparsl;\": \"\u29E4\",\n\t\"sqsubset;\": \"\u228F\",\n\t\"sqsupset;\": \"\u2290\",\n\t\"subseteq;\": \"\u2286\",\n\t\"Succeeds;\": \"\u227B\",\n\t\"succneqq;\": \"\u2AB6\",\n\t\"succnsim;\": \"\u22E9\",\n\t\"SuchThat;\": \"\u220B\",\n\t\"Superset;\": \"\u2283\",\n\t\"supseteq;\": \"\u2287\",\n\t\"thetasym;\": \"\u03D1\",\n\t\"thicksim;\": \"\u223C\",\n\t\"timesbar;\": \"\u2A31\",\n\t\"triangle;\": \"\u25B5\",\n\t\"triminus;\": \"\u2A3A\",\n\t\"trpezium;\": \"\u23E2\",\n\t\"Uarrocir;\": \"\u2949\",\n\t\"ulcorner;\": \"\u231C\",\n\t\"UnderBar;\": \"_\",\n\t\"urcorner;\": \"\u231D\",\n\t\"varkappa;\": \"\u03F0\",\n\t\"varsigma;\": \"\u03C2\",\n\t\"vartheta;\": \"\u03D1\",\n\t\"backprime;\": \"\u2035\",\n\t\"backsimeq;\": \"\u22CD\",\n\t\"Backslash;\": \"\u2216\",\n\t\"bigotimes;\": \"\u2A02\",\n\t\"CenterDot;\": \"\u00B7\",\n\t\"centerdot;\": \"\u00B7\",\n\t\"checkmark;\": \"\u2713\",\n\t\"CircleDot;\": \"\u2299\",\n\t\"complexes;\": \"\u2102\",\n\t\"Congruent;\": \"\u2261\",\n\t\"Coproduct;\": \"\u2210\",\n\t\"dotsquare;\": \"\u22A1\",\n\t\"DoubleDot;\": \"\u00A8\",\n\t\"DownArrow;\": \"\u2193\",\n\t\"Downarrow;\": \"\u21D3\",\n\t\"downarrow;\": \"\u2193\",\n\t\"DownBreve;\": \"\u0311\",\n\t\"gtrapprox;\": \"\u2A86\",\n\t\"gtreqless;\": \"\u22DB\",\n\t\"gvertneqq;\": \"\u2269\uFE00\",\n\t\"heartsuit;\": \"\u2665\",\n\t\"HumpEqual;\": \"\u224F\",\n\t\"LeftArrow;\": \"\u2190\",\n\t\"Leftarrow;\": \"\u21D0\",\n\t\"leftarrow;\": \"\u2190\",\n\t\"LeftFloor;\": \"\u230A\",\n\t\"lesseqgtr;\": \"\u22DA\",\n\t\"LessTilde;\": \"\u2272\",\n\t\"lvertneqq;\": \"\u2268\uFE00\",\n\t\"Mellintrf;\": \"\u2133\",\n\t\"MinusPlus;\": \"\u2213\",\n\t\"ngeqslant;\": \"\u2A7E\u0338\",\n\t\"nleqslant;\": \"\u2A7D\u0338\",\n\t\"NotCupCap;\": \"\u226D\",\n\t\"NotExists;\": \"\u2204\",\n\t\"NotSubset;\": \"\u2282\u20D2\",\n\t\"nparallel;\": \"\u2226\",\n\t\"nshortmid;\": \"\u2224\",\n\t\"nsubseteq;\": \"\u2288\",\n\t\"nsupseteq;\": \"\u2289\",\n\t\"OverBrace;\": \"\u23DE\",\n\t\"pitchfork;\": \"\u22D4\",\n\t\"PlusMinus;\": \"\u00B1\",\n\t\"rationals;\": \"\u211A\",\n\t\"spadesuit;\": \"\u2660\",\n\t\"subseteqq;\": \"\u2AC5\",\n\t\"subsetneq;\": \"\u228A\",\n\t\"supseteqq;\": \"\u2AC6\",\n\t\"supsetneq;\": \"\u228B\",\n\t\"Therefore;\": \"\u2234\",\n\t\"therefore;\": \"\u2234\",\n\t\"ThinSpace;\": \"\u2009\",\n\t\"triangleq;\": \"\u225C\",\n\t\"TripleDot;\": \"\u20DB\",\n\t\"UnionPlus;\": \"\u228E\",\n\t\"varpropto;\": \"\u221D\",\n\t\"Bernoullis;\": \"\u212C\",\n\t\"circledast;\": \"\u229B\",\n\t\"CirclePlus;\": \"\u2295\",\n\t\"complement;\": \"\u2201\",\n\t\"curlywedge;\": \"\u22CF\",\n\t\"eqslantgtr;\": \"\u2A96\",\n\t\"EqualTilde;\": \"\u2242\",\n\t\"Fouriertrf;\": \"\u2131\",\n\t\"gtreqqless;\": \"\u2A8C\",\n\t\"ImaginaryI;\": \"\u2148\",\n\t\"Laplacetrf;\": \"\u2112\",\n\t\"LeftVector;\": \"\u21BC\",\n\t\"lessapprox;\": \"\u2A85\",\n\t\"lesseqqgtr;\": \"\u2A8B\",\n\t\"Lleftarrow;\": \"\u21DA\",\n\t\"lmoustache;\": \"\u23B0\",\n\t\"longmapsto;\": \"\u27FC\",\n\t\"mapstodown;\": \"\u21A7\",\n\t\"mapstoleft;\": \"\u21A4\",\n\t\"nLeftarrow;\": \"\u21CD\",\n\t\"nleftarrow;\": \"\u219A\",\n\t\"NotElement;\": \"\u2209\",\n\t\"NotGreater;\": \"\u226F\",\n\t\"nsubseteqq;\": \"\u2AC5\u0338\",\n\t\"nsupseteqq;\": \"\u2AC6\u0338\",\n\t\"precapprox;\": \"\u2AB7\",\n\t\"Proportion;\": \"\u2237\",\n\t\"RightArrow;\": \"\u2192\",\n\t\"Rightarrow;\": \"\u21D2\",\n\t\"rightarrow;\": \"\u2192\",\n\t\"RightFloor;\": \"\u230B\",\n\t\"rmoustache;\": \"\u23B1\",\n\t\"sqsubseteq;\": \"\u2291\",\n\t\"sqsupseteq;\": \"\u2292\",\n\t\"subsetneqq;\": \"\u2ACB\",\n\t\"succapprox;\": \"\u2AB8\",\n\t\"supsetneqq;\": \"\u2ACC\",\n\t\"ThickSpace;\": \"\u205F\u200A\",\n\t\"TildeEqual;\": \"\u2243\",\n\t\"TildeTilde;\": \"\u2248\",\n\t\"UnderBrace;\": \"\u23DF\",\n\t\"UpArrowBar;\": \"\u2912\",\n\t\"UpTeeArrow;\": \"\u21A5\",\n\t\"upuparrows;\": \"\u21C8\",\n\t\"varepsilon;\": \"\u03F5\",\n\t\"varnothing;\": \"\u2205\",\n\t\"backepsilon;\": \"\u03F6\",\n\t\"blacksquare;\": \"\u25AA\",\n\t\"circledcirc;\": \"\u229A\",\n\t\"circleddash;\": \"\u229D\",\n\t\"CircleMinus;\": \"\u2296\",\n\t\"CircleTimes;\": \"\u2297\",\n\t\"curlyeqprec;\": \"\u22DE\",\n\t\"curlyeqsucc;\": \"\u22DF\",\n\t\"diamondsuit;\": \"\u2666\",\n\t\"eqslantless;\": \"\u2A95\",\n\t\"Equilibrium;\": \"\u21CC\",\n\t\"expectation;\": \"\u2130\",\n\t\"GreaterLess;\": \"\u2277\",\n\t\"LeftCeiling;\": \"\u2308\",\n\t\"LessGreater;\": \"\u2276\",\n\t\"MediumSpace;\": \"\u205F\",\n\t\"NotLessLess;\": \"\u226A\u0338\",\n\t\"NotPrecedes;\": \"\u2280\",\n\t\"NotSucceeds;\": \"\u2281\",\n\t\"NotSuperset;\": \"\u2283\u20D2\",\n\t\"nRightarrow;\": \"\u21CF\",\n\t\"nrightarrow;\": \"\u219B\",\n\t\"OverBracket;\": \"\u23B4\",\n\t\"preccurlyeq;\": \"\u227C\",\n\t\"precnapprox;\": \"\u2AB9\",\n\t\"quaternions;\": \"\u210D\",\n\t\"RightVector;\": \"\u21C0\",\n\t\"Rrightarrow;\": \"\u21DB\",\n\t\"RuleDelayed;\": \"\u29F4\",\n\t\"SmallCircle;\": \"\u2218\",\n\t\"SquareUnion;\": \"\u2294\",\n\t\"straightphi;\": \"\u03D5\",\n\t\"SubsetEqual;\": \"\u2286\",\n\t\"succcurlyeq;\": \"\u227D\",\n\t\"succnapprox;\": \"\u2ABA\",\n\t\"thickapprox;\": \"\u2248\",\n\t\"UpDownArrow;\": \"\u2195\",\n\t\"Updownarrow;\": \"\u21D5\",\n\t\"updownarrow;\": \"\u2195\",\n\t\"VerticalBar;\": \"\u2223\",\n\t\"blacklozenge;\": \"\u29EB\",\n\t\"DownArrowBar;\": \"\u2913\",\n\t\"DownTeeArrow;\": \"\u21A7\",\n\t\"ExponentialE;\": \"\u2147\",\n\t\"exponentiale;\": \"\u2147\",\n\t\"GreaterEqual;\": \"\u2265\",\n\t\"GreaterTilde;\": \"\u2273\",\n\t\"HilbertSpace;\": \"\u210B\",\n\t\"HumpDownHump;\": \"\u224E\",\n\t\"Intersection;\": \"\u22C2\",\n\t\"LeftArrowBar;\": \"\u21E4\",\n\t\"LeftTeeArrow;\": \"\u21A4\",\n\t\"LeftTriangle;\": \"\u22B2\",\n\t\"LeftUpVector;\": \"\u21BF\",\n\t\"NotCongruent;\": \"\u2262\",\n\t\"NotHumpEqual;\": \"\u224F\u0338\",\n\t\"NotLessEqual;\": \"\u2270\",\n\t\"NotLessTilde;\": \"\u2274\",\n\t\"Proportional;\": \"\u221D\",\n\t\"RightCeiling;\": \"\u2309\",\n\t\"risingdotseq;\": \"\u2253\",\n\t\"RoundImplies;\": \"\u2970\",\n\t\"ShortUpArrow;\": \"\u2191\",\n\t\"SquareSubset;\": \"\u228F\",\n\t\"triangledown;\": \"\u25BF\",\n\t\"triangleleft;\": \"\u25C3\",\n\t\"UnderBracket;\": \"\u23B5\",\n\t\"varsubsetneq;\": \"\u228A\uFE00\",\n\t\"varsupsetneq;\": \"\u228B\uFE00\",\n\t\"VerticalLine;\": \"|\",\n\t\"ApplyFunction;\": \"\u2061\",\n\t\"bigtriangleup;\": \"\u25B3\",\n\t\"blacktriangle;\": \"\u25B4\",\n\t\"DifferentialD;\": \"\u2146\",\n\t\"divideontimes;\": \"\u22C7\",\n\t\"DoubleLeftTee;\": \"\u2AE4\",\n\t\"DoubleUpArrow;\": \"\u21D1\",\n\t\"fallingdotseq;\": \"\u2252\",\n\t\"hookleftarrow;\": \"\u21A9\",\n\t\"leftarrowtail;\": \"\u21A2\",\n\t\"leftharpoonup;\": \"\u21BC\",\n\t\"LeftTeeVector;\": \"\u295A\",\n\t\"LeftVectorBar;\": \"\u2952\",\n\t\"LessFullEqual;\": \"\u2266\",\n\t\"LongLeftArrow;\": \"\u27F5\",\n\t\"Longleftarrow;\": \"\u27F8\",\n\t\"longleftarrow;\": \"\u27F5\",\n\t\"looparrowleft;\": \"\u21AB\",\n\t\"measuredangle;\": \"\u2221\",\n\t\"NotEqualTilde;\": \"\u2242\u0338\",\n\t\"NotTildeEqual;\": \"\u2244\",\n\t\"NotTildeTilde;\": \"\u2249\",\n\t\"ntriangleleft;\": \"\u22EA\",\n\t\"Poincareplane;\": \"\u210C\",\n\t\"PrecedesEqual;\": \"\u2AAF\",\n\t\"PrecedesTilde;\": \"\u227E\",\n\t\"RightArrowBar;\": \"\u21E5\",\n\t\"RightTeeArrow;\": \"\u21A6\",\n\t\"RightTriangle;\": \"\u22B3\",\n\t\"RightUpVector;\": \"\u21BE\",\n\t\"shortparallel;\": \"\u2225\",\n\t\"smallsetminus;\": \"\u2216\",\n\t\"SucceedsEqual;\": \"\u2AB0\",\n\t\"SucceedsTilde;\": \"\u227F\",\n\t\"SupersetEqual;\": \"\u2287\",\n\t\"triangleright;\": \"\u25B9\",\n\t\"UpEquilibrium;\": \"\u296E\",\n\t\"upharpoonleft;\": \"\u21BF\",\n\t\"varsubsetneqq;\": \"\u2ACB\uFE00\",\n\t\"varsupsetneqq;\": \"\u2ACC\uFE00\",\n\t\"VerticalTilde;\": \"\u2240\",\n\t\"VeryThinSpace;\": \"\u200A\",\n\t\"curvearrowleft;\": \"\u21B6\",\n\t\"DiacriticalDot;\": \"\u02D9\",\n\t\"doublebarwedge;\": \"\u2306\",\n\t\"DoubleRightTee;\": \"\u22A8\",\n\t\"downdownarrows;\": \"\u21CA\",\n\t\"DownLeftVector;\": \"\u21BD\",\n\t\"GreaterGreater;\": \"\u2AA2\",\n\t\"hookrightarrow;\": \"\u21AA\",\n\t\"HorizontalLine;\": \"\u2500\",\n\t\"InvisibleComma;\": \"\u2063\",\n\t\"InvisibleTimes;\": \"\u2062\",\n\t\"LeftDownVector;\": \"\u21C3\",\n\t\"leftleftarrows;\": \"\u21C7\",\n\t\"LeftRightArrow;\": \"\u2194\",\n\t\"Leftrightarrow;\": \"\u21D4\",\n\t\"leftrightarrow;\": \"\u2194\",\n\t\"leftthreetimes;\": \"\u22CB\",\n\t\"LessSlantEqual;\": \"\u2A7D\",\n\t\"LongRightArrow;\": \"\u27F6\",\n\t\"Longrightarrow;\": \"\u27F9\",\n\t\"longrightarrow;\": \"\u27F6\",\n\t\"looparrowright;\": \"\u21AC\",\n\t\"LowerLeftArrow;\": \"\u2199\",\n\t\"NestedLessLess;\": \"\u226A\",\n\t\"NotGreaterLess;\": \"\u2279\",\n\t\"NotLessGreater;\": \"\u2278\",\n\t\"NotSubsetEqual;\": \"\u2288\",\n\t\"NotVerticalBar;\": \"\u2224\",\n\t\"nshortparallel;\": \"\u2226\",\n\t\"ntriangleright;\": \"\u22EB\",\n\t\"OpenCurlyQuote;\": \"\u2018\",\n\t\"ReverseElement;\": \"\u220B\",\n\t\"rightarrowtail;\": \"\u21A3\",\n\t\"rightharpoonup;\": \"\u21C0\",\n\t\"RightTeeVector;\": \"\u295B\",\n\t\"RightVectorBar;\": \"\u2953\",\n\t\"ShortDownArrow;\": \"\u2193\",\n\t\"ShortLeftArrow;\": \"\u2190\",\n\t\"SquareSuperset;\": \"\u2290\",\n\t\"TildeFullEqual;\": \"\u2245\",\n\t\"trianglelefteq;\": \"\u22B4\",\n\t\"upharpoonright;\": \"\u21BE\",\n\t\"UpperLeftArrow;\": \"\u2196\",\n\t\"ZeroWidthSpace;\": \"\u200B\",\n\t\"bigtriangledown;\": \"\u25BD\",\n\t\"circlearrowleft;\": \"\u21BA\",\n\t\"CloseCurlyQuote;\": \"\u2019\",\n\t\"ContourIntegral;\": \"\u222E\",\n\t\"curvearrowright;\": \"\u21B7\",\n\t\"DoubleDownArrow;\": \"\u21D3\",\n\t\"DoubleLeftArrow;\": \"\u21D0\",\n\t\"downharpoonleft;\": \"\u21C3\",\n\t\"DownRightVector;\": \"\u21C1\",\n\t\"leftharpoondown;\": \"\u21BD\",\n\t\"leftrightarrows;\": \"\u21C6\",\n\t\"LeftRightVector;\": \"\u294E\",\n\t\"LeftTriangleBar;\": \"\u29CF\",\n\t\"LeftUpTeeVector;\": \"\u2960\",\n\t\"LeftUpVectorBar;\": \"\u2958\",\n\t\"LowerRightArrow;\": \"\u2198\",\n\t\"nLeftrightarrow;\": \"\u21CE\",\n\t\"nleftrightarrow;\": \"\u21AE\",\n\t\"NotGreaterEqual;\": \"\u2271\",\n\t\"NotGreaterTilde;\": \"\u2275\",\n\t\"NotHumpDownHump;\": \"\u224E\u0338\",\n\t\"NotLeftTriangle;\": \"\u22EA\",\n\t\"NotSquareSubset;\": \"\u228F\u0338\",\n\t\"ntrianglelefteq;\": \"\u22EC\",\n\t\"OverParenthesis;\": \"\u23DC\",\n\t\"RightDownVector;\": \"\u21C2\",\n\t\"rightleftarrows;\": \"\u21C4\",\n\t\"rightsquigarrow;\": \"\u219D\",\n\t\"rightthreetimes;\": \"\u22CC\",\n\t\"ShortRightArrow;\": \"\u2192\",\n\t\"straightepsilon;\": \"\u03F5\",\n\t\"trianglerighteq;\": \"\u22B5\",\n\t\"UpperRightArrow;\": \"\u2197\",\n\t\"vartriangleleft;\": \"\u22B2\",\n\t\"circlearrowright;\": \"\u21BB\",\n\t\"DiacriticalAcute;\": \"\u00B4\",\n\t\"DiacriticalGrave;\": \"`\",\n\t\"DiacriticalTilde;\": \"\u02DC\",\n\t\"DoubleRightArrow;\": \"\u21D2\",\n\t\"DownArrowUpArrow;\": \"\u21F5\",\n\t\"downharpoonright;\": \"\u21C2\",\n\t\"EmptySmallSquare;\": \"\u25FB\",\n\t\"GreaterEqualLess;\": \"\u22DB\",\n\t\"GreaterFullEqual;\": \"\u2267\",\n\t\"LeftAngleBracket;\": \"\u27E8\",\n\t\"LeftUpDownVector;\": \"\u2951\",\n\t\"LessEqualGreater;\": \"\u22DA\",\n\t\"NonBreakingSpace;\": \"\u00A0\",\n\t\"NotPrecedesEqual;\": \"\u2AAF\u0338\",\n\t\"NotRightTriangle;\": \"\u22EB\",\n\t\"NotSucceedsEqual;\": \"\u2AB0\u0338\",\n\t\"NotSucceedsTilde;\": \"\u227F\u0338\",\n\t\"NotSupersetEqual;\": \"\u2289\",\n\t\"ntrianglerighteq;\": \"\u22ED\",\n\t\"rightharpoondown;\": \"\u21C1\",\n\t\"rightrightarrows;\": \"\u21C9\",\n\t\"RightTriangleBar;\": \"\u29D0\",\n\t\"RightUpTeeVector;\": \"\u295C\",\n\t\"RightUpVectorBar;\": \"\u2954\",\n\t\"twoheadleftarrow;\": \"\u219E\",\n\t\"UnderParenthesis;\": \"\u23DD\",\n\t\"UpArrowDownArrow;\": \"\u21C5\",\n\t\"vartriangleright;\": \"\u22B3\",\n\t\"blacktriangledown;\": \"\u25BE\",\n\t\"blacktriangleleft;\": \"\u25C2\",\n\t\"DoubleUpDownArrow;\": \"\u21D5\",\n\t\"DoubleVerticalBar;\": \"\u2225\",\n\t\"DownLeftTeeVector;\": \"\u295E\",\n\t\"DownLeftVectorBar;\": \"\u2956\",\n\t\"FilledSmallSquare;\": \"\u25FC\",\n\t\"GreaterSlantEqual;\": \"\u2A7E\",\n\t\"LeftDoubleBracket;\": \"\u27E6\",\n\t\"LeftDownTeeVector;\": \"\u2961\",\n\t\"LeftDownVectorBar;\": \"\u2959\",\n\t\"leftrightharpoons;\": \"\u21CB\",\n\t\"LeftTriangleEqual;\": \"\u22B4\",\n\t\"NegativeThinSpace;\": \"\u200B\",\n\t\"NotGreaterGreater;\": \"\u226B\u0338\",\n\t\"NotLessSlantEqual;\": \"\u2A7D\u0338\",\n\t\"NotNestedLessLess;\": \"\u2AA1\u0338\",\n\t\"NotReverseElement;\": \"\u220C\",\n\t\"NotSquareSuperset;\": \"\u2290\u0338\",\n\t\"NotTildeFullEqual;\": \"\u2247\",\n\t\"RightAngleBracket;\": \"\u27E9\",\n\t\"rightleftharpoons;\": \"\u21CC\",\n\t\"RightUpDownVector;\": \"\u294F\",\n\t\"SquareSubsetEqual;\": \"\u2291\",\n\t\"twoheadrightarrow;\": \"\u21A0\",\n\t\"VerticalSeparator;\": \"\u2758\",\n\t\"blacktriangleright;\": \"\u25B8\",\n\t\"DownRightTeeVector;\": \"\u295F\",\n\t\"DownRightVectorBar;\": \"\u2957\",\n\t\"LongLeftRightArrow;\": \"\u27F7\",\n\t\"Longleftrightarrow;\": \"\u27FA\",\n\t\"longleftrightarrow;\": \"\u27F7\",\n\t\"NegativeThickSpace;\": \"\u200B\",\n\t\"NotLeftTriangleBar;\": \"\u29CF\u0338\",\n\t\"PrecedesSlantEqual;\": \"\u227C\",\n\t\"ReverseEquilibrium;\": \"\u21CB\",\n\t\"RightDoubleBracket;\": \"\u27E7\",\n\t\"RightDownTeeVector;\": \"\u295D\",\n\t\"RightDownVectorBar;\": \"\u2955\",\n\t\"RightTriangleEqual;\": \"\u22B5\",\n\t\"SquareIntersection;\": \"\u2293\",\n\t\"SucceedsSlantEqual;\": \"\u227D\",\n\t\"DoubleLongLeftArrow;\": \"\u27F8\",\n\t\"DownLeftRightVector;\": \"\u2950\",\n\t\"LeftArrowRightArrow;\": \"\u21C6\",\n\t\"leftrightsquigarrow;\": \"\u21AD\",\n\t\"NegativeMediumSpace;\": \"\u200B\",\n\t\"NotGreaterFullEqual;\": \"\u2267\u0338\",\n\t\"NotRightTriangleBar;\": \"\u29D0\u0338\",\n\t\"RightArrowLeftArrow;\": \"\u21C4\",\n\t\"SquareSupersetEqual;\": \"\u2292\",\n\t\"CapitalDifferentialD;\": \"\u2145\",\n\t\"DoubleLeftRightArrow;\": \"\u21D4\",\n\t\"DoubleLongRightArrow;\": \"\u27F9\",\n\t\"EmptyVerySmallSquare;\": \"\u25AB\",\n\t\"NestedGreaterGreater;\": \"\u226B\",\n\t\"NotDoubleVerticalBar;\": \"\u2226\",\n\t\"NotGreaterSlantEqual;\": \"\u2A7E\u0338\",\n\t\"NotLeftTriangleEqual;\": \"\u22EC\",\n\t\"NotSquareSubsetEqual;\": \"\u22E2\",\n\t\"OpenCurlyDoubleQuote;\": \"\u201C\",\n\t\"ReverseUpEquilibrium;\": \"\u296F\",\n\t\"CloseCurlyDoubleQuote;\": \"\u201D\",\n\t\"DoubleContourIntegral;\": \"\u222F\",\n\t\"FilledVerySmallSquare;\": \"\u25AA\",\n\t\"NegativeVeryThinSpace;\": \"\u200B\",\n\t\"NotPrecedesSlantEqual;\": \"\u22E0\",\n\t\"NotRightTriangleEqual;\": \"\u22ED\",\n\t\"NotSucceedsSlantEqual;\": \"\u22E1\",\n\t\"DiacriticalDoubleAcute;\": \"\u02DD\",\n\t\"NotSquareSupersetEqual;\": \"\u22E3\",\n\t\"NotNestedGreaterGreater;\": \"\u2AA2\u0338\",\n\t\"ClockwiseContourIntegral;\": \"\u2232\",\n\t\"DoubleLongLeftRightArrow;\": \"\u27FA\",\n\t\"CounterClockwiseContourIntegral;\": \"\u2233\"\n};\n\n// lazy compute this to make this file tree-shakable for browser\r\nlet maxCRNameLength;\r\nconst decodeHtml = (rawText, asAttr) => {\r\n    let offset = 0;\r\n    const end = rawText.length;\r\n    let decodedText = '';\r\n    function advance(length) {\r\n        offset += length;\r\n        rawText = rawText.slice(length);\r\n    }\r\n    while (offset < end) {\r\n        const head = /&(?:#x?)?/i.exec(rawText);\r\n        if (!head || offset + head.index >= end) {\r\n            const remaining = end - offset;\r\n            decodedText += rawText.slice(0, remaining);\r\n            advance(remaining);\r\n            break;\r\n        }\r\n        // Advance to the \"&\".\r\n        decodedText += rawText.slice(0, head.index);\r\n        advance(head.index);\r\n        if (head[0] === '&') {\r\n            // Named character reference.\r\n            let name = '';\r\n            let value = undefined;\r\n            if (/[0-9a-z]/i.test(rawText[1])) {\r\n                if (!maxCRNameLength) {\r\n                    maxCRNameLength = Object.keys(namedCharacterReferences).reduce((max, name) => Math.max(max, name.length), 0);\r\n                }\r\n                for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n                    name = rawText.slice(1, 1 + length);\r\n                    value = namedCharacterReferences[name];\r\n                }\r\n                if (value) {\r\n                    const semi = name.endsWith(';');\r\n                    if (asAttr &&\r\n                        !semi &&\r\n                        /[=a-z0-9]/i.test(rawText[name.length + 1] || '')) {\r\n                        decodedText += '&' + name;\r\n                        advance(1 + name.length);\r\n                    }\r\n                    else {\r\n                        decodedText += value;\r\n                        advance(1 + name.length);\r\n                    }\r\n                }\r\n                else {\r\n                    decodedText += '&' + name;\r\n                    advance(1 + name.length);\r\n                }\r\n            }\r\n            else {\r\n                decodedText += '&';\r\n                advance(1);\r\n            }\r\n        }\r\n        else {\r\n            // Numeric character reference.\r\n            const hex = head[0] === '&#x';\r\n            const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n            const body = pattern.exec(rawText);\r\n            if (!body) {\r\n                decodedText += head[0];\r\n                advance(head[0].length);\r\n            }\r\n            else {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\n                let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n                if (cp === 0) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp > 0x10ffff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp >= 0xd800 && cp <= 0xdfff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) ;\r\n                else if ((cp >= 0x01 && cp <= 0x08) ||\r\n                    cp === 0x0b ||\r\n                    (cp >= 0x0d && cp <= 0x1f) ||\r\n                    (cp >= 0x7f && cp <= 0x9f)) {\r\n                    cp = CCR_REPLACEMENTS[cp] || cp;\r\n                }\r\n                decodedText += String.fromCodePoint(cp);\r\n                advance(body[0].length);\r\n            }\r\n        }\r\n    }\r\n    return decodedText;\r\n};\r\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\nconst CCR_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\n\nconst isRawTextContainer = /*#__PURE__*/ shared.makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag: shared.isVoidTag,\r\n    isNativeTag: tag => shared.isHTMLTag(tag) || shared.isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtml,\r\n    isBuiltInComponent: (tag) => {\r\n        if (compilerCore.isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (compilerCore.isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* DOMNamespaces.HTML */;\r\n        if (parent && ns === 2 /* DOMNamespaces.MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* DOMNamespaces.SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* DOMNamespaces.HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* DOMNamespaces.HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* DOMNamespaces.SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* DOMNamespaces.HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* DOMNamespaces.HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* DOMNamespaces.SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* DOMNamespaces.MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* DOMNamespaces.HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* TextModes.RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* TextModes.RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* TextModes.DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* NodeTypes.DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: compilerCore.createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = shared.parseStringStyle(cssText);\r\n    return compilerCore.createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return compilerCore.createCompilerError(code, loc, DOMErrorMessages );\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* DOMErrorCodes.X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* DOMErrorCodes.X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* DOMErrorCodes.X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* DOMErrorCodes.X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* DOMErrorCodes.X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* DOMErrorCodes.X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            compilerCore.createObjectProperty(compilerCore.createSimpleExpression(`innerHTML`, true, loc), exp || compilerCore.createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* DOMErrorCodes.X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* DOMErrorCodes.X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            compilerCore.createObjectProperty(compilerCore.createSimpleExpression(`textContent`, true), exp\r\n                ? compilerCore.getConstantType(exp, context) > 0\r\n                    ? exp\r\n                    : compilerCore.createCallExpression(context.helperString(compilerCore.TO_DISPLAY_STRING), [exp], loc)\r\n                : compilerCore.createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = compilerCore.transformModel(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = compilerCore.findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = compilerCore.findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (compilerCore.hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ shared.makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ shared.makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ shared.makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ shared.makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (modifier === 'native' &&\r\n            compilerCore.checkCompatEnabled(\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */, context, loc)) {\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (compilerCore.isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = compilerCore.isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? compilerCore.createSimpleExpression(event, true)\r\n        : key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */\r\n            ? compilerCore.createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return compilerCore.transformOn(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!compilerCore.isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(shared.capitalize).join('');\r\n            key = compilerCore.isStaticExp(key)\r\n                ? compilerCore.createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : compilerCore.createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [compilerCore.createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst transformTransition = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (!node.children.length) {\r\n                    return;\r\n                }\r\n                // warn multiple transition children\r\n                if (hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(59 /* DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n                // check if it's s single child w/ v-show\r\n                // if yes, inject \"persisted: true\" to the transition props\r\n                const child = node.children[0];\r\n                if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n                    for (const p of child.props) {\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'show') {\r\n                            node.props.push({\r\n                                type: 6 /* NodeTypes.ATTRIBUTE */,\r\n                                name: 'persisted',\r\n                                value: undefined,\r\n                                loc: node.loc\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */ &&\r\n        !(c.type === 2 /* NodeTypes.TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* NodeTypes.FOR */ ||\r\n        (child.type === 9 /* NodeTypes.IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\n/**\r\n * This module is Node-only.\r\n */\r\n/**\r\n * Regex for replacing placeholders for embedded constant variables\r\n * (e.g. import URL string constants generated by compiler-sfc)\r\n */\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\r\n/**\r\n * Turn eligible hoisted static trees into stringified static nodes, e.g.\r\n *\r\n * ```js\r\n * const _hoisted_1 = createStaticVNode(`<div class=\"foo\">bar</div>`)\r\n * ```\r\n *\r\n * A single static vnode can contain stringified content for **multiple**\r\n * consecutive nodes (element and plain text), called a \"chunk\".\r\n * `@vue/runtime-dom` will create the content via innerHTML in a hidden\r\n * container element and insert all the nodes in place. The call must also\r\n * provide the number of nodes contained in the chunk so that during hydration\r\n * we can know how many nodes the static vnode should adopt.\r\n *\r\n * The optimization scans a children list that contains hoisted nodes, and\r\n * tries to find the largest chunk of consecutive hoisted nodes before running\r\n * into a non-hoisted node or the end of the list. A chunk is then converted\r\n * into a single static vnode and replaces the hoisted expression of the first\r\n * node in the chunk. Other nodes in the chunk are considered \"merged\" and\r\n * therefore removed from both the hoist list and the children array.\r\n *\r\n * This optimization is only performed in Node.js.\r\n */\r\nconst stringifyStatic = (children, context, parent) => {\r\n    // bail stringification for slot content\r\n    if (context.scopes.vSlot > 0) {\r\n        return;\r\n    }\r\n    let nc = 0; // current node count\r\n    let ec = 0; // current element with binding count\r\n    const currentChunk = [];\r\n    const stringifyCurrentChunk = (currentIndex) => {\r\n        if (nc >= 20 /* StringifyThresholds.NODE_COUNT */ ||\r\n            ec >= 5 /* StringifyThresholds.ELEMENT_WITH_BINDING_COUNT */) {\r\n            // combine all currently eligible nodes into a single static vnode call\r\n            const staticCall = compilerCore.createCallExpression(context.helper(compilerCore.CREATE_STATIC), [\r\n                JSON.stringify(currentChunk.map(node => stringifyNode(node, context)).join('')).replace(expReplaceRE, `\" + $1 + \"`),\r\n                // the 2nd argument indicates the number of DOM nodes this static vnode\r\n                // will insert / hydrate\r\n                String(currentChunk.length)\r\n            ]);\r\n            // replace the first node's hoisted expression with the static vnode call\r\n            replaceHoist(currentChunk[0], staticCall, context);\r\n            if (currentChunk.length > 1) {\r\n                for (let i = 1; i < currentChunk.length; i++) {\r\n                    // for the merged nodes, set their hoisted expression to null\r\n                    replaceHoist(currentChunk[i], null, context);\r\n                }\r\n                // also remove merged nodes from children\r\n                const deleteCount = currentChunk.length - 1;\r\n                children.splice(currentIndex - currentChunk.length + 1, deleteCount);\r\n                return deleteCount;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    let i = 0;\r\n    for (; i < children.length; i++) {\r\n        const child = children[i];\r\n        const hoisted = getHoistedNode(child);\r\n        if (hoisted) {\r\n            // presence of hoisted means child must be a stringifiable node\r\n            const node = child;\r\n            const result = analyzeNode(node);\r\n            if (result) {\r\n                // node is stringifiable, record state\r\n                nc += result[0];\r\n                ec += result[1];\r\n                currentChunk.push(node);\r\n                continue;\r\n            }\r\n        }\r\n        // we only reach here if we ran into a node that is not stringifiable\r\n        // check if currently analyzed nodes meet criteria for stringification.\r\n        // adjust iteration index\r\n        i -= stringifyCurrentChunk(i);\r\n        // reset state\r\n        nc = 0;\r\n        ec = 0;\r\n        currentChunk.length = 0;\r\n    }\r\n    // in case the last node was also stringifiable\r\n    stringifyCurrentChunk(i);\r\n};\r\nconst getHoistedNode = (node) => ((node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */) ||\r\n    node.type == 12 /* NodeTypes.TEXT_CALL */) &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n    node.codegenNode.hoisted;\r\nconst dataAriaRE = /^(data|aria)-/;\r\nconst isStringifiableAttr = (name, ns) => {\r\n    return ((ns === 0 /* DOMNamespaces.HTML */\r\n        ? shared.isKnownHtmlAttr(name)\r\n        : ns === 1 /* DOMNamespaces.SVG */\r\n            ? shared.isKnownSvgAttr(name)\r\n            : false) || dataAriaRE.test(name));\r\n};\r\nconst replaceHoist = (node, replacement, context) => {\r\n    const hoistToReplace = node.codegenNode.hoisted;\r\n    context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\r\n};\r\nconst isNonStringifiable = /*#__PURE__*/ shared.makeMap(`caption,thead,tr,th,tbody,td,tfoot,colgroup,col`);\r\n/**\r\n * for a hoisted node, analyze it and return:\r\n * - false: bailed (contains non-stringifiable props or runtime constant)\r\n * - [nc, ec] where\r\n *   - nc is the number of nodes inside\r\n *   - ec is the number of element with bindings inside\r\n */\r\nfunction analyzeNode(node) {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && isNonStringifiable(node.tag)) {\r\n        return false;\r\n    }\r\n    if (node.type === 12 /* NodeTypes.TEXT_CALL */) {\r\n        return [1, 0];\r\n    }\r\n    let nc = 1; // node count\r\n    let ec = node.props.length > 0 ? 1 : 0; // element w/ binding count\r\n    let bailed = false;\r\n    const bail = () => {\r\n        bailed = true;\r\n        return false;\r\n    };\r\n    // TODO: check for cases where using innerHTML will result in different\r\n    // output compared to imperative node insertions.\r\n    // probably only need to check for most common case\r\n    // i.e. non-phrasing-content tags inside `<p>`\r\n    function walk(node) {\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            // bail on non-attr bindings\r\n            if (p.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                !isStringifiableAttr(p.name, node.ns)) {\r\n                return bail();\r\n            }\r\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind') {\r\n                // bail on non-attr bindings\r\n                if (p.arg &&\r\n                    (p.arg.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ ||\r\n                        (p.arg.isStatic && !isStringifiableAttr(p.arg.content, node.ns)))) {\r\n                    return bail();\r\n                }\r\n                if (p.exp &&\r\n                    (p.exp.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ ||\r\n                        p.exp.constType < 3 /* ConstantTypes.CAN_STRINGIFY */)) {\r\n                    return bail();\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            nc++;\r\n            const child = node.children[i];\r\n            if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n                if (child.props.length > 0) {\r\n                    ec++;\r\n                }\r\n                walk(child);\r\n                if (bailed) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return walk(node) ? [nc, ec] : false;\r\n}\r\nfunction stringifyNode(node, context) {\r\n    if (shared.isString(node)) {\r\n        return node;\r\n    }\r\n    if (shared.isSymbol(node)) {\r\n        return ``;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            return stringifyElement(node, context);\r\n        case 2 /* NodeTypes.TEXT */:\r\n            return shared.escapeHtml(node.content);\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return `<!--${shared.escapeHtml(node.content)}-->`;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            return shared.escapeHtml(shared.toDisplayString(evaluateConstant(node.content)));\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            return shared.escapeHtml(evaluateConstant(node));\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return stringifyNode(node.content, context);\r\n        default:\r\n            // static trees will not contain if/for nodes\r\n            return '';\r\n    }\r\n}\r\nfunction stringifyElement(node, context) {\r\n    let res = `<${node.tag}`;\r\n    let innerHTML = '';\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            res += ` ${p.name}`;\r\n            if (p.value) {\r\n                res += `=\"${shared.escapeHtml(p.value.content)}\"`;\r\n            }\r\n        }\r\n        else if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n            if (p.name === 'bind') {\r\n                const exp = p.exp;\r\n                if (exp.content[0] === '_') {\r\n                    // internally generated string constant references\r\n                    // e.g. imported URL strings via compiler-sfc transformAssetUrl plugin\r\n                    res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\r\n                    continue;\r\n                }\r\n                // constant v-bind, e.g. :foo=\"1\"\r\n                let evaluated = evaluateConstant(exp);\r\n                if (evaluated != null) {\r\n                    const arg = p.arg && p.arg.content;\r\n                    if (arg === 'class') {\r\n                        evaluated = shared.normalizeClass(evaluated);\r\n                    }\r\n                    else if (arg === 'style') {\r\n                        evaluated = shared.stringifyStyle(shared.normalizeStyle(evaluated));\r\n                    }\r\n                    res += ` ${p.arg.content}=\"${shared.escapeHtml(evaluated)}\"`;\r\n                }\r\n            }\r\n            else if (p.name === 'html') {\r\n                // #5439 v-html with constant value\r\n                // not sure why would anyone do this but it can happen\r\n                innerHTML = evaluateConstant(p.exp);\r\n            }\r\n            else if (p.name === 'text') {\r\n                innerHTML = shared.escapeHtml(shared.toDisplayString(evaluateConstant(p.exp)));\r\n            }\r\n        }\r\n    }\r\n    if (context.scopeId) {\r\n        res += ` ${context.scopeId}`;\r\n    }\r\n    res += `>`;\r\n    if (innerHTML) {\r\n        res += innerHTML;\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            res += stringifyNode(node.children[i], context);\r\n        }\r\n    }\r\n    if (!shared.isVoidTag(node.tag)) {\r\n        res += `</${node.tag}>`;\r\n    }\r\n    return res;\r\n}\r\n// __UNSAFE__\r\n// Reason: eval.\r\n// It's technically safe to eval because only constant expressions are possible\r\n// here, e.g. `{{ 1 }}` or `{{ 'foo' }}`\r\n// in addition, constant exps bail on presence of parens so you can't even\r\n// run JSFuck in here. But we mark it unsafe for security review purposes.\r\n// (see compiler-core/src/transforms/transformExpression)\r\nfunction evaluateConstant(exp) {\r\n    if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        return new Function(`return ${exp.content}`)();\r\n    }\r\n    else {\r\n        // compound\r\n        let res = ``;\r\n        exp.children.forEach(c => {\r\n            if (shared.isString(c) || shared.isSymbol(c)) {\r\n                return;\r\n            }\r\n            if (c.type === 2 /* NodeTypes.TEXT */) {\r\n                res += c.content;\r\n            }\r\n            else if (c.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n                res += shared.toDisplayString(evaluateConstant(c.content));\r\n            }\r\n            else {\r\n                res += evaluateConstant(c);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...([transformTransition] )\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: compilerCore.noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return compilerCore.baseCompile(template, shared.extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: shared.extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: stringifyStatic\r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return compilerCore.baseParse(template, shared.extend({}, parserOptions, options));\r\n}\n\nObject.keys(compilerCore).forEach(function (k) {\n  if (k !== 'default') exports[k] = compilerCore[k];\n});\nexports.DOMDirectiveTransforms = DOMDirectiveTransforms;\nexports.DOMNodeTransforms = DOMNodeTransforms;\nexports.TRANSITION = TRANSITION;\nexports.TRANSITION_GROUP = TRANSITION_GROUP;\nexports.V_MODEL_CHECKBOX = V_MODEL_CHECKBOX;\nexports.V_MODEL_DYNAMIC = V_MODEL_DYNAMIC;\nexports.V_MODEL_RADIO = V_MODEL_RADIO;\nexports.V_MODEL_SELECT = V_MODEL_SELECT;\nexports.V_MODEL_TEXT = V_MODEL_TEXT;\nexports.V_ON_WITH_KEYS = V_ON_WITH_KEYS;\nexports.V_ON_WITH_MODIFIERS = V_ON_WITH_MODIFIERS;\nexports.V_SHOW = V_SHOW;\nexports.compile = compile;\nexports.createDOMCompilerError = createDOMCompilerError;\nexports.parse = parse;\nexports.parserOptions = parserOptions;\nexports.transformStyle = transformStyle;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-dom.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerDom = require('@vue/compiler-dom');\nvar runtimeDom = require('@vue/runtime-dom');\nvar shared = require('@vue/shared');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar runtimeDom__namespace = /*#__PURE__*/_interopNamespace(runtimeDom);\n\n// This entry is the \"full-build\" that includes both the runtime\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!shared.isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            runtimeDom.warn(`invalid template option: `, template);\r\n            return shared.NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if (!el) {\r\n            runtimeDom.warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const opts = shared.extend({\r\n        hoistStatic: true,\r\n        onError: onError ,\r\n        onWarn: e => onError(e, true) \r\n    }, options);\r\n    if (!opts.isCustomElement && typeof customElements !== 'undefined') {\r\n        opts.isCustomElement = tag => !!customElements.get(tag);\r\n    }\r\n    const { code } = compilerDom.compile(template, opts);\r\n    function onError(err, asWarning = false) {\r\n        const message = asWarning\r\n            ? err.message\r\n            : `Template compilation error: ${err.message}`;\r\n        const codeFrame = err.loc &&\r\n            shared.generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n        runtimeDom.warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n    }\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom__namespace));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nruntimeDom.registerRuntimeCompiler(compileToFunction);\n\nObject.keys(runtimeDom).forEach(function (k) {\n  if (k !== 'default') exports[k] = runtimeDom[k];\n});\nexports.compile = compileToFunction;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/vue.cjs.prod.js')\n} else {\n  module.exports = require('./dist/vue.cjs.js')\n}\n", "/*! Sortable 1.14.0 - MIT | git://github.com/SortableJS/Sortable.git */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=t||self).Sortable=e()}(this,function(){\"use strict\";function e(e,t){var n,o=Object.keys(e);return Object.getOwnPropertySymbols&&(n=Object.getOwnPropertySymbols(e),t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),o.push.apply(o,n)),o}function A(o){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?e(Object(i),!0).forEach(function(t){var e,n;e=o,t=i[n=t],n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(i)):e(Object(i)).forEach(function(t){Object.defineProperty(o,t,Object.getOwnPropertyDescriptor(i,t))})}return o}function o(t){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,o=arguments[e];for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(t[n]=o[n])}return t}).apply(this,arguments)}function i(t,e){if(null==t)return{};var n,o=function(t,e){if(null==t)return{};for(var n,o={},i=Object.keys(t),r=0;r<i.length;r++)n=i[r],0<=e.indexOf(n)||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols)for(var i=Object.getOwnPropertySymbols(t),r=0;r<i.length;r++)n=i[r],0<=e.indexOf(n)||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n]);return o}function r(t){return function(t){if(Array.isArray(t))return l(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(t){if(\"string\"==typeof t)return l(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Map\"===(n=\"Object\"===n&&t.constructor?t.constructor.name:n)||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(t,e):void 0}}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function t(t){if(\"undefined\"!=typeof window&&window.navigator)return!!navigator.userAgent.match(t)}var y=t(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i),w=t(/Edge/i),s=t(/firefox/i),u=t(/safari/i)&&!t(/chrome/i)&&!t(/android/i),n=t(/iP(ad|od|hone)/i),c=t(/chrome/i)&&t(/android/i),d={capture:!1,passive:!1};function h(t,e,n){t.addEventListener(e,n,!y&&d)}function f(t,e,n){t.removeEventListener(e,n,!y&&d)}function p(t,e){if(e&&(\">\"===e[0]&&(e=e.substring(1)),t))try{if(t.matches)return t.matches(e);if(t.msMatchesSelector)return t.msMatchesSelector(e);if(t.webkitMatchesSelector)return t.webkitMatchesSelector(e)}catch(t){return}}function N(t,e,n,o){if(t){n=n||document;do{if(null!=e&&(\">\"!==e[0]||t.parentNode===n)&&p(t,e)||o&&t===n)return t}while(t!==n&&(t=(i=t).host&&i!==document&&i.host.nodeType?i.host:i.parentNode))}var i;return null}var g,m=/\\s+/g;function I(t,e,n){var o;t&&e&&(t.classList?t.classList[n?\"add\":\"remove\"](e):(o=(\" \"+t.className+\" \").replace(m,\" \").replace(\" \"+e+\" \",\" \"),t.className=(o+(n?\" \"+e:\"\")).replace(m,\" \")))}function P(t,e,n){var o=t&&t.style;if(o){if(void 0===n)return document.defaultView&&document.defaultView.getComputedStyle?n=document.defaultView.getComputedStyle(t,\"\"):t.currentStyle&&(n=t.currentStyle),void 0===e?n:n[e];o[e=!(e in o||-1!==e.indexOf(\"webkit\"))?\"-webkit-\"+e:e]=n+(\"string\"==typeof n?\"\":\"px\")}}function v(t,e){var n=\"\";if(\"string\"==typeof t)n=t;else do{var o=P(t,\"transform\")}while(o&&\"none\"!==o&&(n=o+\" \"+n),!e&&(t=t.parentNode));var i=window.DOMMatrix||window.WebKitCSSMatrix||window.CSSMatrix||window.MSCSSMatrix;return i&&new i(n)}function b(t,e,n){if(t){var o=t.getElementsByTagName(e),i=0,r=o.length;if(n)for(;i<r;i++)n(o[i],i);return o}return[]}function O(){var t=document.scrollingElement;return t||document.documentElement}function k(t,e,n,o,i){if(t.getBoundingClientRect||t===window){var r,a,l,s,c,u,d=t!==window&&t.parentNode&&t!==O()?(a=(r=t.getBoundingClientRect()).top,l=r.left,s=r.bottom,c=r.right,u=r.height,r.width):(l=a=0,s=window.innerHeight,c=window.innerWidth,u=window.innerHeight,window.innerWidth);if((e||n)&&t!==window&&(i=i||t.parentNode,!y))do{if(i&&i.getBoundingClientRect&&(\"none\"!==P(i,\"transform\")||n&&\"static\"!==P(i,\"position\"))){var h=i.getBoundingClientRect();a-=h.top+parseInt(P(i,\"border-top-width\")),l-=h.left+parseInt(P(i,\"border-left-width\")),s=a+r.height,c=l+r.width;break}}while(i=i.parentNode);return o&&t!==window&&(o=(e=v(i||t))&&e.a,t=e&&e.d,e&&(s=(a/=t)+(u/=t),c=(l/=o)+(d/=o))),{top:a,left:l,bottom:s,right:c,width:d,height:u}}}function R(t,e,n){for(var o=M(t,!0),i=k(t)[e];o;){var r=k(o)[n];if(!(\"top\"===n||\"left\"===n?r<=i:i<=r))return o;if(o===O())break;o=M(o,!1)}return!1}function X(t,e,n,o){for(var i=0,r=0,a=t.children;r<a.length;){if(\"none\"!==a[r].style.display&&a[r]!==Bt.ghost&&(o||a[r]!==Bt.dragged)&&N(a[r],n.draggable,t,!1)){if(i===e)return a[r];i++}r++}return null}function Y(t,e){for(var n=t.lastElementChild;n&&(n===Bt.ghost||\"none\"===P(n,\"display\")||e&&!p(n,e));)n=n.previousElementSibling;return n||null}function B(t,e){var n=0;if(!t||!t.parentNode)return-1;for(;t=t.previousElementSibling;)\"TEMPLATE\"===t.nodeName.toUpperCase()||t===Bt.clone||e&&!p(t,e)||n++;return n}function E(t){var e=0,n=0,o=O();if(t)do{var i=v(t),r=i.a,i=i.d}while(e+=t.scrollLeft*r,n+=t.scrollTop*i,t!==o&&(t=t.parentNode));return[e,n]}function M(t,e){if(!t||!t.getBoundingClientRect)return O();var n=t,o=!1;do{if(n.clientWidth<n.scrollWidth||n.clientHeight<n.scrollHeight){var i=P(n);if(n.clientWidth<n.scrollWidth&&(\"auto\"==i.overflowX||\"scroll\"==i.overflowX)||n.clientHeight<n.scrollHeight&&(\"auto\"==i.overflowY||\"scroll\"==i.overflowY)){if(!n.getBoundingClientRect||n===document.body)return O();if(o||e)return n;o=!0}}}while(n=n.parentNode);return O()}function D(t,e){return Math.round(t.top)===Math.round(e.top)&&Math.round(t.left)===Math.round(e.left)&&Math.round(t.height)===Math.round(e.height)&&Math.round(t.width)===Math.round(e.width)}function S(e,n){return function(){var t;g||(1===(t=arguments).length?e.call(this,t[0]):e.apply(this,t),g=setTimeout(function(){g=void 0},n))}}function F(t,e,n){t.scrollLeft+=e,t.scrollTop+=n}function _(t){var e=window.Polymer,n=window.jQuery||window.Zepto;return e&&e.dom?e.dom(t).cloneNode(!0):n?n(t).clone(!0)[0]:t.cloneNode(!0)}function C(t,e){P(t,\"position\",\"absolute\"),P(t,\"top\",e.top),P(t,\"left\",e.left),P(t,\"width\",e.width),P(t,\"height\",e.height)}function T(t){P(t,\"position\",\"\"),P(t,\"top\",\"\"),P(t,\"left\",\"\"),P(t,\"width\",\"\"),P(t,\"height\",\"\")}var j=\"Sortable\"+(new Date).getTime();function x(){var e,o=[];return{captureAnimationState:function(){o=[],this.options.animation&&[].slice.call(this.el.children).forEach(function(t){var e,n;\"none\"!==P(t,\"display\")&&t!==Bt.ghost&&(o.push({target:t,rect:k(t)}),e=A({},o[o.length-1].rect),!t.thisAnimationDuration||(n=v(t,!0))&&(e.top-=n.f,e.left-=n.e),t.fromRect=e)})},addAnimationState:function(t){o.push(t)},removeAnimationState:function(t){o.splice(function(t,e){for(var n in t)if(t.hasOwnProperty(n))for(var o in e)if(e.hasOwnProperty(o)&&e[o]===t[n][o])return Number(n);return-1}(o,{target:t}),1)},animateAll:function(t){var c=this;if(!this.options.animation)return clearTimeout(e),void(\"function\"==typeof t&&t());var u=!1,d=0;o.forEach(function(t){var e=0,n=t.target,o=n.fromRect,i=k(n),r=n.prevFromRect,a=n.prevToRect,l=t.rect,s=v(n,!0);s&&(i.top-=s.f,i.left-=s.e),n.toRect=i,n.thisAnimationDuration&&D(r,i)&&!D(o,i)&&(l.top-i.top)/(l.left-i.left)==(o.top-i.top)/(o.left-i.left)&&(t=l,s=r,r=a,a=c.options,e=Math.sqrt(Math.pow(s.top-t.top,2)+Math.pow(s.left-t.left,2))/Math.sqrt(Math.pow(s.top-r.top,2)+Math.pow(s.left-r.left,2))*a.animation),D(i,o)||(n.prevFromRect=o,n.prevToRect=i,e=e||c.options.animation,c.animate(n,l,i,e)),e&&(u=!0,d=Math.max(d,e),clearTimeout(n.animationResetTimer),n.animationResetTimer=setTimeout(function(){n.animationTime=0,n.prevFromRect=null,n.fromRect=null,n.prevToRect=null,n.thisAnimationDuration=null},e),n.thisAnimationDuration=e)}),clearTimeout(e),u?e=setTimeout(function(){\"function\"==typeof t&&t()},d):\"function\"==typeof t&&t(),o=[]},animate:function(t,e,n,o){var i,r;o&&(P(t,\"transition\",\"\"),P(t,\"transform\",\"\"),i=(r=v(this.el))&&r.a,r=r&&r.d,i=(e.left-n.left)/(i||1),r=(e.top-n.top)/(r||1),t.animatingX=!!i,t.animatingY=!!r,P(t,\"transform\",\"translate3d(\"+i+\"px,\"+r+\"px,0)\"),this.forRepaintDummy=t.offsetWidth,P(t,\"transition\",\"transform \"+o+\"ms\"+(this.options.easing?\" \"+this.options.easing:\"\")),P(t,\"transform\",\"translate3d(0,0,0)\"),\"number\"==typeof t.animated&&clearTimeout(t.animated),t.animated=setTimeout(function(){P(t,\"transition\",\"\"),P(t,\"transform\",\"\"),t.animated=!1,t.animatingX=!1,t.animatingY=!1},o))}}}var H=[],L={initializeByDefault:!0},K={mount:function(e){for(var t in L)!L.hasOwnProperty(t)||t in e||(e[t]=L[t]);H.forEach(function(t){if(t.pluginName===e.pluginName)throw\"Sortable: Cannot mount plugin \".concat(e.pluginName,\" more than once\")}),H.push(e)},pluginEvent:function(e,n,o){var t=this;this.eventCanceled=!1,o.cancel=function(){t.eventCanceled=!0};var i=e+\"Global\";H.forEach(function(t){n[t.pluginName]&&(n[t.pluginName][i]&&n[t.pluginName][i](A({sortable:n},o)),n.options[t.pluginName]&&n[t.pluginName][e]&&n[t.pluginName][e](A({sortable:n},o)))})},initializePlugins:function(n,o,i,t){for(var e in H.forEach(function(t){var e=t.pluginName;(n.options[e]||t.initializeByDefault)&&((t=new t(n,o,n.options)).sortable=n,t.options=n.options,n[e]=t,a(i,t.defaults))}),n.options){var r;n.options.hasOwnProperty(e)&&(void 0!==(r=this.modifyOption(n,e,n.options[e]))&&(n.options[e]=r))}},getEventProperties:function(e,n){var o={};return H.forEach(function(t){\"function\"==typeof t.eventProperties&&a(o,t.eventProperties.call(n[t.pluginName],e))}),o},modifyOption:function(e,n,o){var i;return H.forEach(function(t){e[t.pluginName]&&t.optionListeners&&\"function\"==typeof t.optionListeners[n]&&(i=t.optionListeners[n].call(e[t.pluginName],o))}),i}};function W(t){var e=t.sortable,n=t.rootEl,o=t.name,i=t.targetEl,r=t.cloneEl,a=t.toEl,l=t.fromEl,s=t.oldIndex,c=t.newIndex,u=t.oldDraggableIndex,d=t.newDraggableIndex,h=t.originalEvent,f=t.putSortable,p=t.extraEventProperties;if(e=e||n&&n[j]){var g,m=e.options,t=\"on\"+o.charAt(0).toUpperCase()+o.substr(1);!window.CustomEvent||y||w?(g=document.createEvent(\"Event\")).initEvent(o,!0,!0):g=new CustomEvent(o,{bubbles:!0,cancelable:!0}),g.to=a||n,g.from=l||n,g.item=i||n,g.clone=r,g.oldIndex=s,g.newIndex=c,g.oldDraggableIndex=u,g.newDraggableIndex=d,g.originalEvent=h,g.pullMode=f?f.lastPutMode:void 0;var v,b=A(A({},p),K.getEventProperties(o,e));for(v in b)g[v]=b[v];n&&n.dispatchEvent(g),m[t]&&m[t].call(e,g)}}function z(t,e){var n=(o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{}).evt,o=i(o,G);K.pluginEvent.bind(Bt)(t,e,A({dragEl:q,parentEl:V,ghostEl:Z,rootEl:$,nextEl:Q,lastDownEl:J,cloneEl:tt,cloneHidden:et,dragStarted:pt,putSortable:lt,activeSortable:Bt.active,originalEvent:n,oldIndex:nt,oldDraggableIndex:it,newIndex:ot,newDraggableIndex:rt,hideGhostForTarget:kt,unhideGhostForTarget:Rt,cloneNowHidden:function(){et=!0},cloneNowShown:function(){et=!1},dispatchSortableEvent:function(t){U({sortable:e,name:t,originalEvent:n})}},o))}var G=[\"evt\"];function U(t){W(A({putSortable:lt,cloneEl:tt,targetEl:q,rootEl:$,oldIndex:nt,oldDraggableIndex:it,newIndex:ot,newDraggableIndex:rt},t))}var q,V,Z,$,Q,J,tt,et,nt,ot,it,rt,at,lt,st,ct,ut,dt,ht,ft,pt,gt,mt,vt,bt,yt=!1,wt=!1,Et=[],Dt=!1,St=!1,_t=[],Ct=!1,Tt=[],xt=\"undefined\"!=typeof document,Ot=n,Mt=w||y?\"cssFloat\":\"float\",At=xt&&!c&&!n&&\"draggable\"in document.createElement(\"div\"),Nt=function(){if(xt){if(y)return!1;var t=document.createElement(\"x\");return t.style.cssText=\"pointer-events:auto\",\"auto\"===t.style.pointerEvents}}(),It=function(t,e){var n=P(t),o=parseInt(n.width)-parseInt(n.paddingLeft)-parseInt(n.paddingRight)-parseInt(n.borderLeftWidth)-parseInt(n.borderRightWidth),i=X(t,0,e),r=X(t,1,e),a=i&&P(i),l=r&&P(r),s=a&&parseInt(a.marginLeft)+parseInt(a.marginRight)+k(i).width,t=l&&parseInt(l.marginLeft)+parseInt(l.marginRight)+k(r).width;if(\"flex\"===n.display)return\"column\"===n.flexDirection||\"column-reverse\"===n.flexDirection?\"vertical\":\"horizontal\";if(\"grid\"===n.display)return n.gridTemplateColumns.split(\" \").length<=1?\"vertical\":\"horizontal\";if(i&&a.float&&\"none\"!==a.float){e=\"left\"===a.float?\"left\":\"right\";return!r||\"both\"!==l.clear&&l.clear!==e?\"horizontal\":\"vertical\"}return i&&(\"block\"===a.display||\"flex\"===a.display||\"table\"===a.display||\"grid\"===a.display||o<=s&&\"none\"===n[Mt]||r&&\"none\"===n[Mt]&&o<s+t)?\"vertical\":\"horizontal\"},Pt=function(t){function l(r,a){return function(t,e,n,o){var i=t.options.group.name&&e.options.group.name&&t.options.group.name===e.options.group.name;if(null==r&&(a||i))return!0;if(null==r||!1===r)return!1;if(a&&\"clone\"===r)return r;if(\"function\"==typeof r)return l(r(t,e,n,o),a)(t,e,n,o);e=(a?t:e).options.group.name;return!0===r||\"string\"==typeof r&&r===e||r.join&&-1<r.indexOf(e)}}var e={},n=t.group;n&&\"object\"==o(n)||(n={name:n}),e.name=n.name,e.checkPull=l(n.pull,!0),e.checkPut=l(n.put),e.revertClone=n.revertClone,t.group=e},kt=function(){!Nt&&Z&&P(Z,\"display\",\"none\")},Rt=function(){!Nt&&Z&&P(Z,\"display\",\"\")};xt&&document.addEventListener(\"click\",function(t){if(wt)return t.preventDefault(),t.stopPropagation&&t.stopPropagation(),t.stopImmediatePropagation&&t.stopImmediatePropagation(),wt=!1},!0);function Xt(t){if(q){t=t.touches?t.touches[0]:t;var e=(i=t.clientX,r=t.clientY,Et.some(function(t){var e=t[j].options.emptyInsertThreshold;if(e&&!Y(t)){var n=k(t),o=i>=n.left-e&&i<=n.right+e,e=r>=n.top-e&&r<=n.bottom+e;return o&&e?a=t:void 0}}),a);if(e){var n,o={};for(n in t)t.hasOwnProperty(n)&&(o[n]=t[n]);o.target=o.rootEl=e,o.preventDefault=void 0,o.stopPropagation=void 0,e[j]._onDragOver(o)}}var i,r,a}function Yt(t){q&&q.parentNode[j]._isOutsideThisEl(t.target)}function Bt(t,e){if(!t||!t.nodeType||1!==t.nodeType)throw\"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(t));this.el=t,this.options=e=a({},e),t[j]=this;var n,o,i={group:null,sort:!0,disabled:!1,store:null,handle:null,draggable:/^[uo]l$/i.test(t.nodeName)?\">li\":\">*\",swapThreshold:1,invertSwap:!1,invertedSwapThreshold:null,removeCloneOnHide:!0,direction:function(){return It(t,this.options)},ghostClass:\"sortable-ghost\",chosenClass:\"sortable-chosen\",dragClass:\"sortable-drag\",ignore:\"a, img\",filter:null,preventOnFilter:!0,animation:0,easing:null,setData:function(t,e){t.setData(\"Text\",e.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:\"data-id\",delay:0,delayOnTouchOnly:!1,touchStartThreshold:(Number.parseInt?Number:window).parseInt(window.devicePixelRatio,10)||1,forceFallback:!1,fallbackClass:\"sortable-fallback\",fallbackOnBody:!1,fallbackTolerance:0,fallbackOffset:{x:0,y:0},supportPointer:!1!==Bt.supportPointer&&\"PointerEvent\"in window&&!u,emptyInsertThreshold:5};for(n in K.initializePlugins(this,t,i),i)n in e||(e[n]=i[n]);for(o in Pt(e),this)\"_\"===o.charAt(0)&&\"function\"==typeof this[o]&&(this[o]=this[o].bind(this));this.nativeDraggable=!e.forceFallback&&At,this.nativeDraggable&&(this.options.touchStartThreshold=1),e.supportPointer?h(t,\"pointerdown\",this._onTapStart):(h(t,\"mousedown\",this._onTapStart),h(t,\"touchstart\",this._onTapStart)),this.nativeDraggable&&(h(t,\"dragover\",this),h(t,\"dragenter\",this)),Et.push(this.el),e.store&&e.store.get&&this.sort(e.store.get(this)||[]),a(this,x())}function Ft(t,e,n,o,i,r,a,l){var s,c,u=t[j],d=u.options.onMove;return!window.CustomEvent||y||w?(s=document.createEvent(\"Event\")).initEvent(\"move\",!0,!0):s=new CustomEvent(\"move\",{bubbles:!0,cancelable:!0}),s.to=e,s.from=t,s.dragged=n,s.draggedRect=o,s.related=i||e,s.relatedRect=r||k(e),s.willInsertAfter=l,s.originalEvent=a,t.dispatchEvent(s),c=d?d.call(u,s,a):c}function jt(t){t.draggable=!1}function Ht(){Ct=!1}function Lt(t){return setTimeout(t,0)}function Kt(t){return clearTimeout(t)}Bt.prototype={constructor:Bt,_isOutsideThisEl:function(t){this.el.contains(t)||t===this.el||(gt=null)},_getDirection:function(t,e){return\"function\"==typeof this.options.direction?this.options.direction.call(this,t,e,q):this.options.direction},_onTapStart:function(e){if(e.cancelable){var n=this,o=this.el,t=this.options,i=t.preventOnFilter,r=e.type,a=e.touches&&e.touches[0]||e.pointerType&&\"touch\"===e.pointerType&&e,l=(a||e).target,s=e.target.shadowRoot&&(e.path&&e.path[0]||e.composedPath&&e.composedPath()[0])||l,c=t.filter;if(!function(t){Tt.length=0;var e=t.getElementsByTagName(\"input\"),n=e.length;for(;n--;){var o=e[n];o.checked&&Tt.push(o)}}(o),!q&&!(/mousedown|pointerdown/.test(r)&&0!==e.button||t.disabled)&&!s.isContentEditable&&(this.nativeDraggable||!u||!l||\"SELECT\"!==l.tagName.toUpperCase())&&!((l=N(l,t.draggable,o,!1))&&l.animated||J===l)){if(nt=B(l),it=B(l,t.draggable),\"function\"==typeof c){if(c.call(this,e,l,this))return U({sortable:n,rootEl:s,name:\"filter\",targetEl:l,toEl:o,fromEl:o}),z(\"filter\",n,{evt:e}),void(i&&e.cancelable&&e.preventDefault())}else if(c=c&&c.split(\",\").some(function(t){if(t=N(s,t.trim(),o,!1))return U({sortable:n,rootEl:t,name:\"filter\",targetEl:l,fromEl:o,toEl:o}),z(\"filter\",n,{evt:e}),!0}))return void(i&&e.cancelable&&e.preventDefault());t.handle&&!N(s,t.handle,o,!1)||this._prepareDragStart(e,a,l)}}},_prepareDragStart:function(t,e,n){var o,i=this,r=i.el,a=i.options,l=r.ownerDocument;n&&!q&&n.parentNode===r&&(o=k(n),$=r,V=(q=n).parentNode,Q=q.nextSibling,J=n,at=a.group,st={target:Bt.dragged=q,clientX:(e||t).clientX,clientY:(e||t).clientY},ht=st.clientX-o.left,ft=st.clientY-o.top,this._lastX=(e||t).clientX,this._lastY=(e||t).clientY,q.style[\"will-change\"]=\"all\",o=function(){z(\"delayEnded\",i,{evt:t}),Bt.eventCanceled?i._onDrop():(i._disableDelayedDragEvents(),!s&&i.nativeDraggable&&(q.draggable=!0),i._triggerDragStart(t,e),U({sortable:i,name:\"choose\",originalEvent:t}),I(q,a.chosenClass,!0))},a.ignore.split(\",\").forEach(function(t){b(q,t.trim(),jt)}),h(l,\"dragover\",Xt),h(l,\"mousemove\",Xt),h(l,\"touchmove\",Xt),h(l,\"mouseup\",i._onDrop),h(l,\"touchend\",i._onDrop),h(l,\"touchcancel\",i._onDrop),s&&this.nativeDraggable&&(this.options.touchStartThreshold=4,q.draggable=!0),z(\"delayStart\",this,{evt:t}),!a.delay||a.delayOnTouchOnly&&!e||this.nativeDraggable&&(w||y)?o():Bt.eventCanceled?this._onDrop():(h(l,\"mouseup\",i._disableDelayedDrag),h(l,\"touchend\",i._disableDelayedDrag),h(l,\"touchcancel\",i._disableDelayedDrag),h(l,\"mousemove\",i._delayedDragTouchMoveHandler),h(l,\"touchmove\",i._delayedDragTouchMoveHandler),a.supportPointer&&h(l,\"pointermove\",i._delayedDragTouchMoveHandler),i._dragStartTimer=setTimeout(o,a.delay)))},_delayedDragTouchMoveHandler:function(t){t=t.touches?t.touches[0]:t;Math.max(Math.abs(t.clientX-this._lastX),Math.abs(t.clientY-this._lastY))>=Math.floor(this.options.touchStartThreshold/(this.nativeDraggable&&window.devicePixelRatio||1))&&this._disableDelayedDrag()},_disableDelayedDrag:function(){q&&jt(q),clearTimeout(this._dragStartTimer),this._disableDelayedDragEvents()},_disableDelayedDragEvents:function(){var t=this.el.ownerDocument;f(t,\"mouseup\",this._disableDelayedDrag),f(t,\"touchend\",this._disableDelayedDrag),f(t,\"touchcancel\",this._disableDelayedDrag),f(t,\"mousemove\",this._delayedDragTouchMoveHandler),f(t,\"touchmove\",this._delayedDragTouchMoveHandler),f(t,\"pointermove\",this._delayedDragTouchMoveHandler)},_triggerDragStart:function(t,e){e=e||\"touch\"==t.pointerType&&t,!this.nativeDraggable||e?this.options.supportPointer?h(document,\"pointermove\",this._onTouchMove):h(document,e?\"touchmove\":\"mousemove\",this._onTouchMove):(h(q,\"dragend\",this),h($,\"dragstart\",this._onDragStart));try{document.selection?Lt(function(){document.selection.empty()}):window.getSelection().removeAllRanges()}catch(t){}},_dragStarted:function(t,e){var n;yt=!1,$&&q?(z(\"dragStarted\",this,{evt:e}),this.nativeDraggable&&h(document,\"dragover\",Yt),n=this.options,t||I(q,n.dragClass,!1),I(q,n.ghostClass,!0),Bt.active=this,t&&this._appendGhost(),U({sortable:this,name:\"start\",originalEvent:e})):this._nulling()},_emulateDragOver:function(){if(ct){this._lastX=ct.clientX,this._lastY=ct.clientY,kt();for(var t=document.elementFromPoint(ct.clientX,ct.clientY),e=t;t&&t.shadowRoot&&(t=t.shadowRoot.elementFromPoint(ct.clientX,ct.clientY))!==e;)e=t;if(q.parentNode[j]._isOutsideThisEl(t),e)do{if(e[j])if(e[j]._onDragOver({clientX:ct.clientX,clientY:ct.clientY,target:t,rootEl:e})&&!this.options.dragoverBubble)break}while(e=(t=e).parentNode);Rt()}},_onTouchMove:function(t){if(st){var e=this.options,n=e.fallbackTolerance,o=e.fallbackOffset,i=t.touches?t.touches[0]:t,r=Z&&v(Z,!0),a=Z&&r&&r.a,l=Z&&r&&r.d,e=Ot&&bt&&E(bt),a=(i.clientX-st.clientX+o.x)/(a||1)+(e?e[0]-_t[0]:0)/(a||1),l=(i.clientY-st.clientY+o.y)/(l||1)+(e?e[1]-_t[1]:0)/(l||1);if(!Bt.active&&!yt){if(n&&Math.max(Math.abs(i.clientX-this._lastX),Math.abs(i.clientY-this._lastY))<n)return;this._onDragStart(t,!0)}Z&&(r?(r.e+=a-(ut||0),r.f+=l-(dt||0)):r={a:1,b:0,c:0,d:1,e:a,f:l},r=\"matrix(\".concat(r.a,\",\").concat(r.b,\",\").concat(r.c,\",\").concat(r.d,\",\").concat(r.e,\",\").concat(r.f,\")\"),P(Z,\"webkitTransform\",r),P(Z,\"mozTransform\",r),P(Z,\"msTransform\",r),P(Z,\"transform\",r),ut=a,dt=l,ct=i),t.cancelable&&t.preventDefault()}},_appendGhost:function(){if(!Z){var t=this.options.fallbackOnBody?document.body:$,e=k(q,!0,Ot,!0,t),n=this.options;if(Ot){for(bt=t;\"static\"===P(bt,\"position\")&&\"none\"===P(bt,\"transform\")&&bt!==document;)bt=bt.parentNode;bt!==document.body&&bt!==document.documentElement?(bt===document&&(bt=O()),e.top+=bt.scrollTop,e.left+=bt.scrollLeft):bt=O(),_t=E(bt)}I(Z=q.cloneNode(!0),n.ghostClass,!1),I(Z,n.fallbackClass,!0),I(Z,n.dragClass,!0),P(Z,\"transition\",\"\"),P(Z,\"transform\",\"\"),P(Z,\"box-sizing\",\"border-box\"),P(Z,\"margin\",0),P(Z,\"top\",e.top),P(Z,\"left\",e.left),P(Z,\"width\",e.width),P(Z,\"height\",e.height),P(Z,\"opacity\",\"0.8\"),P(Z,\"position\",Ot?\"absolute\":\"fixed\"),P(Z,\"zIndex\",\"100000\"),P(Z,\"pointerEvents\",\"none\"),Bt.ghost=Z,t.appendChild(Z),P(Z,\"transform-origin\",ht/parseInt(Z.style.width)*100+\"% \"+ft/parseInt(Z.style.height)*100+\"%\")}},_onDragStart:function(t,e){var n=this,o=t.dataTransfer,i=n.options;z(\"dragStart\",this,{evt:t}),Bt.eventCanceled?this._onDrop():(z(\"setupClone\",this),Bt.eventCanceled||((tt=_(q)).draggable=!1,tt.style[\"will-change\"]=\"\",this._hideClone(),I(tt,this.options.chosenClass,!1),Bt.clone=tt),n.cloneId=Lt(function(){z(\"clone\",n),Bt.eventCanceled||(n.options.removeCloneOnHide||$.insertBefore(tt,q),n._hideClone(),U({sortable:n,name:\"clone\"}))}),e||I(q,i.dragClass,!0),e?(wt=!0,n._loopId=setInterval(n._emulateDragOver,50)):(f(document,\"mouseup\",n._onDrop),f(document,\"touchend\",n._onDrop),f(document,\"touchcancel\",n._onDrop),o&&(o.effectAllowed=\"move\",i.setData&&i.setData.call(n,o,q)),h(document,\"drop\",n),P(q,\"transform\",\"translateZ(0)\")),yt=!0,n._dragStartId=Lt(n._dragStarted.bind(n,e,t)),h(document,\"selectstart\",n),pt=!0,u&&P(document.body,\"user-select\",\"none\"))},_onDragOver:function(n){var o,i,r,t,a=this.el,l=n.target,e=this.options,s=e.group,c=Bt.active,u=at===s,d=e.sort,h=lt||c,f=this,p=!1;if(!Ct){if(void 0!==n.preventDefault&&n.cancelable&&n.preventDefault(),l=N(l,e.draggable,a,!0),T(\"dragOver\"),Bt.eventCanceled)return p;if(q.contains(n.target)||l.animated&&l.animatingX&&l.animatingY||f._ignoreWhileAnimating===l)return O(!1);if(wt=!1,c&&!e.disabled&&(u?d||(i=V!==$):lt===this||(this.lastPutMode=at.checkPull(this,c,q,n))&&s.checkPut(this,c,q,n))){if(r=\"vertical\"===this._getDirection(n,l),o=k(q),T(\"dragOverValid\"),Bt.eventCanceled)return p;if(i)return V=$,x(),this._hideClone(),T(\"revert\"),Bt.eventCanceled||(Q?$.insertBefore(q,Q):$.appendChild(q)),O(!0);var g=Y(a,e.draggable);if(!g||function(t,e,n){n=k(Y(n.el,n.options.draggable));return e?t.clientX>n.right+10||t.clientX<=n.right&&t.clientY>n.bottom&&t.clientX>=n.left:t.clientX>n.right&&t.clientY>n.top||t.clientX<=n.right&&t.clientY>n.bottom+10}(n,r,this)&&!g.animated){if(g===q)return O(!1);if((l=g&&a===n.target?g:l)&&(w=k(l)),!1!==Ft($,a,q,o,l,w,n,!!l))return x(),a.appendChild(q),V=a,M(),O(!0)}else if(g&&function(t,e,n){n=k(X(n.el,0,n.options,!0));return e?t.clientX<n.left-10||t.clientY<n.top&&t.clientX<n.right:t.clientY<n.top-10||t.clientY<n.bottom&&t.clientX<n.left}(n,r,this)){var m=X(a,0,e,!0);if(m===q)return O(!1);if(w=k(l=m),!1!==Ft($,a,q,o,l,w,n,!1))return x(),a.insertBefore(q,m),V=a,M(),O(!0)}else if(l.parentNode===a){var v,b,y,w=k(l),E=q.parentNode!==a,D=(D=q.animated&&q.toRect||o,C=l.animated&&l.toRect||w,S=(t=r)?D.left:D.top,s=t?D.right:D.bottom,g=t?D.width:D.height,m=t?C.left:C.top,D=t?C.right:C.bottom,C=t?C.width:C.height,!(S===m||s===D||S+g/2===m+C/2)),S=r?\"top\":\"left\",g=R(l,\"top\",\"top\")||R(q,\"top\",\"top\"),m=g?g.scrollTop:void 0;if(gt!==l&&(b=w[S],Dt=!1,St=!D&&e.invertSwap||E),0!==(v=function(t,e,n,o,i,r,a,l){var s=o?t.clientY:t.clientX,c=o?n.height:n.width,t=o?n.top:n.left,o=o?n.bottom:n.right,n=!1;if(!a)if(l&&vt<c*i){if(Dt=!Dt&&(1===mt?t+c*r/2<s:s<o-c*r/2)?!0:Dt)n=!0;else if(1===mt?s<t+vt:o-vt<s)return-mt}else if(t+c*(1-i)/2<s&&s<o-c*(1-i)/2)return function(t){return B(q)<B(t)?1:-1}(e);if((n=n||a)&&(s<t+c*r/2||o-c*r/2<s))return t+c/2<s?1:-1;return 0}(n,l,w,r,D?1:e.swapThreshold,null==e.invertedSwapThreshold?e.swapThreshold:e.invertedSwapThreshold,St,gt===l)))for(var _=B(q);(y=V.children[_-=v])&&(\"none\"===P(y,\"display\")||y===Z););if(0===v||y===l)return O(!1);mt=v;var C=(gt=l).nextElementSibling,E=!1,D=Ft($,a,q,o,l,w,n,E=1===v);if(!1!==D)return 1!==D&&-1!==D||(E=1===D),Ct=!0,setTimeout(Ht,30),x(),E&&!C?a.appendChild(q):l.parentNode.insertBefore(q,E?C:l),g&&F(g,0,m-g.scrollTop),V=q.parentNode,void 0===b||St||(vt=Math.abs(b-k(l)[S])),M(),O(!0)}if(a.contains(q))return O(!1)}return!1}function T(t,e){z(t,f,A({evt:n,isOwner:u,axis:r?\"vertical\":\"horizontal\",revert:i,dragRect:o,targetRect:w,canSort:d,fromSortable:h,target:l,completed:O,onMove:function(t,e){return Ft($,a,q,o,t,k(t),n,e)},changed:M},e))}function x(){T(\"dragOverAnimationCapture\"),f.captureAnimationState(),f!==h&&h.captureAnimationState()}function O(t){return T(\"dragOverCompleted\",{insertion:t}),t&&(u?c._hideClone():c._showClone(f),f!==h&&(I(q,(lt||c).options.ghostClass,!1),I(q,e.ghostClass,!0)),lt!==f&&f!==Bt.active?lt=f:f===Bt.active&&lt&&(lt=null),h===f&&(f._ignoreWhileAnimating=l),f.animateAll(function(){T(\"dragOverAnimationComplete\"),f._ignoreWhileAnimating=null}),f!==h&&(h.animateAll(),h._ignoreWhileAnimating=null)),(l===q&&!q.animated||l===a&&!l.animated)&&(gt=null),e.dragoverBubble||n.rootEl||l===document||(q.parentNode[j]._isOutsideThisEl(n.target),t||Xt(n)),!e.dragoverBubble&&n.stopPropagation&&n.stopPropagation(),p=!0}function M(){ot=B(q),rt=B(q,e.draggable),U({sortable:f,name:\"change\",toEl:a,newIndex:ot,newDraggableIndex:rt,originalEvent:n})}},_ignoreWhileAnimating:null,_offMoveEvents:function(){f(document,\"mousemove\",this._onTouchMove),f(document,\"touchmove\",this._onTouchMove),f(document,\"pointermove\",this._onTouchMove),f(document,\"dragover\",Xt),f(document,\"mousemove\",Xt),f(document,\"touchmove\",Xt)},_offUpEvents:function(){var t=this.el.ownerDocument;f(t,\"mouseup\",this._onDrop),f(t,\"touchend\",this._onDrop),f(t,\"pointerup\",this._onDrop),f(t,\"touchcancel\",this._onDrop),f(document,\"selectstart\",this)},_onDrop:function(t){var e=this.el,n=this.options;ot=B(q),rt=B(q,n.draggable),z(\"drop\",this,{evt:t}),V=q&&q.parentNode,ot=B(q),rt=B(q,n.draggable),Bt.eventCanceled||(Dt=St=yt=!1,clearInterval(this._loopId),clearTimeout(this._dragStartTimer),Kt(this.cloneId),Kt(this._dragStartId),this.nativeDraggable&&(f(document,\"drop\",this),f(e,\"dragstart\",this._onDragStart)),this._offMoveEvents(),this._offUpEvents(),u&&P(document.body,\"user-select\",\"\"),P(q,\"transform\",\"\"),t&&(pt&&(t.cancelable&&t.preventDefault(),n.dropBubble||t.stopPropagation()),Z&&Z.parentNode&&Z.parentNode.removeChild(Z),($===V||lt&&\"clone\"!==lt.lastPutMode)&&tt&&tt.parentNode&&tt.parentNode.removeChild(tt),q&&(this.nativeDraggable&&f(q,\"dragend\",this),jt(q),q.style[\"will-change\"]=\"\",pt&&!yt&&I(q,(lt||this).options.ghostClass,!1),I(q,this.options.chosenClass,!1),U({sortable:this,name:\"unchoose\",toEl:V,newIndex:null,newDraggableIndex:null,originalEvent:t}),$!==V?(0<=ot&&(U({rootEl:V,name:\"add\",toEl:V,fromEl:$,originalEvent:t}),U({sortable:this,name:\"remove\",toEl:V,originalEvent:t}),U({rootEl:V,name:\"sort\",toEl:V,fromEl:$,originalEvent:t}),U({sortable:this,name:\"sort\",toEl:V,originalEvent:t})),lt&&lt.save()):ot!==nt&&0<=ot&&(U({sortable:this,name:\"update\",toEl:V,originalEvent:t}),U({sortable:this,name:\"sort\",toEl:V,originalEvent:t})),Bt.active&&(null!=ot&&-1!==ot||(ot=nt,rt=it),U({sortable:this,name:\"end\",toEl:V,originalEvent:t}),this.save())))),this._nulling()},_nulling:function(){z(\"nulling\",this),$=q=V=Z=Q=tt=J=et=st=ct=pt=ot=rt=nt=it=gt=mt=lt=at=Bt.dragged=Bt.ghost=Bt.clone=Bt.active=null,Tt.forEach(function(t){t.checked=!0}),Tt.length=ut=dt=0},handleEvent:function(t){switch(t.type){case\"drop\":case\"dragend\":this._onDrop(t);break;case\"dragenter\":case\"dragover\":q&&(this._onDragOver(t),function(t){t.dataTransfer&&(t.dataTransfer.dropEffect=\"move\");t.cancelable&&t.preventDefault()}(t));break;case\"selectstart\":t.preventDefault()}},toArray:function(){for(var t,e=[],n=this.el.children,o=0,i=n.length,r=this.options;o<i;o++)N(t=n[o],r.draggable,this.el,!1)&&e.push(t.getAttribute(r.dataIdAttr)||function(t){var e=t.tagName+t.className+t.src+t.href+t.textContent,n=e.length,o=0;for(;n--;)o+=e.charCodeAt(n);return o.toString(36)}(t));return e},sort:function(t,e){var n={},o=this.el;this.toArray().forEach(function(t,e){e=o.children[e];N(e,this.options.draggable,o,!1)&&(n[t]=e)},this),e&&this.captureAnimationState(),t.forEach(function(t){n[t]&&(o.removeChild(n[t]),o.appendChild(n[t]))}),e&&this.animateAll()},save:function(){var t=this.options.store;t&&t.set&&t.set(this)},closest:function(t,e){return N(t,e||this.options.draggable,this.el,!1)},option:function(t,e){var n=this.options;if(void 0===e)return n[t];var o=K.modifyOption(this,t,e);n[t]=void 0!==o?o:e,\"group\"===t&&Pt(n)},destroy:function(){z(\"destroy\",this);var t=this.el;t[j]=null,f(t,\"mousedown\",this._onTapStart),f(t,\"touchstart\",this._onTapStart),f(t,\"pointerdown\",this._onTapStart),this.nativeDraggable&&(f(t,\"dragover\",this),f(t,\"dragenter\",this)),Array.prototype.forEach.call(t.querySelectorAll(\"[draggable]\"),function(t){t.removeAttribute(\"draggable\")}),this._onDrop(),this._disableDelayedDragEvents(),Et.splice(Et.indexOf(this.el),1),this.el=t=null},_hideClone:function(){et||(z(\"hideClone\",this),Bt.eventCanceled||(P(tt,\"display\",\"none\"),this.options.removeCloneOnHide&&tt.parentNode&&tt.parentNode.removeChild(tt),et=!0))},_showClone:function(t){\"clone\"===t.lastPutMode?et&&(z(\"showClone\",this),Bt.eventCanceled||(q.parentNode!=$||this.options.group.revertClone?Q?$.insertBefore(tt,Q):$.appendChild(tt):$.insertBefore(tt,q),this.options.group.revertClone&&this.animate(q,tt),P(tt,\"display\",\"\"),et=!1)):this._hideClone()}},xt&&h(document,\"touchmove\",function(t){(Bt.active||yt)&&t.cancelable&&t.preventDefault()}),Bt.utils={on:h,off:f,css:P,find:b,is:function(t,e){return!!N(t,e,t,!1)},extend:function(t,e){if(t&&e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},throttle:S,closest:N,toggleClass:I,clone:_,index:B,nextTick:Lt,cancelNextTick:Kt,detectDirection:It,getChild:X},Bt.get=function(t){return t[j]},Bt.mount=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];(e=e[0].constructor===Array?e[0]:e).forEach(function(t){if(!t.prototype||!t.prototype.constructor)throw\"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(t));t.utils&&(Bt.utils=A(A({},Bt.utils),t.utils)),K.mount(t)})},Bt.create=function(t,e){return new Bt(t,e)};var Wt,zt,Gt,Ut,qt,Vt,Zt=[],$t=!(Bt.version=\"1.14.0\");function Qt(){Zt.forEach(function(t){clearInterval(t.pid)}),Zt=[]}function Jt(){clearInterval(Vt)}var te,ee=S(function(n,t,e,o){if(t.scroll){var i,r=(n.touches?n.touches[0]:n).clientX,a=(n.touches?n.touches[0]:n).clientY,l=t.scrollSensitivity,s=t.scrollSpeed,c=O(),u=!1;zt!==e&&(zt=e,Qt(),Wt=t.scroll,i=t.scrollFn,!0===Wt&&(Wt=M(e,!0)));var d=0,h=Wt;do{var f=h,p=k(f),g=p.top,m=p.bottom,v=p.left,b=p.right,y=p.width,w=p.height,E=void 0,D=void 0,S=f.scrollWidth,_=f.scrollHeight,C=P(f),T=f.scrollLeft,p=f.scrollTop,D=f===c?(E=y<S&&(\"auto\"===C.overflowX||\"scroll\"===C.overflowX||\"visible\"===C.overflowX),w<_&&(\"auto\"===C.overflowY||\"scroll\"===C.overflowY||\"visible\"===C.overflowY)):(E=y<S&&(\"auto\"===C.overflowX||\"scroll\"===C.overflowX),w<_&&(\"auto\"===C.overflowY||\"scroll\"===C.overflowY)),T=E&&(Math.abs(b-r)<=l&&T+y<S)-(Math.abs(v-r)<=l&&!!T),p=D&&(Math.abs(m-a)<=l&&p+w<_)-(Math.abs(g-a)<=l&&!!p);if(!Zt[d])for(var x=0;x<=d;x++)Zt[x]||(Zt[x]={});Zt[d].vx==T&&Zt[d].vy==p&&Zt[d].el===f||(Zt[d].el=f,Zt[d].vx=T,Zt[d].vy=p,clearInterval(Zt[d].pid),0==T&&0==p||(u=!0,Zt[d].pid=setInterval(function(){o&&0===this.layer&&Bt.active._onTouchMove(qt);var t=Zt[this.layer].vy?Zt[this.layer].vy*s:0,e=Zt[this.layer].vx?Zt[this.layer].vx*s:0;\"function\"==typeof i&&\"continue\"!==i.call(Bt.dragged.parentNode[j],e,t,n,qt,Zt[this.layer].el)||F(Zt[this.layer].el,e,t)}.bind({layer:d}),24))),d++}while(t.bubbleScroll&&h!==c&&(h=M(h,!1)));$t=u}},30),n=function(t){var e=t.originalEvent,n=t.putSortable,o=t.dragEl,i=t.activeSortable,r=t.dispatchSortableEvent,a=t.hideGhostForTarget,t=t.unhideGhostForTarget;e&&(i=n||i,a(),e=e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e,e=document.elementFromPoint(e.clientX,e.clientY),t(),i&&!i.el.contains(e)&&(r(\"spill\"),this.onSpill({dragEl:o,putSortable:n})))};function ne(){}function oe(){}ne.prototype={startIndex:null,dragStart:function(t){t=t.oldDraggableIndex;this.startIndex=t},onSpill:function(t){var e=t.dragEl,n=t.putSortable;this.sortable.captureAnimationState(),n&&n.captureAnimationState();t=X(this.sortable.el,this.startIndex,this.options);t?this.sortable.el.insertBefore(e,t):this.sortable.el.appendChild(e),this.sortable.animateAll(),n&&n.animateAll()},drop:n},a(ne,{pluginName:\"revertOnSpill\"}),oe.prototype={onSpill:function(t){var e=t.dragEl,t=t.putSortable||this.sortable;t.captureAnimationState(),e.parentNode&&e.parentNode.removeChild(e),t.animateAll()},drop:n},a(oe,{pluginName:\"removeOnSpill\"});var ie,re,ae,le,se,ce=[],ue=[],de=!1,he=!1,fe=!1;function pe(n,o){ue.forEach(function(t,e){e=o.children[t.sortableIndex+(n?Number(e):0)];e?o.insertBefore(t,e):o.appendChild(t)})}function ge(){ce.forEach(function(t){t!==ae&&t.parentNode&&t.parentNode.removeChild(t)})}return Bt.mount(new function(){function t(){for(var t in this.defaults={scroll:!0,forceAutoScrollFallback:!1,scrollSensitivity:30,scrollSpeed:10,bubbleScroll:!0},this)\"_\"===t.charAt(0)&&\"function\"==typeof this[t]&&(this[t]=this[t].bind(this))}return t.prototype={dragStarted:function(t){t=t.originalEvent;this.sortable.nativeDraggable?h(document,\"dragover\",this._handleAutoScroll):this.options.supportPointer?h(document,\"pointermove\",this._handleFallbackAutoScroll):t.touches?h(document,\"touchmove\",this._handleFallbackAutoScroll):h(document,\"mousemove\",this._handleFallbackAutoScroll)},dragOverCompleted:function(t){t=t.originalEvent;this.options.dragOverBubble||t.rootEl||this._handleAutoScroll(t)},drop:function(){this.sortable.nativeDraggable?f(document,\"dragover\",this._handleAutoScroll):(f(document,\"pointermove\",this._handleFallbackAutoScroll),f(document,\"touchmove\",this._handleFallbackAutoScroll),f(document,\"mousemove\",this._handleFallbackAutoScroll)),Jt(),Qt(),clearTimeout(g),g=void 0},nulling:function(){qt=zt=Wt=$t=Vt=Gt=Ut=null,Zt.length=0},_handleFallbackAutoScroll:function(t){this._handleAutoScroll(t,!0)},_handleAutoScroll:function(e,n){var o,i=this,r=(e.touches?e.touches[0]:e).clientX,a=(e.touches?e.touches[0]:e).clientY,t=document.elementFromPoint(r,a);qt=e,n||this.options.forceAutoScrollFallback||w||y||u?(ee(e,this.options,t,n),o=M(t,!0),!$t||Vt&&r===Gt&&a===Ut||(Vt&&Jt(),Vt=setInterval(function(){var t=M(document.elementFromPoint(r,a),!0);t!==o&&(o=t,Qt()),ee(e,i.options,t,n)},10),Gt=r,Ut=a)):this.options.bubbleScroll&&M(t,!0)!==O()?ee(e,this.options,M(t,!1),!1):Qt()}},a(t,{pluginName:\"scroll\",initializeByDefault:!0})}),Bt.mount(oe,ne),Bt.mount(new function(){function t(){this.defaults={swapClass:\"sortable-swap-highlight\"}}return t.prototype={dragStart:function(t){t=t.dragEl;te=t},dragOverValid:function(t){var e=t.completed,n=t.target,o=t.onMove,i=t.activeSortable,r=t.changed,a=t.cancel;i.options.swap&&(t=this.sortable.el,i=this.options,n&&n!==t&&(t=te,te=!1!==o(n)?(I(n,i.swapClass,!0),n):null,t&&t!==te&&I(t,i.swapClass,!1)),r(),e(!0),a())},drop:function(t){var e,n,o=t.activeSortable,i=t.putSortable,r=t.dragEl,a=i||this.sortable,l=this.options;te&&I(te,l.swapClass,!1),te&&(l.swap||i&&i.options.swap)&&r!==te&&(a.captureAnimationState(),a!==o&&o.captureAnimationState(),n=te,t=(e=r).parentNode,l=n.parentNode,t&&l&&!t.isEqualNode(n)&&!l.isEqualNode(e)&&(i=B(e),r=B(n),t.isEqualNode(l)&&i<r&&r++,t.insertBefore(n,t.children[i]),l.insertBefore(e,l.children[r])),a.animateAll(),a!==o&&o.animateAll())},nulling:function(){te=null}},a(t,{pluginName:\"swap\",eventProperties:function(){return{swapItem:te}}})}),Bt.mount(new function(){function t(o){for(var t in this)\"_\"===t.charAt(0)&&\"function\"==typeof this[t]&&(this[t]=this[t].bind(this));o.options.supportPointer?h(document,\"pointerup\",this._deselectMultiDrag):(h(document,\"mouseup\",this._deselectMultiDrag),h(document,\"touchend\",this._deselectMultiDrag)),h(document,\"keydown\",this._checkKeyDown),h(document,\"keyup\",this._checkKeyUp),this.defaults={selectedClass:\"sortable-selected\",multiDragKey:null,setData:function(t,e){var n=\"\";ce.length&&re===o?ce.forEach(function(t,e){n+=(e?\", \":\"\")+t.textContent}):n=e.textContent,t.setData(\"Text\",n)}}}return t.prototype={multiDragKeyDown:!1,isMultiDrag:!1,delayStartGlobal:function(t){t=t.dragEl;ae=t},delayEnded:function(){this.isMultiDrag=~ce.indexOf(ae)},setupClone:function(t){var e=t.sortable,t=t.cancel;if(this.isMultiDrag){for(var n=0;n<ce.length;n++)ue.push(_(ce[n])),ue[n].sortableIndex=ce[n].sortableIndex,ue[n].draggable=!1,ue[n].style[\"will-change\"]=\"\",I(ue[n],this.options.selectedClass,!1),ce[n]===ae&&I(ue[n],this.options.chosenClass,!1);e._hideClone(),t()}},clone:function(t){var e=t.sortable,n=t.rootEl,o=t.dispatchSortableEvent,t=t.cancel;this.isMultiDrag&&(this.options.removeCloneOnHide||ce.length&&re===e&&(pe(!0,n),o(\"clone\"),t()))},showClone:function(t){var e=t.cloneNowShown,n=t.rootEl,t=t.cancel;this.isMultiDrag&&(pe(!1,n),ue.forEach(function(t){P(t,\"display\",\"\")}),e(),se=!1,t())},hideClone:function(t){var e=this,n=(t.sortable,t.cloneNowHidden),t=t.cancel;this.isMultiDrag&&(ue.forEach(function(t){P(t,\"display\",\"none\"),e.options.removeCloneOnHide&&t.parentNode&&t.parentNode.removeChild(t)}),n(),se=!0,t())},dragStartGlobal:function(t){t.sortable;!this.isMultiDrag&&re&&re.multiDrag._deselectMultiDrag(),ce.forEach(function(t){t.sortableIndex=B(t)}),ce=ce.sort(function(t,e){return t.sortableIndex-e.sortableIndex}),fe=!0},dragStarted:function(t){var e,n=this,t=t.sortable;this.isMultiDrag&&(this.options.sort&&(t.captureAnimationState(),this.options.animation&&(ce.forEach(function(t){t!==ae&&P(t,\"position\",\"absolute\")}),e=k(ae,!1,!0,!0),ce.forEach(function(t){t!==ae&&C(t,e)}),de=he=!0)),t.animateAll(function(){de=he=!1,n.options.animation&&ce.forEach(function(t){T(t)}),n.options.sort&&ge()}))},dragOver:function(t){var e=t.target,n=t.completed,t=t.cancel;he&&~ce.indexOf(e)&&(n(!1),t())},revert:function(t){var n,o,e=t.fromSortable,i=t.rootEl,r=t.sortable,a=t.dragRect;1<ce.length&&(ce.forEach(function(t){r.addAnimationState({target:t,rect:he?k(t):a}),T(t),t.fromRect=a,e.removeAnimationState(t)}),he=!1,n=!this.options.removeCloneOnHide,o=i,ce.forEach(function(t,e){e=o.children[t.sortableIndex+(n?Number(e):0)];e?o.insertBefore(t,e):o.appendChild(t)}))},dragOverCompleted:function(t){var e,n=t.sortable,o=t.isOwner,i=t.insertion,r=t.activeSortable,a=t.parentEl,l=t.putSortable,t=this.options;i&&(o&&r._hideClone(),de=!1,t.animation&&1<ce.length&&(he||!o&&!r.options.sort&&!l)&&(e=k(ae,!1,!0,!0),ce.forEach(function(t){t!==ae&&(C(t,e),a.appendChild(t))}),he=!0),o||(he||ge(),1<ce.length?(o=se,r._showClone(n),r.options.animation&&!se&&o&&ue.forEach(function(t){r.addAnimationState({target:t,rect:le}),t.fromRect=le,t.thisAnimationDuration=null})):r._showClone(n)))},dragOverAnimationCapture:function(t){var e=t.dragRect,n=t.isOwner,t=t.activeSortable;ce.forEach(function(t){t.thisAnimationDuration=null}),t.options.animation&&!n&&t.multiDrag.isMultiDrag&&(le=a({},e),e=v(ae,!0),le.top-=e.f,le.left-=e.e)},dragOverAnimationComplete:function(){he&&(he=!1,ge())},drop:function(t){var e=t.originalEvent,n=t.rootEl,o=t.parentEl,i=t.sortable,r=t.dispatchSortableEvent,a=t.oldIndex,l=t.putSortable,s=l||this.sortable;if(e){var c,u,d,h=this.options,f=o.children;if(!fe)if(h.multiDragKey&&!this.multiDragKeyDown&&this._deselectMultiDrag(),I(ae,h.selectedClass,!~ce.indexOf(ae)),~ce.indexOf(ae))ce.splice(ce.indexOf(ae),1),ie=null,W({sortable:i,rootEl:n,name:\"deselect\",targetEl:ae,originalEvt:e});else{if(ce.push(ae),W({sortable:i,rootEl:n,name:\"select\",targetEl:ae,originalEvt:e}),e.shiftKey&&ie&&i.el.contains(ie)){var p=B(ie),t=B(ae);if(~p&&~t&&p!==t)for(var g,m=p<t?(g=p,t):(g=t,p+1);g<m;g++)~ce.indexOf(f[g])||(I(f[g],h.selectedClass,!0),ce.push(f[g]),W({sortable:i,rootEl:n,name:\"select\",targetEl:f[g],originalEvt:e}))}else ie=ae;re=s}fe&&this.isMultiDrag&&(he=!1,(o[j].options.sort||o!==n)&&1<ce.length&&(c=k(ae),u=B(ae,\":not(.\"+this.options.selectedClass+\")\"),!de&&h.animation&&(ae.thisAnimationDuration=null),s.captureAnimationState(),de||(h.animation&&(ae.fromRect=c,ce.forEach(function(t){var e;t.thisAnimationDuration=null,t!==ae&&(e=he?k(t):c,t.fromRect=e,s.addAnimationState({target:t,rect:e}))})),ge(),ce.forEach(function(t){f[u]?o.insertBefore(t,f[u]):o.appendChild(t),u++}),a===B(ae)&&(d=!1,ce.forEach(function(t){t.sortableIndex!==B(t)&&(d=!0)}),d&&r(\"update\"))),ce.forEach(function(t){T(t)}),s.animateAll()),re=s),(n===o||l&&\"clone\"!==l.lastPutMode)&&ue.forEach(function(t){t.parentNode&&t.parentNode.removeChild(t)})}},nullingGlobal:function(){this.isMultiDrag=fe=!1,ue.length=0},destroyGlobal:function(){this._deselectMultiDrag(),f(document,\"pointerup\",this._deselectMultiDrag),f(document,\"mouseup\",this._deselectMultiDrag),f(document,\"touchend\",this._deselectMultiDrag),f(document,\"keydown\",this._checkKeyDown),f(document,\"keyup\",this._checkKeyUp)},_deselectMultiDrag:function(t){if(!(void 0!==fe&&fe||re!==this.sortable||t&&N(t.target,this.options.draggable,this.sortable.el,!1)||t&&0!==t.button))for(;ce.length;){var e=ce[0];I(e,this.options.selectedClass,!1),ce.shift(),W({sortable:this.sortable,rootEl:this.sortable.el,name:\"deselect\",targetEl:e,originalEvt:t})}},_checkKeyDown:function(t){t.key===this.options.multiDragKey&&(this.multiDragKeyDown=!0)},_checkKeyUp:function(t){t.key===this.options.multiDragKey&&(this.multiDragKeyDown=!1)}},a(t,{pluginName:\"multiDrag\",utils:{select:function(t){var e=t.parentNode[j];e&&e.options.multiDrag&&!~ce.indexOf(t)&&(re&&re!==e&&(re.multiDrag._deselectMultiDrag(),re=e),I(t,e.options.selectedClass,!0),ce.push(t))},deselect:function(t){var e=t.parentNode[j],n=ce.indexOf(t);e&&e.options.multiDrag&&~n&&(I(t,e.options.selectedClass,!1),ce.splice(n,1))}},eventProperties:function(){var n=this,o=[],i=[];return ce.forEach(function(t){var e;o.push({multiDragElement:t,index:t.sortableIndex}),e=he&&t!==ae?-1:he?B(t,\":not(.\"+n.options.selectedClass+\")\"):B(t),i.push({multiDragElement:t,index:e})}),{items:r(ce),clones:[].concat(ue),oldIndicies:o,newIndicies:i}},optionListeners:{multiDragKey:function(t){return\"ctrl\"===(t=t.toLowerCase())?t=\"Control\":1<t.length&&(t=t.charAt(0).toUpperCase()+t.substr(1)),t}}})}),Bt});", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"), require(\"sortablejs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, \"sortablejs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vuedraggable\"] = factory(require(\"vue\"), require(\"sortablejs\"));\n\telse\n\t\troot[\"vuedraggable\"] = factory(root[\"Vue\"], root[\"Sortable\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__, __WEBPACK_EXTERNAL_MODULE_a352__) {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n", "var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n", "var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n", "'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n", "var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n", "var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n", "'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n", "var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n", "module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n", "// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n", "var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n", "var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n", "var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n", "var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n", "'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n", "'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n", "var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n", "var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n", "var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n", "var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n", "'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n", "module.exports = {};\n", "'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n", "var global = require('../internals/global');\n\nmodule.exports = global;\n", "var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n", "var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n", "var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n", "var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n", "'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n", "var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n", "var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n", "var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n", "'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n", "var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.5',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '\u00A9 2020 Denis Pushkarev (zloirock.ru)'\n});\n", "var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n", "var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n", "module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n", "var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n", "var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n", "var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n", "var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n", "// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n", "exports.f = Object.getOwnPropertySymbols;\n", "var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n", "// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n", "var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n", "var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n", "var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n", "var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n", "var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n", "'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n", "module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n", "// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n", "var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n", "'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n", "module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;", "var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n", "'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n", "var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n", "'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n", "var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n", "'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n", "'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n", "'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n", "module.exports = __WEBPACK_EXTERNAL_MODULE_a352__;", "'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n", "'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n", "var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n", "'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n", "var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n", "'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n", "'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n", "'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n", "var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n", "var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n", "var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n", "var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n", "module.exports = false;\n", "var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n", "var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n", "'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n", "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n", "'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n", "var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n", "var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n", "var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n", "module.exports = {};\n", "module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n", "var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n", "'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n", "var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n", "var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n", "var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n", "var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n", "var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n", "'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n", "var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n", "var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n", "function getConsole() {\r\n  if (typeof window !== \"undefined\") {\r\n    return window.console;\r\n  }\r\n  return global.console;\r\n}\r\nconst console = getConsole();\r\n\r\nexport { console };\r\n", "var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n", "var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n", "// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n", "var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n", "var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n", "'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n", "var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n", "var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n", "var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n", "var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n", "var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n", "// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}", "import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}", "import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}", "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}", "function removeNode(node) {\r\n  if (node.parentElement !== null) {\r\n    node.parentElement.removeChild(node);\r\n  }\r\n}\r\n\r\nfunction insertNodeAt(fatherNode, node, position) {\r\n  const refNode =\r\n    position === 0\r\n      ? fatherNode.children[0]\r\n      : fatherNode.children[position - 1].nextSibling;\r\n  fatherNode.insertBefore(node, refNode);\r\n}\r\n\r\nexport { insertNodeAt, removeNode };\r\n", "function cached(fn) {\r\n  const cache = Object.create(null);\r\n  return function cachedFn(str) {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n}\r\n\r\nconst regex = /-(\\w)/g;\r\nconst camelize = cached(str => str.replace(regex, (_, c) => c.toUpperCase()));\r\n\r\nexport { camelize };\r\n", "const manageAndEmit = [\"Start\", \"Add\", \"Remove\", \"Update\", \"End\"];\r\nconst emit = [\"Choose\", \"Unchoose\", \"Sort\", \"Filter\", \"Clone\"];\r\nconst manage = [\"Move\"];\r\nconst eventHandlerNames = [manage, manageAndEmit, emit]\r\n  .flatMap(events => events)\r\n  .map(evt => `on${evt}`);\r\n\r\nconst events = {\r\n  manage,\r\n  manageAndEmit,\r\n  emit\r\n};\r\n\r\nfunction isReadOnly(eventName) {\r\n  return eventHandlerNames.indexOf(eventName) !== -1;\r\n}\r\n\r\nexport { events, isReadOnly };\r\n", "const tags = [\r\n  \"a\",\r\n  \"abbr\",\r\n  \"address\",\r\n  \"area\",\r\n  \"article\",\r\n  \"aside\",\r\n  \"audio\",\r\n  \"b\",\r\n  \"base\",\r\n  \"bdi\",\r\n  \"bdo\",\r\n  \"blockquote\",\r\n  \"body\",\r\n  \"br\",\r\n  \"button\",\r\n  \"canvas\",\r\n  \"caption\",\r\n  \"cite\",\r\n  \"code\",\r\n  \"col\",\r\n  \"colgroup\",\r\n  \"data\",\r\n  \"datalist\",\r\n  \"dd\",\r\n  \"del\",\r\n  \"details\",\r\n  \"dfn\",\r\n  \"dialog\",\r\n  \"div\",\r\n  \"dl\",\r\n  \"dt\",\r\n  \"em\",\r\n  \"embed\",\r\n  \"fieldset\",\r\n  \"figcaption\",\r\n  \"figure\",\r\n  \"footer\",\r\n  \"form\",\r\n  \"h1\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"h4\",\r\n  \"h5\",\r\n  \"h6\",\r\n  \"head\",\r\n  \"header\",\r\n  \"hgroup\",\r\n  \"hr\",\r\n  \"html\",\r\n  \"i\",\r\n  \"iframe\",\r\n  \"img\",\r\n  \"input\",\r\n  \"ins\",\r\n  \"kbd\",\r\n  \"label\",\r\n  \"legend\",\r\n  \"li\",\r\n  \"link\",\r\n  \"main\",\r\n  \"map\",\r\n  \"mark\",\r\n  \"math\",\r\n  \"menu\",\r\n  \"menuitem\",\r\n  \"meta\",\r\n  \"meter\",\r\n  \"nav\",\r\n  \"noscript\",\r\n  \"object\",\r\n  \"ol\",\r\n  \"optgroup\",\r\n  \"option\",\r\n  \"output\",\r\n  \"p\",\r\n  \"param\",\r\n  \"picture\",\r\n  \"pre\",\r\n  \"progress\",\r\n  \"q\",\r\n  \"rb\",\r\n  \"rp\",\r\n  \"rt\",\r\n  \"rtc\",\r\n  \"ruby\",\r\n  \"s\",\r\n  \"samp\",\r\n  \"script\",\r\n  \"section\",\r\n  \"select\",\r\n  \"slot\",\r\n  \"small\",\r\n  \"source\",\r\n  \"span\",\r\n  \"strong\",\r\n  \"style\",\r\n  \"sub\",\r\n  \"summary\",\r\n  \"sup\",\r\n  \"svg\",\r\n  \"table\",\r\n  \"tbody\",\r\n  \"td\",\r\n  \"template\",\r\n  \"textarea\",\r\n  \"tfoot\",\r\n  \"th\",\r\n  \"thead\",\r\n  \"time\",\r\n  \"title\",\r\n  \"tr\",\r\n  \"track\",\r\n  \"u\",\r\n  \"ul\",\r\n  \"var\",\r\n  \"video\",\r\n  \"wbr\"\r\n];\r\n\r\nfunction isHtmlTag(name) {\r\n  return tags.includes(name);\r\n}\r\n\r\nfunction isTransition(name) {\r\n  return [\"transition-group\", \"TransitionGroup\"].includes(name);\r\n}\r\n\r\nfunction isHtmlAttribute(value) {\r\n  return (\r\n    [\"id\", \"class\", \"role\", \"style\"].includes(value) ||\r\n    value.startsWith(\"data-\") ||\r\n    value.startsWith(\"aria-\") ||\r\n    value.startsWith(\"on\")\r\n  );\r\n}\r\n\r\nexport { isHtmlTag, isHtmlAttribute, isTransition };\r\n", "import { camelize } from \"../util/string\";\r\nimport { events, isReadOnly } from \"./sortableEvents\";\r\nimport { isHtmlAttribute } from \"../util/tags\";\r\n\r\nfunction project(entries) {\r\n  return entries.reduce((res, [key, value]) => {\r\n    res[key] = value;\r\n    return res;\r\n  }, {});\r\n}\r\n\r\nfunction getComponentAttributes({ $attrs, componentData = {} }) {\r\n  const attributes = project(\r\n    Object.entries($attrs).filter(([key, _]) => isHtmlAttribute(key))\r\n  );\r\n  return {\r\n    ...attributes,\r\n    ...componentData\r\n  };\r\n}\r\n\r\nfunction createSortableOption({ $attrs, callBackBuilder }) {\r\n  const options = project(getValidSortableEntries($attrs));\r\n  Object.entries(callBackBuilder).forEach(([eventType, eventBuilder]) => {\r\n    events[eventType].forEach(event => {\r\n      options[`on${event}`] = eventBuilder(event);\r\n    });\r\n  });\r\n  const draggable = `[data-draggable]${options.draggable || \"\"}`;\r\n  return {\r\n    ...options,\r\n    draggable\r\n  };\r\n}\r\n\r\nfunction getValidSortableEntries(value) {\r\n  return Object.entries(value)\r\n    .filter(([key, _]) => !isHtmlAttribute(key))\r\n    .map(([key, value]) => [camelize(key), value])\r\n    .filter(([key, _]) => !isReadOnly(key));\r\n}\r\n\r\nexport {\r\n  getComponentAttributes,\r\n  createSortableOption,\r\n  getValidSortableEntries\r\n};\r\n", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}", "const getHtmlElementFromNode = ({ el }) => el;\r\nconst addContext = (domElement, context) =>\r\n  (domElement.__draggable_context = context);\r\nconst getContext = domElement => domElement.__draggable_context;\r\n\r\nclass ComponentStructure {\r\n  constructor({\r\n    nodes: { header, default: defaultNodes, footer },\r\n    root,\r\n    realList\r\n  }) {\r\n    this.defaultNodes = defaultNodes;\r\n    this.children = [...header, ...defaultNodes, ...footer];\r\n    this.externalComponent = root.externalComponent;\r\n    this.rootTransition = root.transition;\r\n    this.tag = root.tag;\r\n    this.realList = realList;\r\n  }\r\n\r\n  get _isRootComponent() {\r\n    return this.externalComponent || this.rootTransition;\r\n  }\r\n\r\n  render(h, attributes) {\r\n    const { tag, children, _isRootComponent } = this;\r\n    const option = !_isRootComponent ? children : { default: () => children };\r\n    return h(tag, attributes, option);\r\n  }\r\n\r\n  updated() {\r\n    const { defaultNodes, realList } = this;\r\n    defaultNodes.forEach((node, index) => {\r\n      addContext(getHtmlElementFromNode(node), {\r\n        element: realList[index],\r\n        index\r\n      });\r\n    });\r\n  }\r\n\r\n  getUnderlyingVm(domElement) {\r\n    return getContext(domElement);\r\n  }\r\n\r\n  getVmIndexFromDomIndex(domIndex, element) {\r\n    const { defaultNodes } = this;\r\n    const { length } = defaultNodes;\r\n    const domChildren = element.children;\r\n    const domElement = domChildren.item(domIndex);\r\n\r\n    if (domElement === null) {\r\n      return length;\r\n    }\r\n    const context = getContext(domElement);\r\n    if (context) {\r\n      return context.index;\r\n    }\r\n\r\n    if (length === 0) {\r\n      return 0;\r\n    }\r\n    const firstDomListElement = getHtmlElementFromNode(defaultNodes[0]);\r\n    const indexFirstDomListElement = [...domChildren].findIndex(\r\n      element => element === firstDomListElement\r\n    );\r\n    return domIndex < indexFirstDomListElement ? 0 : length;\r\n  }\r\n}\r\n\r\nexport { ComponentStructure };\r\n", "import { ComponentStructure } from \"./componentStructure\";\r\nimport { isHtmlTag, isTransition } from \"../util/tags\";\r\nimport { resolveComponent, TransitionGroup } from \"vue\";\r\n\r\nfunction getSlot(slots, key) {\r\n  const slotValue = slots[key];\r\n  return slotValue ? slotValue() : [];\r\n}\r\n\r\nfunction computeNodes({ $slots, realList, getKey }) {\r\n  const normalizedList = realList || [];\r\n  const [header, footer] = [\"header\", \"footer\"].map(name =>\r\n    getSlot($slots, name)\r\n  );\r\n  const { item } = $slots;\r\n  if (!item) {\r\n    throw new Error(\"draggable element must have an item slot\");\r\n  }\r\n  const defaultNodes = normalizedList.flatMap((element, index) =>\r\n    item({ element, index }).map(node => {\r\n      node.key = getKey(element);\r\n      node.props = { ...(node.props || {}), \"data-draggable\": true };\r\n      return node;\r\n    })\r\n  );\r\n  if (defaultNodes.length !== normalizedList.length) {\r\n    throw new Error(\"Item slot must have only one child\");\r\n  }\r\n  return {\r\n    header,\r\n    footer,\r\n    default: defaultNodes\r\n  };\r\n}\r\n\r\nfunction getRootInformation(tag) {\r\n  const transition = isTransition(tag);\r\n  const externalComponent = !isHtmlTag(tag) && !transition;\r\n  return {\r\n    transition,\r\n    externalComponent,\r\n    tag: externalComponent\r\n      ? resolveComponent(tag)\r\n      : transition\r\n      ? TransitionGroup\r\n      : tag\r\n  };\r\n}\r\n\r\nfunction computeComponentStructure({ $slots, tag, realList, getKey }) {\r\n  const nodes = computeNodes({ $slots, realList, getKey });\r\n  const root = getRootInformation(tag);\r\n  return new ComponentStructure({ nodes, root, realList });\r\n}\r\n\r\nexport { computeComponentStructure };\r\n", "import Sortable from \"sortablejs\";\r\nimport { insertNodeAt, removeNode } from \"./util/htmlHelper\";\r\nimport { console } from \"./util/console\";\r\nimport {\r\n  getComponentAttributes,\r\n  createSortableOption,\r\n  getValidSortableEntries\r\n} from \"./core/componentBuilderHelper\";\r\nimport { computeComponentStructure } from \"./core/renderHelper\";\r\nimport { events } from \"./core/sortableEvents\";\r\nimport { h, defineComponent, nextTick } from \"vue\";\r\n\r\nfunction emit(evtName, evtData) {\r\n  nextTick(() => this.$emit(evtName.toLowerCase(), evtData));\r\n}\r\n\r\nfunction manage(evtName) {\r\n  return (evtData, originalElement) => {\r\n    if (this.realList !== null) {\r\n      return this[`onDrag${evtName}`](evtData, originalElement);\r\n    }\r\n  };\r\n}\r\n\r\nfunction manageAndEmit(evtName) {\r\n  const delegateCallBack = manage.call(this, evtName);\r\n  return (evtData, originalElement) => {\r\n    delegateCallBack.call(this, evtData, originalElement);\r\n    emit.call(this, evtName, evtData);\r\n  };\r\n}\r\n\r\nlet draggingElement = null;\r\n\r\nconst props = {\r\n  list: {\r\n    type: Array,\r\n    required: false,\r\n    default: null\r\n  },\r\n  modelValue: {\r\n    type: Array,\r\n    required: false,\r\n    default: null\r\n  },\r\n  itemKey: {\r\n    type: [String, Function],\r\n    required: true\r\n  },\r\n  clone: {\r\n    type: Function,\r\n    default: original => {\r\n      return original;\r\n    }\r\n  },\r\n  tag: {\r\n    type: String,\r\n    default: \"div\"\r\n  },\r\n  move: {\r\n    type: Function,\r\n    default: null\r\n  },\r\n  componentData: {\r\n    type: Object,\r\n    required: false,\r\n    default: null\r\n  }\r\n};\r\n\r\nconst emits = [\r\n  \"update:modelValue\",\r\n  \"change\",\r\n  ...[...events.manageAndEmit, ...events.emit].map(evt => evt.toLowerCase())\r\n];\r\n\r\nconst draggableComponent = defineComponent({\r\n  name: \"draggable\",\r\n\r\n  inheritAttrs: false,\r\n\r\n  props,\r\n\r\n  emits,\r\n\r\n  data() {\r\n    return {\r\n      error: false\r\n    };\r\n  },\r\n\r\n  render() {\r\n    try {\r\n      this.error = false;\r\n      const { $slots, $attrs, tag, componentData, realList, getKey } = this;\r\n      const componentStructure = computeComponentStructure({\r\n        $slots,\r\n        tag,\r\n        realList,\r\n        getKey\r\n      });\r\n      this.componentStructure = componentStructure;\r\n      const attributes = getComponentAttributes({ $attrs, componentData });\r\n      return componentStructure.render(h, attributes);\r\n    } catch (err) {\r\n      this.error = true;\r\n      return h(\"pre\", { style: { color: \"red\" } }, err.stack);\r\n    }\r\n  },\r\n\r\n  created() {\r\n    if (this.list !== null && this.modelValue !== null) {\r\n      console.error(\r\n        \"modelValue and list props are mutually exclusive! Please set one or another.\"\r\n      );\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (this.error) {\r\n      return;\r\n    }\r\n\r\n    const { $attrs, $el, componentStructure } = this;\r\n    componentStructure.updated();\r\n\r\n    const sortableOptions = createSortableOption({\r\n      $attrs,\r\n      callBackBuilder: {\r\n        manageAndEmit: event => manageAndEmit.call(this, event),\r\n        emit: event => emit.bind(this, event),\r\n        manage: event => manage.call(this, event)\r\n      }\r\n    });\r\n    const targetDomElement = $el.nodeType === 1 ? $el : $el.parentElement;\r\n    this._sortable = new Sortable(targetDomElement, sortableOptions);\r\n    this.targetDomElement = targetDomElement;\r\n    targetDomElement.__draggable_component__ = this;\r\n  },\r\n\r\n  updated() {\r\n    this.componentStructure.updated();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    if (this._sortable !== undefined) this._sortable.destroy();\r\n  },\r\n\r\n  computed: {\r\n    realList() {\r\n      const { list } = this;\r\n      return list ? list : this.modelValue;\r\n    },\r\n\r\n    getKey() {\r\n      const { itemKey } = this;\r\n      if (typeof itemKey === \"function\") {\r\n        return itemKey;\r\n      }\r\n      return element => element[itemKey];\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    $attrs: {\r\n      handler(newOptionValue) {\r\n        const { _sortable } = this;\r\n        if (!_sortable) return;\r\n        getValidSortableEntries(newOptionValue).forEach(([key, value]) => {\r\n          _sortable.option(key, value);\r\n        });\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getUnderlyingVm(domElement) {\r\n      return this.componentStructure.getUnderlyingVm(domElement) || null;\r\n    },\r\n\r\n    getUnderlyingPotencialDraggableComponent(htmElement) {\r\n      //TODO check case where you need to see component children\r\n      return htmElement.__draggable_component__;\r\n    },\r\n\r\n    emitChanges(evt) {\r\n      nextTick(() => this.$emit(\"change\", evt));\r\n    },\r\n\r\n    alterList(onList) {\r\n      if (this.list) {\r\n        onList(this.list);\r\n        return;\r\n      }\r\n      const newList = [...this.modelValue];\r\n      onList(newList);\r\n      this.$emit(\"update:modelValue\", newList);\r\n    },\r\n\r\n    spliceList() {\r\n      const spliceList = list => list.splice(...arguments);\r\n      this.alterList(spliceList);\r\n    },\r\n\r\n    updatePosition(oldIndex, newIndex) {\r\n      const updatePosition = list =>\r\n        list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\r\n      this.alterList(updatePosition);\r\n    },\r\n\r\n    getRelatedContextFromMoveEvent({ to, related }) {\r\n      const component = this.getUnderlyingPotencialDraggableComponent(to);\r\n      if (!component) {\r\n        return { component };\r\n      }\r\n      const list = component.realList;\r\n      const context = { list, component };\r\n      if (to !== related && list) {\r\n        const destination = component.getUnderlyingVm(related) || {};\r\n        return { ...destination, ...context };\r\n      }\r\n      return context;\r\n    },\r\n\r\n    getVmIndexFromDomIndex(domIndex) {\r\n      return this.componentStructure.getVmIndexFromDomIndex(\r\n        domIndex,\r\n        this.targetDomElement\r\n      );\r\n    },\r\n\r\n    onDragStart(evt) {\r\n      this.context = this.getUnderlyingVm(evt.item);\r\n      evt.item._underlying_vm_ = this.clone(this.context.element);\r\n      draggingElement = evt.item;\r\n    },\r\n\r\n    onDragAdd(evt) {\r\n      const element = evt.item._underlying_vm_;\r\n      if (element === undefined) {\r\n        return;\r\n      }\r\n      removeNode(evt.item);\r\n      const newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\r\n      this.spliceList(newIndex, 0, element);\r\n      const added = { element, newIndex };\r\n      this.emitChanges({ added });\r\n    },\r\n\r\n    onDragRemove(evt) {\r\n      insertNodeAt(this.$el, evt.item, evt.oldIndex);\r\n      if (evt.pullMode === \"clone\") {\r\n        removeNode(evt.clone);\r\n        return;\r\n      }\r\n      const { index: oldIndex, element } = this.context;\r\n      this.spliceList(oldIndex, 1);\r\n      const removed = { element, oldIndex };\r\n      this.emitChanges({ removed });\r\n    },\r\n\r\n    onDragUpdate(evt) {\r\n      removeNode(evt.item);\r\n      insertNodeAt(evt.from, evt.item, evt.oldIndex);\r\n      const oldIndex = this.context.index;\r\n      const newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\r\n      this.updatePosition(oldIndex, newIndex);\r\n      const moved = { element: this.context.element, oldIndex, newIndex };\r\n      this.emitChanges({ moved });\r\n    },\r\n\r\n    computeFutureIndex(relatedContext, evt) {\r\n      if (!relatedContext.element) {\r\n        return 0;\r\n      }\r\n      const domChildren = [...evt.to.children].filter(\r\n        el => el.style[\"display\"] !== \"none\"\r\n      );\r\n      const currentDomIndex = domChildren.indexOf(evt.related);\r\n      const currentIndex = relatedContext.component.getVmIndexFromDomIndex(\r\n        currentDomIndex\r\n      );\r\n      const draggedInList = domChildren.indexOf(draggingElement) !== -1;\r\n      return draggedInList || !evt.willInsertAfter\r\n        ? currentIndex\r\n        : currentIndex + 1;\r\n    },\r\n\r\n    onDragMove(evt, originalEvent) {\r\n      const { move, realList } = this;\r\n      if (!move || !realList) {\r\n        return true;\r\n      }\r\n\r\n      const relatedContext = this.getRelatedContextFromMoveEvent(evt);\r\n      const futureIndex = this.computeFutureIndex(relatedContext, evt);\r\n      const draggedContext = {\r\n        ...this.context,\r\n        futureIndex\r\n      };\r\n      const sendEvent = {\r\n        ...evt,\r\n        relatedContext,\r\n        draggedContext\r\n      };\r\n      return move(sendEvent, originalEvent);\r\n    },\r\n\r\n    onDragEnd() {\r\n      draggingElement = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport default draggableComponent;\r\n", "import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n", "'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n", "// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n", "// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n", "var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n", "import { initCustomFormatter, warn } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry exports the runtime only, and is built as\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compile = () => {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Runtime compilation is not supported in this build of Vue.` +\r\n            (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                ) /* should not happen */);\r\n    }\r\n};\n\nexport { compile };\n", "<template>\n\t<div class=\"print-format-main\" :style=\"rootStyles\">\n\t\t<div :style=\"page_number_style\">{{ __(\"1 of 2\") }}</div>\n\n\t\t<LetterHeadEditor type=\"Header\" />\n\t\t<HTMLEditor\n\t\t\t:value=\"layout.header\"\n\t\t\t@change=\"layout.header = $event\"\n\t\t\t:button-label=\"__('Edit Header')\"\n\t\t/>\n\t\t<draggable\n\t\t\tclass=\"mb-4\"\n\t\t\tv-model=\"layout.sections\"\n\t\t\tgroup=\"sections\"\n\t\t\tfilter=\".section-columns, .column, .field\"\n\t\t\t:animation=\"200\"\n\t\t\titem-key=\"id\"\n\t\t>\n\t\t\t<template #item=\"{ element }\">\n\t\t\t\t<PrintFormatSection\n\t\t\t\t\t:section=\"element\"\n\t\t\t\t\t@add_section_above=\"add_section_above(element)\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</draggable>\n\t\t<HTMLEditor\n\t\t\t:value=\"layout.footer\"\n\t\t\t@change=\"layout.footer = $event\"\n\t\t\t:button-label=\"__('Edit Footer')\"\n\t\t/>\n\t\t<HTMLEditor\n\t\t\tv-if=\"letterhead\"\n\t\t\t:value=\"letterhead.footer\"\n\t\t\t@change=\"update_letterhead_footer\"\n\t\t\t:button-label=\"__('Edit Letter Head Footer')\"\n\t\t/>\n\t</div>\n</template>\n\n<script setup>\nimport draggable from \"vuedraggable\";\nimport HTMLEditor from \"./HTMLEditor.vue\";\nimport LetterHeadEditor from \"./LetterHeadEditor.vue\";\nimport PrintFormatSection from \"./PrintFormatSection.vue\";\nimport { useStore } from \"./store\";\nimport { computed, inject, watch } from \"vue\";\n\n// mixins\nlet { layout, letterhead, print_format } = useStore();\nlet store = inject(\"$store\");\n// methods\nfunction add_section_above(section) {\n\tlet sections = [];\n\tfor (let _section of layout.value.sections) {\n\t\tif (_section === section) {\n\t\t\tsections.push({\n\t\t\t\tlabel: \"\",\n\t\t\t\tcolumns: [\n\t\t\t\t\t{ label: \"\", fields: [] },\n\t\t\t\t\t{ label: \"\", fields: [] }\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\tsections.push(_section);\n\t}\n\tlayout.value[\"sections\"] = sections;\n}\nfunction update_letterhead_footer(val) {\n\tletterhead.value.footer = val;\n}\n\n// computed\nlet rootStyles = computed(() => {\n\tlet {\n\t\tmargin_top = 0,\n\t\tmargin_bottom = 0,\n\t\tmargin_left = 0,\n\t\tmargin_right = 0\n\t} = print_format.value;\n\treturn {\n\t\tpadding: `${margin_top}mm ${margin_right}mm ${margin_bottom}mm ${margin_left}mm`,\n\t\twidth: \"210mm\",\n\t\tminHeight: \"297mm\"\n\t};\n});\nlet page_number_style = computed(() => {\n\tlet style = {\n\t\tposition: \"absolute\",\n\t\tbackground: \"white\",\n\t\tpadding: \"4px\",\n\t\tborderRadius: \"var(--border-radius)\",\n\t\tborder: \"1px solid var(--border-color)\"\n\t};\n\tif (print_format.value.page_number.includes(\"Top\")) {\n\t\tstyle.top = print_format.value.margin_top / 2 + \"mm\";\n\t\tstyle.transform = \"translateY(-50%)\";\n\t}\n\tif (print_format.value.page_number.includes(\"Left\")) {\n\t\tstyle.left = print_format.value.margin_left + \"mm\";\n\t}\n\tif (print_format.value.page_number.includes(\"Right\")) {\n\t\tstyle.right = print_format.value.margin_right + \"mm\";\n\t}\n\tif (print_format.value.page_number.includes(\"Bottom\")) {\n\t\tstyle.bottom = print_format.value.margin_bottom / 2 + \"mm\";\n\t\tstyle.transform = \"translateY(50%)\";\n\t}\n\tif (print_format.value.page_number.includes(\"Center\")) {\n\t\tstyle.left = \"50%\";\n\t\tstyle.transform += \" translateX(-50%)\";\n\t}\n\tif (print_format.value.page_number.includes(\"Hide\")) {\n\t\tstyle.display = \"none\";\n\t}\n\n\treturn style;\n});\n\nwatch(layout, () => (store.dirty.value = true), { deep: true });\nwatch(print_format, () => (store.dirty.value = true), { deep: true });\n</script>\n\n<style scoped>\n.print-format-main {\n\tposition: relative;\n\tmargin-right: auto;\n\tmargin-left: auto;\n\tbackground-color: white;\n\tbox-shadow: var(--shadow-lg);\n\tborder-radius: var(--border-radius);\n}\n</style>\n", "<template>\n\t<div class=\"html-editor\">\n\t\t<div class=\"d-flex justify-content-end\">\n\t\t\t<button\n\t\t\t\tclass=\"btn btn-default btn-xs btn-edit\"\n\t\t\t\t@click=\"toggle_edit\"\n\t\t\t>\n\t\t\t\t{{ !editing ? buttonLabel : __(\"Done\") }}\n\t\t\t</button>\n\t\t</div>\n\t\t<div v-if=\"!editing\" v-html=\"value\"></div>\n\t\t<div v-show=\"editing\" ref=\"editor\"></div>\n\t</div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\n// props\nlet props = defineProps([\"value\", \"button-label\"]);\n\n// emits\nlet emit = defineEmits([\"change\"]);\n\n// variables\nlet editing = ref(false);\nlet control = ref(null);\nlet editor = ref(null);\n\n// methods\nfunction toggle_edit() {\n\tif (editing.value) {\n\t\temit(\"change\", get_value());\n\t\tediting.value = false;\n\t\treturn;\n\t}\n\n\tediting.value = true;\n\tif (!control.value) {\n\t\tcontrol.value = frappe.ui.form.make_control({\n\t\t\tparent: editor.value,\n\t\t\tdf: {\n\t\t\t\tfieldname: \"editor\",\n\t\t\t\tfieldtype: \"HTML Editor\",\n\t\t\t\tmin_lines: 10,\n\t\t\t\tmax_lines: 30,\n\t\t\t\tchange: () => {\n\t\t\t\t\temit(\"change\", get_value());\n\t\t\t\t}\n\t\t\t},\n\t\t\trender_input: true\n\t\t});\n\t}\n\tcontrol.value.set_value(props.value);\n}\nfunction get_value() {\n\treturn frappe.dom.remove_script_and_style(control.value.get_value());\n}\n</script>\n\n<style scoped>\n.html-editor {\n\tposition: relative;\n\tborder: 1px solid var(--dark-border-color);\n\tborder-radius: var(--border-radius);\n\tpadding: 1rem;\n\tmargin-bottom: 1rem;\n}\n\n.html-editor:last-child {\n\tmargin-bottom: 0;\n}\n</style>\n", "import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-87fb82a1\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"html-editor\" }\nconst _hoisted_2 = { class: \"d-flex justify-content-end\" }\nconst _hoisted_3 = [\"innerHTML\"]\nconst _hoisted_4 = { ref: \"editor\" }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        class: \"btn btn-default btn-xs btn-edit\",\n        onClick: $setup.toggle_edit\n      }, _toDisplayString(!$setup.editing ? _ctx.buttonLabel : _ctx.__(\"Done\")), 1 /* TEXT */)\n    ]),\n    (!$setup.editing)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          innerHTML: $props.value\n        }, null, 8 /* PROPS */, _hoisted_3))\n      : _createCommentVNode(\"v-if\", true),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), [\n      [_vShow, $setup.editing]\n    ])\n  ]))\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/HTMLEditor.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/HTMLEditor.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/HTMLEditor.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/HTMLEditor.vue\";script.__scopeId = \"data-v-87fb82a1\";export default script;", "export function create_default_layout(meta, print_format) {\n\tlet layout = {\n\t\theader: get_default_header(meta),\n\t\tsections: [],\n\t};\n\n\tlet section = null,\n\t\tcolumn = null;\n\n\tfunction set_column(df) {\n\t\tif (!section) {\n\t\t\tset_section();\n\t\t}\n\t\tcolumn = get_new_column(df);\n\t\tsection.columns.push(column);\n\t}\n\n\tfunction set_section(df) {\n\t\tsection = get_new_section(df);\n\t\tcolumn = null;\n\t\tlayout.sections.push(section);\n\t}\n\n\tfunction get_new_section(df) {\n\t\tif (!df) {\n\t\t\tdf = { label: \"\" };\n\t\t}\n\t\treturn {\n\t\t\tlabel: df.label || \"\",\n\t\t\tcolumns: [],\n\t\t};\n\t}\n\n\tfunction get_new_column(df) {\n\t\tif (!df) {\n\t\t\tdf = { label: \"\" };\n\t\t}\n\t\treturn {\n\t\t\tlabel: df.label || \"\",\n\t\t\tfields: [],\n\t\t};\n\t}\n\n\tfor (let df of meta.fields) {\n\t\tif (df.fieldname) {\n\t\t\t// make a copy to avoid mutation bugs\n\t\t\tdf = JSON.parse(JSON.stringify(df));\n\t\t} else {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (df.fieldtype === \"Section Break\") {\n\t\t\tset_section(df);\n\t\t} else if (df.fieldtype === \"Column Break\") {\n\t\t\tset_column(df);\n\t\t} else if (df.label) {\n\t\t\tif (!column) set_column();\n\n\t\t\tif (!df.print_hide) {\n\t\t\t\tlet field = {\n\t\t\t\t\tlabel: df.label,\n\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\tfieldtype: df.fieldtype,\n\t\t\t\t\toptions: df.options,\n\t\t\t\t};\n\n\t\t\t\tlet field_template = get_field_template(print_format, df.fieldname);\n\t\t\t\tif (field_template) {\n\t\t\t\t\tfield.label = `${__(df.label)} (${__(\"Field Template\")})`;\n\t\t\t\t\tfield.fieldtype = \"Field Template\";\n\t\t\t\t\tfield.field_template = field_template.name;\n\t\t\t\t\tfield.fieldname = df.fieldname = \"_template\";\n\t\t\t\t}\n\n\t\t\t\tif (df.fieldtype === \"Table\") {\n\t\t\t\t\tfield.table_columns = get_table_columns(df);\n\t\t\t\t}\n\n\t\t\t\tcolumn.fields.push(field);\n\t\t\t\tsection.has_fields = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove empty sections\n\tlayout.sections = layout.sections.filter((section) => section.has_fields);\n\n\treturn layout;\n}\n\nexport function get_table_columns(df) {\n\tlet table_columns = [];\n\tlet table_fields = frappe.get_meta(df.options).fields;\n\tlet total_width = 0;\n\tfor (let tf of table_fields) {\n\t\tif (\n\t\t\t!in_list([\"Section Break\", \"Column Break\"], tf.fieldtype) &&\n\t\t\t!tf.print_hide &&\n\t\t\tdf.label &&\n\t\t\ttotal_width < 100\n\t\t) {\n\t\t\tlet width =\n\t\t\t\ttypeof tf.width == \"number\" && tf.width < 100 ? tf.width : tf.width ? 20 : 10;\n\t\t\ttable_columns.push({\n\t\t\t\tlabel: tf.label,\n\t\t\t\tfieldname: tf.fieldname,\n\t\t\t\tfieldtype: tf.fieldtype,\n\t\t\t\toptions: tf.options,\n\t\t\t\twidth,\n\t\t\t});\n\t\t\ttotal_width += width;\n\t\t}\n\t}\n\treturn table_columns;\n}\n\nfunction get_field_template(print_format, fieldname) {\n\tlet templates = print_format.__onload.print_templates || {};\n\tfor (let template of templates) {\n\t\tif (template.field === fieldname) {\n\t\t\treturn template;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction get_default_header(meta) {\n\treturn `<div class=\"document-header\">\n\t<h3>${meta.name}</h3>\n\t<p>{{ doc.name }}</p>\n</div>`;\n}\n\nexport function pluck(object, keys) {\n\tlet out = {};\n\tfor (let key of keys) {\n\t\tif (key in object) {\n\t\t\tout[key] = object[key];\n\t\t}\n\t}\n\treturn out;\n}\n\nexport function get_image_dimensions(src) {\n\treturn new Promise((resolve) => {\n\t\tlet img = new Image();\n\t\timg.onload = function () {\n\t\t\tresolve({ width: this.width, height: this.height });\n\t\t};\n\t\timg.src = src;\n\t});\n}\n", "import { create_default_layout, pluck } from \"./utils\";\nimport { watch, ref, inject, computed, nextTick } from \"vue\";\n\nexport function getStore(print_format_name) {\n\t// variables\n\tlet letterhead_name = ref(null);\n\tlet print_format = ref(null);\n\tlet letterhead = ref(null);\n\tlet doctype = ref(null);\n\tlet meta = ref(null);\n\tlet layout = ref(null);\n\tlet dirty = ref(false);\n\tlet edit_letterhead = ref(false);\n\n\t// methods\n\tfunction fetch() {\n\t\treturn new Promise((resolve) => {\n\t\t\tfrappe.model.clear_doc(\"Print Format\", print_format_name);\n\t\t\tfrappe.model.with_doc(\"Print Format\", print_format_name, () => {\n\t\t\t\tlet _print_format = frappe.get_doc(\"Print Format\", print_format_name);\n\t\t\t\tfrappe.model.with_doctype(_print_format.doc_type, () => {\n\t\t\t\t\tmeta.value = frappe.get_meta(_print_format.doc_type);\n\t\t\t\t\tprint_format.value = _print_format;\n\t\t\t\t\tlayout.value = get_layout();\n\t\t\t\t\tnextTick(() => (dirty.value = false));\n\t\t\t\t\tedit_letterhead.value = false;\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\tfunction update({ fieldname, value }) {\n\t\tprint_format.value[fieldname] = value;\n\t}\n\tfunction save_changes() {\n\t\tfrappe.dom.freeze(__(\"Saving...\"));\n\n\t\tlayout.value.sections = layout.value.sections\n\t\t\t.filter((section) => !section.remove)\n\t\t\t.map((section) => {\n\t\t\t\tsection.columns = section.columns.map((column) => {\n\t\t\t\t\tcolumn.fields = column.fields\n\t\t\t\t\t\t.filter((df) => !df.remove)\n\t\t\t\t\t\t.map((df) => {\n\t\t\t\t\t\t\tif (df.table_columns) {\n\t\t\t\t\t\t\t\tdf.table_columns = df.table_columns.map((tf) => {\n\t\t\t\t\t\t\t\t\treturn pluck(tf, [\n\t\t\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t\t\t\"fieldname\",\n\t\t\t\t\t\t\t\t\t\t\"fieldtype\",\n\t\t\t\t\t\t\t\t\t\t\"options\",\n\t\t\t\t\t\t\t\t\t\t\"width\",\n\t\t\t\t\t\t\t\t\t\t\"field_template\",\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn pluck(df, [\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t\"fieldname\",\n\t\t\t\t\t\t\t\t\"fieldtype\",\n\t\t\t\t\t\t\t\t\"options\",\n\t\t\t\t\t\t\t\t\"table_columns\",\n\t\t\t\t\t\t\t\t\"html\",\n\t\t\t\t\t\t\t\t\"field_template\",\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t});\n\t\t\t\t\treturn column;\n\t\t\t\t});\n\t\t\t\treturn section;\n\t\t\t});\n\n\t\tprint_format.value.format_data = JSON.stringify(layout.value);\n\n\t\tfrappe\n\t\t\t.call(\"frappe.client.save\", {\n\t\t\t\tdoc: print_format.value,\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (letterhead.value && letterhead.value._dirty) {\n\t\t\t\t\treturn frappe\n\t\t\t\t\t\t.call(\"frappe.client.save\", {\n\t\t\t\t\t\t\tdoc: letterhead.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((r) => (letterhead.value = r.message));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => fetch())\n\t\t\t.always(() => {\n\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t});\n\t}\n\tfunction reset_changes() {\n\t\tfetch();\n\t}\n\tfunction get_layout() {\n\t\tif (print_format.value) {\n\t\t\tif (typeof print_format.value.format_data == \"string\") {\n\t\t\t\treturn JSON.parse(print_format.value.format_data);\n\t\t\t}\n\t\t\treturn print_format.value.format_data;\n\t\t}\n\t\treturn null;\n\t}\n\tfunction get_default_layout() {\n\t\treturn create_default_layout(meta.value, print_format.value);\n\t}\n\tfunction change_letterhead(_letterhead) {\n\t\treturn frappe.db.get_doc(\"Letter Head\", _letterhead).then((doc) => {\n\t\t\tletterhead.value = doc;\n\t\t});\n\t}\n\n\t// watch\n\twatch(layout, () => {\n\t\tdirty.value = true;\n\t});\n\twatch(print_format, () => {\n\t\tdirty.value = true;\n\t});\n\n\treturn {\n\t\tletterhead_name,\n\t\tprint_format,\n\t\tletterhead,\n\t\tdoctype,\n\t\tmeta,\n\t\tlayout,\n\t\tdirty,\n\t\tedit_letterhead,\n\t\tfetch,\n\t\tupdate,\n\t\tsave_changes,\n\t\treset_changes,\n\t\tget_layout,\n\t\tget_default_layout,\n\t\tchange_letterhead,\n\t};\n}\n\nexport function useStore() {\n\t// inject store\n\tlet store = ref(inject(\"$store\"));\n\n\t// computed\n\tlet print_format = computed(() => {\n\t\treturn store.value.print_format;\n\t});\n\tlet layout = computed(() => {\n\t\treturn store.value.layout;\n\t});\n\tlet letterhead = computed(() => {\n\t\treturn store.value.letterhead;\n\t});\n\tlet meta = computed(() => {\n\t\treturn store.value.meta;\n\t});\n\n\treturn { print_format, layout, letterhead, meta, store };\n}\n", "<template>\n\t<div class=\"letterhead\">\n\t\t<div class=\"mb-4 d-flex justify-content-between\">\n\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"letterhead && store.edit_letterhead\"\n\t\t\t\t\tclass=\"btn-group\"\n\t\t\t\t\trole=\"group\"\n\t\t\t\t\taria-label=\"Align Letterhead\"\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tv-for=\"direction in ['Left', 'Center', 'Right']\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-xs\"\n\t\t\t\t\t\t@click=\"letterhead.align = direction\"\n\t\t\t\t\t\t:class=\"\n\t\t\t\t\t\t\tletterhead.align == direction\n\t\t\t\t\t\t\t\t? 'btn-secondary'\n\t\t\t\t\t\t\t\t: 'btn-default'\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ direction }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tclass=\"ml-4 custom-range\"\n\t\t\t\t\tv-if=\"letterhead && store.edit_letterhead\"\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tname=\"image-resize\"\n\t\t\t\t\tmin=\"20\"\n\t\t\t\t\t:max=\"range_input_field === 'image_width' ? 700 : 500\"\n\t\t\t\t\t:value=\"letterhead[range_input_field]\"\n\t\t\t\t\t@input=\"\n\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t(letterhead[range_input_field] = parseFloat(\n\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"ml-2 btn btn-default btn-xs\"\n\t\t\t\t\tv-if=\"letterhead && store.edit_letterhead\"\n\t\t\t\t\t@click=\"upload_image\"\n\t\t\t\t>\n\t\t\t\t\t{{ __(\"Change Image\") }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"letterhead && store.edit_letterhead\"\n\t\t\t\t\tclass=\"ml-2 btn btn-default btn-xs btn-change-letterhead\"\n\t\t\t\t\t@click=\"change_letterhead\"\n\t\t\t\t>\n\t\t\t\t\t{{ __(\"Change Letter Head\") }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"letterhead\"\n\t\t\t\t\tclass=\"ml-2 btn btn-default btn-xs btn-edit\"\n\t\t\t\t\t@click=\"toggle_edit_letterhead\"\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\t!store.edit_letterhead\n\t\t\t\t\t\t\t? __(\"Edit Letter Head\")\n\t\t\t\t\t\t\t: __(\"Done\")\n\t\t\t\t\t}}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"!letterhead\"\n\t\t\t\t\tclass=\"ml-2 btn btn-default btn-xs btn-edit\"\n\t\t\t\t\t@click=\"create_letterhead\"\n\t\t\t\t>\n\t\t\t\t\t{{ __(\"Create Letter Head\") }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"letterhead && !store.edit_letterhead\"\n\t\t\tv-html=\"letterhead.content\"\n\t\t></div>\n\t\t<!-- <div v-show=\"letterhead && store.edit_letterhead\" ref=\"editor\"></div> -->\n\t\t<div\n\t\t\tclass=\"edit-letterhead\"\n\t\t\tv-if=\"letterhead && store.edit_letterhead\"\n\t\t\t:style=\"{\n\t\t\t\tjustifyContent: {\n\t\t\t\t\tLeft: 'flex-start',\n\t\t\t\t\tCenter: 'center',\n\t\t\t\t\tRight: 'flex-end'\n\t\t\t\t}[letterhead.align]\n\t\t\t}\"\n\t\t>\n\t\t\t<div class=\"edit-image\">\n\t\t\t\t<div v-if=\"letterhead.image\">\n\t\t\t\t\t<img\n\t\t\t\t\t\t:src=\"letterhead.image\"\n\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\twidth:\n\t\t\t\t\t\t\t\trange_input_field === 'image_width'\n\t\t\t\t\t\t\t\t\t? letterhead.image_width + 'px'\n\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\theight:\n\t\t\t\t\t\t\t\trange_input_field === 'image_height'\n\t\t\t\t\t\t\t\t\t? letterhead.image_height + 'px'\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button v-else class=\"btn btn-default\" @click=\"upload_image\">\n\t\t\t\t\t{{ __(\"Upload Image\") }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport { useStore } from \"./store\";\nimport { get_image_dimensions } from \"./utils\";\nimport { ref, watch, onMounted } from \"vue\";\n\n// mixin\nlet { letterhead, store } = useStore();\n\n// variables\nlet range_input_field = ref(null);\nlet aspect_ratio = ref(null);\nlet control = ref(null);\nlet editor = ref(null);\n\n// methods\nfunction toggle_edit_letterhead() {\n\tif (store.value.edit_letterhead) {\n\t\tstore.value.edit_letterhead = false;\n\t\treturn;\n\t}\n\tstore.value.edit_letterhead = true;\n\tif (!control.value) {\n\t\tcontrol.value = frappe.ui.form.make_control({\n\t\t\tparent: editor.value,\n\t\t\tdf: {\n\t\t\t\tfieldname: \"letterhead\",\n\t\t\t\tfieldtype: \"Comment\",\n\t\t\t\tchange: () => {\n\t\t\t\t\tletterhead.value._dirty = true;\n\t\t\t\t\tletterhead.value.content = control.value.get_value();\n\t\t\t\t}\n\t\t\t},\n\t\t\trender_input: true,\n\t\t\tonly_input: true,\n\t\t\tno_wrapper: true\n\t\t});\n\t}\n\tcontrol.value.set_value(letterhead.value.content);\n};\nfunction change_letterhead() {\n\tlet d = new frappe.ui.Dialog({\n\t\ttitle: __(\"Change Letter Head\"),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tlabel: __(\"Letter Head\"),\n\t\t\t\tfieldname: \"letterhead\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"Letter Head\"\n\t\t\t}\n\t\t],\n\t\tprimary_action: ({ letterhead }) => {\n\t\t\tif (letterhead) {\n\t\t\t\tset_letterhead(letterhead);\n\t\t\t}\n\t\t\td.hide();\n\t\t}\n\t});\n\td.show();\n};\nfunction upload_image() {\n\tnew frappe.ui.FileUploader({\n\t\tfolder: \"Home/Attachments\",\n\t\ton_success: file_doc => {\n\t\t\tget_image_dimensions(file_doc.file_url).then(\n\t\t\t\t({ width, height }) => {\n\t\t\t\t\tletterhead.value[\"image\"] = file_doc.file_url;\n\t\t\t\t\tlet new_width = width;\n\t\t\t\t\tlet new_height = height;\n\t\t\t\t\taspect_ratio.value = width / height;\n\t\t\t\t\trange_input_field.value =\n\t\t\t\t\t\taspect_ratio.value > 1\n\t\t\t\t\t\t\t? \"image_width\"\n\t\t\t\t\t\t\t: \"image_height\";\n\n\t\t\t\t\tif (width > 200) {\n\t\t\t\t\t\tnew_width = 200;\n\t\t\t\t\t\tnew_height = new_width / aspect_ratio.value;\n\t\t\t\t\t}\n\t\t\t\t\tif (height > 80) {\n\t\t\t\t\t\tnew_height = 80;\n\t\t\t\t\t\tnew_width = aspect_ratio.value * new_height;\n\t\t\t\t\t}\n\n\t\t\t\t\tletterhead.value[\"image_height\"] = new_height;\n\t\t\t\t\tletterhead.value[\"image_width\"] = new_width;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n};\nfunction set_letterhead(_letterhead) {\n\tstore.value.change_letterhead(_letterhead).then(() => {\n\t\tget_image_dimensions(letterhead.value.image).then(\n\t\t\t({ width, height }) => {\n\t\t\t\taspect_ratio.value = width / height;\n\t\t\t\trange_input_field.value =\n\t\t\t\t\taspect_ratio.value > 1\n\t\t\t\t\t\t? \"image_width\"\n\t\t\t\t\t\t: \"image_height\";\n\t\t\t}\n\t\t);\n\t});\n};\nfunction create_letterhead() {\n\tlet d = new frappe.ui.Dialog({\n\t\ttitle: __(\"Create Letter Head\"),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tlabel: __(\"Letter Head Name\"),\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tfieldtype: \"Data\"\n\t\t\t}\n\t\t],\n\t\tprimary_action: ({ name }) => {\n\t\t\treturn frappe.db\n\t\t\t\t.insert({\n\t\t\t\t\tdoctype: \"Letter Head\",\n\t\t\t\t\tletter_head_name: name,\n\t\t\t\t\tsource: \"Image\"\n\t\t\t\t})\n\t\t\t\t.then(doc => {\n\t\t\t\t\td.hide();\n\t\t\t\t\tstore.value.change_letterhead(doc.name).then(() => {\n\t\t\t\t\t\ttoggle_edit_letterhead();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t});\n\td.show();\n}\n// mounted\nonMounted(() => {\n\tif (!letterhead.value && frappe.boot.sysdefaults.letter_head) {\n\t\tset_letterhead(frappe.boot.sysdefaults.letter_head);\n\t}\n\n\twatch(() => {\n\t\treturn letterhead.value\n\t\t\t\t? letterhead.value[range_input_field.value]\n\t\t\t\t: null;\n\t}, () => {\n\t\tif (aspect_ratio.value === null) return;\n\n\t\tlet update_field =\n\t\t\trange_input_field.value == \"image_width\"\n\t\t\t\t? \"image_height\"\n\t\t\t\t: \"image_width\";\n\t\tletterhead.value[update_field] =\n\t\t\tupdate_field == \"image_width\"\n\t\t\t\t? aspect_ratio.value * letterhead.value.image_height\n\t\t\t\t: letterhead.value.image_width / aspect_ratio.value;\n\t});\n});\n\n// watch\nwatch(letterhead, () => {\n\tif (!letterhead.value) return;\n\tif (letterhead.value.image_width && letterhead.value.image_height) {\n\t\tlet dimension =\n\t\t\tletterhead.value.image_width > letterhead.value.image_height\n\t\t\t\t? \"width\"\n\t\t\t\t: \"height\";\n\t\tlet dimension_value = letterhead.value[\"image_\" + dimension];\n\t\tletterhead.value.content = `\n\t\t\t<div style=\"text-align: ${letterhead.value.align.toLowerCase()};\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"${letterhead.value.image}\"\n\t\t\t\t\talt=\"${letterhead.value.name}\"\n\t\t\t\t\t${dimension}=\"${dimension_value}\"\n\t\t\t\t\tstyle=\"${dimension}: ${dimension_value}px;\">\n\t\t\t</div>\n\t\t`;\n\t}\n}, { deep: true }, { immediate: true });\n</script>\n\n<style scoped>\n.letterhead {\n\tposition: relative;\n\tborder: 1px solid var(--dark-border-color);\n\tborder-radius: var(--border-radius);\n\tpadding: 1rem;\n\tmargin-bottom: 1rem;\n}\n.edit-letterhead {\n\tdisplay: flex;\n\talign-items: center;\n}\n.edit-image {\n\tmin-width: 40px;\n\tmin-height: 40px;\n\tborder: 1px solid var(--border-color);\n}\n.edit-image img {\n\theight: 100%;\n}\n.edit-title {\n\tmargin-left: 1rem;\n\tborder: 1px solid transparent;\n\tborder-radius: var(--border-radius);\n\tfont-size: var(--text-md);\n\tfont-weight: 600;\n}\n</style>\n", "import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f982735c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"letterhead\" }\nconst _hoisted_2 = { class: \"mb-4 d-flex justify-content-between\" }\nconst _hoisted_3 = { class: \"d-flex align-items-center\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"btn-group\",\n  role: \"group\",\n  \"aria-label\": \"Align Letterhead\"\n}\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = [\"max\", \"value\"]\nconst _hoisted_7 = [\"innerHTML\"]\nconst _hoisted_8 = { class: \"edit-image\" }\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = [\"src\"]\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        ($setup.letterhead && $setup.store.edit_letterhead)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['Left', 'Center', 'Right'], (direction) => {\n                return _createElementVNode(\"button\", {\n                  type: \"button\",\n                  class: _normalizeClass([\"btn btn-xs\", \n\t\t\t\t\t\t\t$setup.letterhead.align == direction\n\t\t\t\t\t\t\t\t? 'btn-secondary'\n\t\t\t\t\t\t\t\t: 'btn-default'\n\t\t\t\t\t\t]),\n                  onClick: $event => ($setup.letterhead.align = direction)\n                }, _toDisplayString(direction), 11 /* TEXT, CLASS, PROPS */, _hoisted_5)\n              }), 64 /* STABLE_FRAGMENT */))\n            ]))\n          : _createCommentVNode(\"v-if\", true),\n        ($setup.letterhead && $setup.store.edit_letterhead)\n          ? (_openBlock(), _createElementBlock(\"input\", {\n              key: 1,\n              class: \"ml-4 custom-range\",\n              type: \"range\",\n              name: \"image-resize\",\n              min: \"20\",\n              max: $setup.range_input_field === 'image_width' ? 700 : 500,\n              value: $setup.letterhead[$setup.range_input_field],\n              onInput: _cache[0] || (_cache[0] = \n\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t($setup.letterhead[$setup.range_input_field] = parseFloat(\n\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t))\n\t\t\t\t\t)\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6))\n          : _createCommentVNode(\"v-if\", true)\n      ]),\n      _createElementVNode(\"div\", null, [\n        ($setup.letterhead && $setup.store.edit_letterhead)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              class: \"ml-2 btn btn-default btn-xs\",\n              onClick: $setup.upload_image\n            }, _toDisplayString(_ctx.__(\"Change Image\")), 1 /* TEXT */))\n          : _createCommentVNode(\"v-if\", true),\n        ($setup.letterhead && $setup.store.edit_letterhead)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"ml-2 btn btn-default btn-xs btn-change-letterhead\",\n              onClick: $setup.change_letterhead\n            }, _toDisplayString(_ctx.__(\"Change Letter Head\")), 1 /* TEXT */))\n          : _createCommentVNode(\"v-if\", true),\n        ($setup.letterhead)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 2,\n              class: \"ml-2 btn btn-default btn-xs btn-edit\",\n              onClick: $setup.toggle_edit_letterhead\n            }, _toDisplayString(!$setup.store.edit_letterhead\n\t\t\t\t\t\t\t? _ctx.__(\"Edit Letter Head\")\n\t\t\t\t\t\t\t: _ctx.__(\"Done\")), 1 /* TEXT */))\n          : _createCommentVNode(\"v-if\", true),\n        (!$setup.letterhead)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 3,\n              class: \"ml-2 btn btn-default btn-xs btn-edit\",\n              onClick: $setup.create_letterhead\n            }, _toDisplayString(_ctx.__(\"Create Letter Head\")), 1 /* TEXT */))\n          : _createCommentVNode(\"v-if\", true)\n      ])\n    ]),\n    ($setup.letterhead && !$setup.store.edit_letterhead)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          innerHTML: $setup.letterhead.content\n        }, null, 8 /* PROPS */, _hoisted_7))\n      : _createCommentVNode(\"v-if\", true),\n    _createCommentVNode(\" <div v-show=\\\"letterhead && store.edit_letterhead\\\" ref=\\\"editor\\\"></div> \"),\n    ($setup.letterhead && $setup.store.edit_letterhead)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"edit-letterhead\",\n          style: _normalizeStyle({\n\t\t\t\tjustifyContent: {\n\t\t\t\t\tLeft: 'flex-start',\n\t\t\t\t\tCenter: 'center',\n\t\t\t\t\tRight: 'flex-end'\n\t\t\t\t}[$setup.letterhead.align]\n\t\t\t})\n        }, [\n          _createElementVNode(\"div\", _hoisted_8, [\n            ($setup.letterhead.image)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                  _createElementVNode(\"img\", {\n                    src: $setup.letterhead.image,\n                    style: _normalizeStyle({\n\t\t\t\t\t\t\twidth:\n\t\t\t\t\t\t\t\t$setup.range_input_field === 'image_width'\n\t\t\t\t\t\t\t\t\t? $setup.letterhead.image_width + 'px'\n\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\theight:\n\t\t\t\t\t\t\t\t$setup.range_input_field === 'image_height'\n\t\t\t\t\t\t\t\t\t? $setup.letterhead.image_height + 'px'\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t})\n                  }, null, 12 /* STYLE, PROPS */, _hoisted_10)\n                ]))\n              : (_openBlock(), _createElementBlock(\"button\", {\n                  key: 1,\n                  class: \"btn btn-default\",\n                  onClick: $setup.upload_image\n                }, _toDisplayString(_ctx.__(\"Upload Image\")), 1 /* TEXT */))\n          ])\n        ], 4 /* STYLE */))\n      : _createCommentVNode(\"v-if\", true)\n  ]))\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/LetterHeadEditor.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/LetterHeadEditor.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/LetterHeadEditor.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/LetterHeadEditor.vue\";script.__scopeId = \"data-v-f982735c\";export default script;", "<template>\n\t<div class=\"print-format-section-container\" v-if=\"!section.remove\">\n\t\t<div class=\"print-format-section\">\n\t\t\t<div class=\"section-header\">\n\t\t\t\t<input\n\t\t\t\t\tclass=\"input-section-label w-50\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"__('Section Title')\"\n\t\t\t\t\tv-model=\"section.label\"\n\t\t\t\t/>\n\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"mr-2 text-small text-muted d-flex\"\n\t\t\t\t\t\tv-if=\"section.field_orientation == 'left-right'\"\n\t\t\t\t\t\t:title=\"\n\t\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\t\t__('Render labels to the left and values to the right in this section')\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLabel \u2192 Value\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"dropdown\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"btn btn-xs btn-section dropdown-button\"\n\t\t\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t\t\t\t<use href=\"#icon-dot-horizontal\"></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"dropdown-menu dropdown-menu-right\"\n\t\t\t\t\t\t\trole=\"menu\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tv-for=\"option in section_options\"\n\t\t\t\t\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\t\t\t\t\t@click=\"option.action\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ option.label }}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row section-columns\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"column col\"\n\t\t\t\t\tv-for=\"(column, i) in section.columns\"\n\t\t\t\t\t:key=\"i\"\n\t\t\t\t>\n\t\t\t\t\t<draggable\n\t\t\t\t\t\tclass=\"drag-container\"\n\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\tbackgroundColor: column.fields.length\n\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t: 'var(--gray-50)'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\tv-model=\"column.fields\"\n\t\t\t\t\t\tgroup=\"fields\"\n\t\t\t\t\t\t:animation=\"150\"\n\t\t\t\t\t\titem-key=\"id\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #item=\"{ element }\">\n\t\t\t\t\t\t\t<Field :df=\"element\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</draggable>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tclass=\"my-4 text-center text-muted font-italic\"\n\t\t\tv-if=\"section.page_break\"\n\t\t>\n\t\t\t{{ __(\"Page Break\") }}\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport draggable from \"vuedraggable\";\nimport Field from \"./Field.vue\";\nimport { computed } from \"vue\";\n\n// props\nlet props = defineProps([\"section\"]);\n\n// emits\nlet emit = defineEmits([\"add_section_above\"]);\n\n// methods\nfunction add_column() {\n\tif (props.section.columns.length < 4) {\n\t\tprops.section.columns.push({\n\t\t\tlabel: \"\",\n\t\t\tfields: []\n\t\t});\n\t}\n}\nfunction remove_column() {\n\tif (props.section.columns.length <= 1) return;\n\n\tlet columns = props.section.columns.slice();\n\tlet last_column_fields = columns.slice(-1)[0].fields.slice();\n\tlet index = columns.length - 1;\n\tcolumns = columns.slice(0, index);\n\tlet last_column = columns[index - 1];\n\tlast_column.fields = [...last_column.fields, ...last_column_fields];\n\n\tprops.section[\"columns\"] = columns;\n}\nfunction add_page_break() {\n\tprops.section[\"page_break\"] = true;\n}\nfunction remove_page_break() {\n\tprops.section[\"page_break\"] = false;\n}\n\n// computed\nlet section_options = computed(() => {\n\treturn [\n\t\t{\n\t\t\tlabel: __(\"Add section above\"),\n\t\t\taction: () => emit(\"add_section_above\")\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Add column\"),\n\t\t\taction: add_column,\n\t\t\tcondition: () => props.section.columns.length < 4\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Remove column\"),\n\t\t\taction: remove_column,\n\t\t\tcondition: () => props.section.columns.length > 1\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Add page break\"),\n\t\t\taction: add_page_break,\n\t\t\tcondition: () => !props.section.page_break\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Remove page break\"),\n\t\t\taction: remove_page_break,\n\t\t\tcondition: () => props.section.page_break\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Remove section\"),\n\t\t\taction: () => { props.section[\"remove\"] = true }\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Field Orientation (Left-Right)\"),\n\t\t\tcondition: () => !props.section.field_orientation,\n\t\t\taction: () => { props.section[\"field_orientation\"] = \"left-right\" }\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Field Orientation (Top-Down)\"),\n\t\t\tcondition: () =>\n\t\t\t\tprops.section.field_orientation == \"left-right\",\n\t\t\taction: () => { props.section[\"field_orientation\"] = \"\" }\n\t\t}\n\t].filter(option => (option.condition ? option.condition() : true));\n})\n\n</script>\n\n<style scoped>\n.print-format-section-container:not(:last-child) {\n\tmargin-bottom: 1rem;\n}\n\n.print-format-section {\n\tbackground-color: white;\n\tborder: 1px solid var(--dark-border-color);\n\tborder-radius: var(--border-radius);\n\tpadding: 1rem;\n\tcursor: pointer;\n}\n\n.section-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding-bottom: 0.75rem;\n}\n\n.input-section-label {\n\tborder: 1px solid transparent;\n\tborder-radius: var(--border-radius);\n\tfont-size: var(--text-md);\n\tfont-weight: 600;\n}\n\n.input-section-label:focus {\n\tborder-color: var(--border-color);\n\toutline: none;\n\tbackground-color: var(--control-bg);\n}\n\n.input-section-label::placeholder {\n\tfont-style: italic;\n\tfont-weight: normal;\n}\n\n.btn-section {\n\tpadding: var(--padding-xs);\n\tbox-shadow: none;\n}\n\n.btn-section:hover {\n\tbackground-color: var(--bg-light-gray);\n}\n\n.print-format-section:not(:first-child) {\n\tmargin-top: 1rem;\n}\n\n.section-columns {\n\tmargin-left: -8px;\n\tmargin-right: -8px;\n}\n\n.column {\n\tpadding-left: 8px;\n\tpadding-right: 8px;\n}\n\n.drag-container {\n\theight: 100%;\n\tmin-height: 2rem;\n\tborder-radius: var(--border-radius);\n}\n</style>\n", "<template>\n\t<div>\n\t\t<p class=\"mb-3 text-muted\">\n\t\t\t{{ help_message }}\n\t\t</p>\n\t\t<div class=\"row font-weight-bold\">\n\t\t\t<div class=\"col-8\">\n\t\t\t\t{{ __(\"Column\") }}\n\t\t\t</div>\n\t\t\t<div class=\"col-4\">\n\t\t\t\t{{ __(\"Width\") }}\n\t\t\t\t({{ __(\"Total:\") }} {{ total_width }})\n\t\t\t</div>\n\t\t</div>\n\t\t<draggable\n\t\t\t:list=\"df.table_columns\"\n\t\t\t:animation=\"200\"\n\t\t\t:group=\"df.fieldname\"\n\t\t\thandle=\".icon-drag\"\n\t\t>\n\t\t\t<template #item=\"{ element }\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mt-2 row align-center column-row\"\n\t\t\t\t\tv-for=\"column in df.table_columns\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"col-8\">\n\t\t\t\t\t\t<div class=\"column-label d-flex align-center\">\n\t\t\t\t\t\t\t<div class=\"px-2 icon-drag ml-n2\">\n\t\t\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t\t\t<use href=\"#icon-drag\"></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"mt-1 ml-1\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclass=\"input-column-label\"\n\t\t\t\t\t\t\t\t\t:class=\"{ 'text-danger': column.invalid_width }\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tv-model=\"column.label\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-4 d-flex align-items-center\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tclass=\"text-right form-control\"\n\t\t\t\t\t\t\t:class=\"{ 'text-danger is-invalid': column.invalid_width }\"\n\t\t\t\t\t\t\tv-model.number=\"column.width\"\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\t\tstep=\"5\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"ml-2 btn btn-xs btn-icon\"\n\t\t\t\t\t\t\t@click=\"remove_column(column)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t\t\t\t<use href=\"#icon-close\"></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</draggable>\n\t</div>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport draggable from \"vuedraggable\";\n\n// props\nlet props = defineProps([\"df\"]);\n\n// methods\nfunction remove_column(column) {\n\tprops.df[\"table_columns\"] = props.df.table_columns.filter(_column => _column !== column)\n}\n// computed\nlet help_message = computed(() => {\n\t// prettier-ignore\n\treturn __(\"Drag columns to set order. Column width is set in percentage. The total width should not be more than 100. Columns marked in red will be removed.\");\n});\nlet total_width = computed(() => {\n\treturn props.df.table_columns.reduce((total, tf) => total + tf.width, 0);\n});\n</script>\n\n<style scoped>\n.icon-drag {\n\tcursor: grab;\n}\n.input-column-label {\n\tborder: 1px solid transparent;\n\tborder-radius: var(--border-radius);\n\tfont-size: var(--text-md);\n}\n.input-column-label:focus {\n\tborder-color: var(--border-color);\n\toutline: none;\n\tbackground-color: var(--control-bg);\n}\n.input-column-label::placeholder {\n\tfont-style: italic;\n\tfont-weight: normal;\n}\n</style>\n", "import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9833c2ed\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mb-3 text-muted\" }\nconst _hoisted_2 = { class: \"row font-weight-bold\" }\nconst _hoisted_3 = { class: \"col-8\" }\nconst _hoisted_4 = { class: \"col-4\" }\nconst _hoisted_5 = { class: \"mt-2 row align-center column-row\" }\nconst _hoisted_6 = { class: \"col-8\" }\nconst _hoisted_7 = { class: \"column-label d-flex align-center\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"px-2 icon-drag ml-n2\" }, [\n  /*#__PURE__*/_createElementVNode(\"svg\", { class: \"icon icon-xs\" }, [\n    /*#__PURE__*/_createElementVNode(\"use\", { href: \"#icon-drag\" })\n  ])\n], -1 /* HOISTED */))\nconst _hoisted_9 = { class: \"mt-1 ml-1\" }\nconst _hoisted_10 = [\"onUpdate:modelValue\"]\nconst _hoisted_11 = { class: \"col-4 d-flex align-items-center\" }\nconst _hoisted_12 = [\"onUpdate:modelValue\"]\nconst _hoisted_13 = [\"onClick\"]\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", { class: \"icon icon-sm\" }, [\n  /*#__PURE__*/_createElementVNode(\"use\", { href: \"#icon-close\" })\n], -1 /* HOISTED */))\nconst _hoisted_15 = [\n  _hoisted_14\n]\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"p\", _hoisted_1, _toDisplayString($setup.help_message), 1 /* TEXT */),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.__(\"Column\")), 1 /* TEXT */),\n      _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.__(\"Width\")) + \" (\" + _toDisplayString(_ctx.__(\"Total:\")) + \" \" + _toDisplayString($setup.total_width) + \") \", 1 /* TEXT */)\n    ]),\n    _createVNode($setup[\"draggable\"], {\n      list: $props.df.table_columns,\n      animation: 200,\n      group: $props.df.fieldname,\n      handle: \".icon-drag\"\n    }, {\n      item: _withCtx(({ element }) => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.df.table_columns, (column) => {\n          return (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", _hoisted_7, [\n                _hoisted_8,\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    class: _normalizeClass([\"input-column-label\", { 'text-danger': column.invalid_width }]),\n                    type: \"text\",\n                    \"onUpdate:modelValue\": $event => ((column.label) = $event)\n                  }, null, 10 /* CLASS, PROPS */, _hoisted_10), [\n                    [_vModelText, column.label]\n                  ])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_11, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"number\",\n                class: _normalizeClass([\"text-right form-control\", { 'text-danger is-invalid': column.invalid_width }]),\n                \"onUpdate:modelValue\": $event => ((column.width) = $event),\n                min: \"0\",\n                max: \"100\",\n                step: \"5\"\n              }, null, 10 /* CLASS, PROPS */, _hoisted_12), [\n                [\n                  _vModelText,\n                  column.width,\n                  void 0,\n                  { number: true }\n                ]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"ml-2 btn btn-xs btn-icon\",\n                onClick: $event => ($setup.remove_column(column))\n              }, _hoisted_15, 8 /* PROPS */, _hoisted_13)\n            ])\n          ]))\n        }), 256 /* UNKEYED_FRAGMENT */))\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"list\", \"group\"])\n  ]))\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/ConfigureColumns.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/ConfigureColumns.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/ConfigureColumns.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/ConfigureColumns.vue\";script.__scopeId = \"data-v-9833c2ed\";export default script;", "<template>\n\t<div class=\"field\" v-show=\"!df.remove\" :title=\"df.fieldname\" @click=\"editing = true\">\n\t\t<div class=\"field-controls\">\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"custom-html\"\n\t\t\t\t\tv-if=\"df.fieldtype == 'HTML' && df.html\"\n\t\t\t\t\tv-html=\"df.html\"\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"custom-html\"\n\t\t\t\t\tv-if=\"df.fieldtype == 'Field Template'\"\n\t\t\t\t>\n\t\t\t\t\t{{ df.label }}\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tv-else-if=\"editing && df.fieldtype != 'HTML'\"\n\t\t\t\t\tref=\"label_input\"\n\t\t\t\t\tclass=\"label-input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"__('Label')\"\n\t\t\t\t\tv-model=\"df.label\"\n\t\t\t\t\t@keydown.enter=\"editing = false\"\n\t\t\t\t\t@blur=\"editing = false\"\n\t\t\t\t/>\n\t\t\t\t<span v-else-if=\"df.label\">{{ df.label }}</span>\n\t\t\t\t<i class=\"text-muted\" v-else>\n\t\t\t\t\t{{ __(\"No Label\") }} ({{ df.fieldname }})\n\t\t\t\t</i>\n\t\t\t</div>\n\t\t\t<div class=\"field-actions\">\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"df.fieldtype == 'HTML'\"\n\t\t\t\t\tclass=\"btn btn-xs btn-icon\"\n\t\t\t\t\t@click=\"edit_html\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t\t<use href=\"#icon-edit\"></use>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"df.fieldtype == 'Table'\"\n\t\t\t\t\tclass=\"btn btn-xs btn-default\"\n\t\t\t\t\t@click=\"configure_columns\"\n\t\t\t\t>\n\t\t\t\t\tConfigure columns\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"btn btn-xs btn-icon\"\n\t\t\t\t\t@click=\"df['remove'] = true\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t\t<use href=\"#icon-close\"></use>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"df.fieldtype == 'Table'\"\n\t\t\tclass=\"table-controls row no-gutters\"\n\t\t\t:style=\"{ opacity: 1 }\"\n\t\t>\n\t\t\t<div\n\t\t\t\tclass=\"table-column\"\n\t\t\t\t:style=\"{ width: tf.width + '%' }\"\n\t\t\t\tv-for=\"(tf, i) in df.table_columns\"\n\t\t\t\t:key=\"tf.fieldname\"\n\t\t\t>\n\t\t\t\t<div class=\"table-field\">\n\t\t\t\t\t{{ tf.label }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport ConfigureColumnsVue from \"./ConfigureColumns.vue\";\nimport { createApp, ref, nextTick, watch } from \"vue\";\n\n// props\nlet props = defineProps([\"df\"]);\n\n// variables\nlet editing = ref(false);\nlet label_input = ref(null);\n\n// methods\nfunction edit_html() {\n\tlet d = new frappe.ui.Dialog({\n\t\ttitle: __(\"Edit HTML\"),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tlabel: __(\"HTML\"),\n\t\t\t\tfieldname: \"html\",\n\t\t\t\tfieldtype: \"Code\",\n\t\t\t\toptions: \"HTML\"\n\t\t\t}\n\t\t],\n\t\tprimary_action: ({ html }) => {\n\t\t\thtml = frappe.dom.remove_script_and_style(html);\n\t\t\tprops.df[\"html\"] = html;\n\t\t\td.hide();\n\t\t}\n\t});\n\td.set_value(\"html\", props.df.html);\n\td.show();\n}\nfunction configure_columns() {\n\tlet dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"Configure columns for {0}\", [props.df.label]),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"columns_area\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"\",\n\t\t\t\tfieldtype: \"Autocomplete\",\n\t\t\t\tplaceholder: __(\"Add Column\"),\n\t\t\t\tfieldname: \"add_column\",\n\t\t\t\toptions: get_all_columns(),\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet fieldname = dialog.get_value(\"add_column\");\n\t\t\t\t\tif (fieldname) {\n\t\t\t\t\t\tlet column = get_column_to_add(fieldname);\n\t\t\t\t\t\tif (column) {\n\t\t\t\t\t\t\tprops.df.table_columns.push(column);\n\t\t\t\t\t\t\tprops.df[\"table_columns\"] = props.df.table_columns;\n\t\t\t\t\t\t\tdialog.set_value(\"add_column\", \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\ton_page_show: () => {\n\t\t\tcreateApp(ConfigureColumnsVue, { df: props.df }).mount(\n\t\t\t\tdialog.get_field(\"columns_area\").$wrapper.get(0)\n\t\t\t);\n\t\t},\n\t\ton_hide: () => {\n\t\t\tprops.df[\"table_columns\"] = props.df.table_columns.filter(col => !col.invalid_width);\n\t\t}\n\t});\n\tdialog.show();\n}\nfunction get_all_columns() {\n\tlet meta = frappe.get_meta(props.df.options);\n\tlet more_columns = [\n\t\t{\n\t\t\tlabel: __(\"Sr No.\"),\n\t\t\tvalue: \"idx\"\n\t\t}\n\t];\n\treturn more_columns.concat(\n\t\tmeta.fields\n\t\t\t.map(tf => {\n\t\t\t\tif (frappe.model.no_value_type.includes(tf.fieldtype)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tlabel: tf.label,\n\t\t\t\t\tvalue: tf.fieldname\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(Boolean)\n\t);\n}\nfunction get_column_to_add(fieldname) {\n\tlet standard_columns = {\n\t\tidx: {\n\t\t\tlabel: __(\"Sr No.\"),\n\t\t\tfieldtype: \"Data\",\n\t\t\tfieldname: \"idx\",\n\t\t\twidth: 10\n\t\t}\n\t};\n\n\tif (fieldname in standard_columns) {\n\t\treturn standard_columns[fieldname];\n\t}\n\n\treturn {\n\t\t...frappe.meta.get_docfield(props.df.options, fieldname),\n\t\twidth: 10\n\t};\n}\nfunction validate_table_columns() {\n\tif (props.df.fieldtype != \"Table\") return;\n\n\tlet columns = props.df.table_columns;\n\tlet total_width = 0;\n\tfor (let column of columns) {\n\t\tif (!column.width) {\n\t\t\tcolumn.width = 10;\n\t\t}\n\t\ttotal_width += column.width;\n\t\tif (total_width > 100) {\n\t\t\tcolumn.invalid_width = true;\n\t\t} else {\n\t\t\tcolumn.invalid_width = false;\n\t\t}\n\t}\n}\n\n// watch\nwatch(editing, (value) => {\n\tif (value) {\n\t\tnextTick(() => label_input.value.focus());\n\t}\n});\nwatch(\n\t() => props.df.table_columns,\n\t() => validate_table_columns(),\n\t{ deep: true }\n);\n\n</script>\n\n<style scoped>\n.field {\n\ttext-align: left;\n\twidth: 100%;\n\tbackground-color: var(--bg-light-gray);\n\tborder-radius: var(--border-radius);\n\tborder: 1px dashed var(--gray-400);\n\tpadding: 0.5rem 0.75rem;\n\tfont-size: var(--text-sm);\n}\n\n.field-controls {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\n.field:not(:first-child) {\n\tmargin-top: 0.5rem;\n}\n\n.custom-html {\n\tpadding-right: var(--padding-xs);\n\tword-break: break-all;\n}\n\n.label-input {\n\tbackground-color: transparent;\n\tborder: none;\n\tpadding: 0;\n}\n\n.label-input:focus {\n\toutline: none;\n}\n\n.field:focus-within {\n\tborder-style: solid;\n\tborder-color: var(--gray-600);\n}\n\n.field-actions {\n\tflex: none;\n}\n\n.field-actions .btn {\n\topacity: 0;\n}\n\n.field-actions .btn-icon {\n\tbox-shadow: none;\n}\n\n.btn-icon {\n\tpadding: 2px;\n}\n\n.btn-icon:hover {\n\tbackground-color: white;\n}\n\n.field:hover .btn {\n\topacity: 1;\n}\n\n.table-controls {\n\tdisplay: flex;\n\tmargin-top: 1rem;\n}\n\n.table-column {\n\tposition: relative;\n}\n\n.table-field {\n\ttext-align: left;\n\twidth: 100%;\n\tbackground-color: white;\n\tborder-radius: var(--border-radius);\n\tborder: 1px dashed var(--gray-400);\n\tpadding: 0.5rem 0.75rem;\n\tfont-size: var(--text-sm);\n\tuser-select: none;\n\twhite-space: nowrap;\n\toverflow: hidden;\n}\n\n.column-resize {\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\twidth: 6px;\n\tborder-radius: 2px;\n\theight: 80%;\n\tbackground-color: var(--gray-600);\n\ttransform: translate(50%, 10%);\n\tz-index: 999;\n\tcursor: col-resize;\n}\n\n.column-resize-actions {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding-right: 0.25rem;\n}\n\n.column-resize-actions .btn-icon {\n\tbackground: white;\n}\n.column-resize-actions .btn-icon:hover {\n\tbackground: var(--bg-light-gray);\n}\n\n.columns-input {\n\tpadding: var(--padding-sm);\n}\n</style>\n", "import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, vShow as _vShow, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e9059e06\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"title\"]\nconst _hoisted_2 = { class: \"field-controls\" }\nconst _hoisted_3 = [\"innerHTML\"]\nconst _hoisted_4 = {\n  key: 1,\n  class: \"custom-html\"\n}\nconst _hoisted_5 = [\"placeholder\"]\nconst _hoisted_6 = { key: 3 }\nconst _hoisted_7 = {\n  key: 4,\n  class: \"text-muted\"\n}\nconst _hoisted_8 = { class: \"field-actions\" }\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", { class: \"icon icon-sm\" }, [\n  /*#__PURE__*/_createElementVNode(\"use\", { href: \"#icon-edit\" })\n], -1 /* HOISTED */))\nconst _hoisted_10 = [\n  _hoisted_9\n]\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", { class: \"icon icon-sm\" }, [\n  /*#__PURE__*/_createElementVNode(\"use\", { href: \"#icon-close\" })\n], -1 /* HOISTED */))\nconst _hoisted_12 = [\n  _hoisted_11\n]\nconst _hoisted_13 = {\n  key: 0,\n  class: \"table-controls row no-gutters\",\n  style: { opacity: 1 }\n}\nconst _hoisted_14 = { class: \"table-field\" }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n    class: \"field\",\n    title: $props.df.fieldname,\n    onClick: _cache[4] || (_cache[4] = $event => ($setup.editing = true))\n  }, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", null, [\n        ($props.df.fieldtype == 'HTML' && $props.df.html)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: \"custom-html\",\n              innerHTML: $props.df.html\n            }, null, 8 /* PROPS */, _hoisted_3))\n          : _createCommentVNode(\"v-if\", true),\n        ($props.df.fieldtype == 'Field Template')\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($props.df.label), 1 /* TEXT */))\n          : ($setup.editing && $props.df.fieldtype != 'HTML')\n            ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                key: 2,\n                ref: \"label_input\",\n                class: \"label-input\",\n                type: \"text\",\n                placeholder: _ctx.__('Label'),\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($props.df.label) = $event)),\n                onKeydown: _cache[1] || (_cache[1] = _withKeys($event => ($setup.editing = false), [\"enter\"])),\n                onBlur: _cache[2] || (_cache[2] = $event => ($setup.editing = false))\n              }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5)), [\n                [_vModelText, $props.df.label]\n              ])\n            : ($props.df.label)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString($props.df.label), 1 /* TEXT */))\n              : (_openBlock(), _createElementBlock(\"i\", _hoisted_7, _toDisplayString(_ctx.__(\"No Label\")) + \" (\" + _toDisplayString($props.df.fieldname) + \") \", 1 /* TEXT */))\n      ]),\n      _createElementVNode(\"div\", _hoisted_8, [\n        ($props.df.fieldtype == 'HTML')\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              class: \"btn btn-xs btn-icon\",\n              onClick: $setup.edit_html\n            }, _hoisted_10))\n          : _createCommentVNode(\"v-if\", true),\n        ($props.df.fieldtype == 'Table')\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"btn btn-xs btn-default\",\n              onClick: $setup.configure_columns\n            }, \" Configure columns \"))\n          : _createCommentVNode(\"v-if\", true),\n        _createElementVNode(\"button\", {\n          class: \"btn btn-xs btn-icon\",\n          onClick: _cache[3] || (_cache[3] = $event => ($props.df['remove'] = true))\n        }, _hoisted_12)\n      ])\n    ]),\n    ($props.df.fieldtype == 'Table')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.df.table_columns, (tf, i) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              class: \"table-column\",\n              style: _normalizeStyle({ width: tf.width + '%' }),\n              key: tf.fieldname\n            }, [\n              _createElementVNode(\"div\", _hoisted_14, _toDisplayString(tf.label), 1 /* TEXT */)\n            ], 4 /* STYLE */))\n          }), 128 /* KEYED_FRAGMENT */))\n        ]))\n      : _createCommentVNode(\"v-if\", true)\n  ], 8 /* PROPS */, _hoisted_1)), [\n    [_vShow, !$props.df.remove]\n  ])\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Field.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Field.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Field.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/Field.vue\";script.__scopeId = \"data-v-e9059e06\";export default script;", "import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createVNode as _createVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d8d8ecc4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"print-format-section-container\"\n}\nconst _hoisted_2 = { class: \"print-format-section\" }\nconst _hoisted_3 = { class: \"section-header\" }\nconst _hoisted_4 = [\"placeholder\"]\nconst _hoisted_5 = { class: \"d-flex align-items-center\" }\nconst _hoisted_6 = [\"title\"]\nconst _hoisted_7 = { class: \"dropdown\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-xs btn-section dropdown-button\",\n  \"data-toggle\": \"dropdown\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"svg\", { class: \"icon icon-sm\" }, [\n    /*#__PURE__*/_createElementVNode(\"use\", { href: \"#icon-dot-horizontal\" })\n  ])\n], -1 /* HOISTED */))\nconst _hoisted_9 = {\n  class: \"dropdown-menu dropdown-menu-right\",\n  role: \"menu\"\n}\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = { class: \"row section-columns\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"my-4 text-center text-muted font-italic\"\n}\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (!$props.section.remove)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-section-label w-50\",\n              type: \"text\",\n              placeholder: _ctx.__('Section Title'),\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($props.section.label) = $event))\n            }, null, 8 /* PROPS */, _hoisted_4), [\n              [_vModelText, $props.section.label]\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n              ($props.section.field_orientation == 'left-right')\n                ? (_openBlock(), _createElementBlock(\"div\", {\n                    key: 0,\n                    class: \"mr-2 text-small text-muted d-flex\",\n                    title: \n\t\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\t\t_ctx.__('Render labels to the left and values to the right in this section')\n\t\t\t\t\t\t\n                  }, \" Label \u2192 Value \", 8 /* PROPS */, _hoisted_6))\n                : _createCommentVNode(\"v-if\", true),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _hoisted_8,\n                _createElementVNode(\"div\", _hoisted_9, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.section_options, (option) => {\n                    return (_openBlock(), _createElementBlock(\"button\", {\n                      class: \"dropdown-item\",\n                      onClick: option.action\n                    }, _toDisplayString(option.label), 9 /* TEXT, PROPS */, _hoisted_10))\n                  }), 256 /* UNKEYED_FRAGMENT */))\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_11, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.section.columns, (column, i) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                class: \"column col\",\n                key: i\n              }, [\n                _createVNode($setup[\"draggable\"], {\n                  class: \"drag-container\",\n                  style: _normalizeStyle({\n\t\t\t\t\t\t\tbackgroundColor: column.fields.length\n\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t: 'var(--gray-50)'\n\t\t\t\t\t\t}),\n                  modelValue: column.fields,\n                  \"onUpdate:modelValue\": $event => ((column.fields) = $event),\n                  group: \"fields\",\n                  animation: 150,\n                  \"item-key\": \"id\"\n                }, {\n                  item: _withCtx(({ element }) => [\n                    _createVNode($setup[\"Field\"], { df: element }, null, 8 /* PROPS */, [\"df\"])\n                  ]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"style\", \"modelValue\", \"onUpdate:modelValue\"])\n              ]))\n            }), 128 /* KEYED_FRAGMENT */))\n          ])\n        ]),\n        ($props.section.page_break)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString(_ctx.__(\"Page Break\")), 1 /* TEXT */))\n          : _createCommentVNode(\"v-if\", true)\n      ]))\n    : _createCommentVNode(\"v-if\", true)\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatSection.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatSection.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatSection.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/PrintFormatSection.vue\";script.__scopeId = \"data-v-d8d8ecc4\";export default script;", "import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"print-format-main\",\n    style: _normalizeStyle($setup.rootStyles)\n  }, [\n    _createElementVNode(\"div\", {\n      style: _normalizeStyle($setup.page_number_style)\n    }, _toDisplayString(_ctx.__(\"1 of 2\")), 5 /* TEXT, STYLE */),\n    _createVNode($setup[\"LetterHeadEditor\"], { type: \"Header\" }),\n    _createVNode($setup[\"HTMLEditor\"], {\n      value: $setup.layout.header,\n      onChange: _cache[0] || (_cache[0] = $event => ($setup.layout.header = $event)),\n      \"button-label\": _ctx.__('Edit Header')\n    }, null, 8 /* PROPS */, [\"value\", \"button-label\"]),\n    _createVNode($setup[\"draggable\"], {\n      class: \"mb-4\",\n      modelValue: $setup.layout.sections,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (($setup.layout.sections) = $event)),\n      group: \"sections\",\n      filter: \".section-columns, .column, .field\",\n      animation: 200,\n      \"item-key\": \"id\"\n    }, {\n      item: _withCtx(({ element }) => [\n        _createVNode($setup[\"PrintFormatSection\"], {\n          section: element,\n          onAdd_section_above: $event => ($setup.add_section_above(element))\n        }, null, 8 /* PROPS */, [\"section\", \"onAdd_section_above\"])\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]),\n    _createVNode($setup[\"HTMLEditor\"], {\n      value: $setup.layout.footer,\n      onChange: _cache[2] || (_cache[2] = $event => ($setup.layout.footer = $event)),\n      \"button-label\": _ctx.__('Edit Footer')\n    }, null, 8 /* PROPS */, [\"value\", \"button-label\"]),\n    ($setup.letterhead)\n      ? (_openBlock(), _createBlock($setup[\"HTMLEditor\"], {\n          key: 0,\n          value: $setup.letterhead.footer,\n          onChange: $setup.update_letterhead_footer,\n          \"button-label\": _ctx.__('Edit Letter Head Footer')\n        }, null, 8 /* PROPS */, [\"value\", \"button-label\"]))\n      : _createCommentVNode(\"v-if\", true)\n  ], 4 /* STYLE */))\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormat.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormat.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormat.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/PrintFormat.vue\";script.__scopeId = \"data-v-06307895\";export default script;", "<template>\n\t<div class=\"h-100\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col\">\n\t\t\t\t<div class=\"preview-control\" ref=\"doc_select_ref\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"col\">\n\t\t\t\t<div class=\"preview-control\" ref=\"preview_type_ref\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"col d-flex\">\n\t\t\t\t<a\n\t\t\t\t\tv-if=\"url\"\n\t\t\t\t\tclass=\"btn btn-default btn-sm btn-new-tab\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t:href=\"url\"\n\t\t\t\t>\n\t\t\t\t\t{{ __(\"Open in a new tab\") }}\n\t\t\t\t</a>\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"url\"\n\t\t\t\t\tclass=\"ml-3 btn btn-default btn-sm btn-new-tab\"\n\t\t\t\t\t@click=\"refresh\"\n\t\t\t\t>\n\t\t\t\t\t{{ __(\"Refresh\") }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-if=\"url && !preview_loaded\">Generating preview...</div>\n\t\t<iframe\n\t\t\tref=\"iframe\"\n\t\t\t:src=\"url\"\n\t\t\tv-if=\"url\"\n\t\t\tv-show=\"preview_loaded\"\n\t\t\tclass=\"preview-iframe\"\n\t\t\t@load=\"preview_loaded = true\"\n\t\t></iframe>\n\t</div>\n</template>\n\n<script setup>\nimport { useStore } from \"./store\";\nimport { ref, computed, onMounted } from \"vue\";\n\n// mixin\nlet { print_format, store } = useStore();\n\n// variables\nlet type = ref(\"PDF\");\nlet docname = ref(null);\nlet preview_loaded = ref(false);\nlet iframe = ref(null);\nlet doc_select_ref = ref(null);\nlet preview_type_ref = ref(null);\nlet doc_select = ref(null);\nlet preview_type = ref(null);\n\n// methods\nfunction refresh() {\n\tiframe.value?.contentWindow.location.reload();\n}\nfunction get_default_docname() {\n\treturn frappe.db.get_list(doctype.value, { limit: 1 }).then(doc => {\n\t\treturn doc.length > 0 ? doc[0].name : null;\n\t});\n}\n// computed\nlet doctype = computed(() => {\n\treturn print_format.value.doc_type;\n});\nlet url = computed(() => {\n\tif (!docname.value) return null;\n\tlet params = new URLSearchParams();\n\tparams.append(\"doctype\", doctype.value);\n\tparams.append(\"name\", docname.value);\n\tparams.append(\"print_format\", print_format.value.name);\n\n\tif (store.value.letterhead) {\n\t\tparams.append(\"letterhead\", store.value.letterhead.name);\n\t}\n\tlet _url =\n\t\ttype.value == \"PDF\"\n\t\t\t? `/api/method/frappe.utils.weasyprint.download_pdf`\n\t\t\t: \"/printpreview\";\n\treturn `${_url}?${params.toString()}`;\n});\n\n// mounted\nonMounted(() => {\n\tdoc_select.value = frappe.ui.form.make_control({\n\t\tparent: doc_select_ref.value,\n\t\tdf: {\n\t\t\tlabel: __(\"Select {0}\", [__(doctype.value)]),\n\t\t\tfieldname: \"docname\",\n\t\t\tfieldtype: \"Link\",\n\t\t\toptions: doctype.value,\n\t\t\tchange: () => {\n\t\t\t\tdocname.value = doc_select.value.get_value();\n\t\t\t}\n\t\t},\n\t\trender_input: true\n\t});\n\tpreview_type.value = frappe.ui.form.make_control({\n\t\tparent: preview_type_ref.value,\n\t\tdf: {\n\t\t\tlabel: __(\"Preview type\"),\n\t\t\tfieldname: \"docname\",\n\t\t\tfieldtype: \"Select\",\n\t\t\toptions: [\"PDF\", \"HTML\"],\n\t\t\tchange: () => {\n\t\t\t\ttype.value = preview_type.value.get_value();\n\t\t\t}\n\t\t},\n\t\trender_input: true\n\t});\n\tpreview_type.value.set_value(type.value);\n\tget_default_docname().then(doc_name => {\n\t\tdoc_name && doc_select.value.set_value(doc_name);\n\t});\n});\n</script>\n\n<style scoped>\n.preview-iframe {\n\twidth: 100%;\n\theight: 96%;\n\tborder: none;\n\tborder-radius: var(--border-radius);\n}\n.btn-new-tab {\n\tmargin-top: auto;\n\tmargin-bottom: 1.2rem;\n}\n.preview-control >>> .form-control {\n\tbackground: var(--control-bg-on-gray);\n}\n</style>\n", "import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c2b5a26a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"h-100\" }\nconst _hoisted_2 = { class: \"row\" }\nconst _hoisted_3 = { class: \"col\" }\nconst _hoisted_4 = {\n  class: \"preview-control\",\n  ref: \"doc_select_ref\"\n}\nconst _hoisted_5 = { class: \"col\" }\nconst _hoisted_6 = {\n  class: \"preview-control\",\n  ref: \"preview_type_ref\"\n}\nconst _hoisted_7 = { class: \"col d-flex\" }\nconst _hoisted_8 = [\"href\"]\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = [\"src\"]\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */)\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        ($setup.url)\n          ? (_openBlock(), _createElementBlock(\"a\", {\n              key: 0,\n              class: \"btn btn-default btn-sm btn-new-tab\",\n              target: \"_blank\",\n              href: $setup.url\n            }, _toDisplayString(_ctx.__(\"Open in a new tab\")), 9 /* TEXT, PROPS */, _hoisted_8))\n          : _createCommentVNode(\"v-if\", true),\n        ($setup.url)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"ml-3 btn btn-default btn-sm btn-new-tab\",\n              onClick: $setup.refresh\n            }, _toDisplayString(_ctx.__(\"Refresh\")), 1 /* TEXT */))\n          : _createCommentVNode(\"v-if\", true)\n      ])\n    ]),\n    ($setup.url && !$setup.preview_loaded)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"Generating preview...\"))\n      : _createCommentVNode(\"v-if\", true),\n    ($setup.url)\n      ? _withDirectives((_openBlock(), _createElementBlock(\"iframe\", {\n          key: 1,\n          ref: \"iframe\",\n          src: $setup.url,\n          class: \"preview-iframe\",\n          onLoad: _cache[0] || (_cache[0] = $event => ($setup.preview_loaded = true))\n        }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_10)), [\n          [_vShow, $setup.preview_loaded]\n        ])\n      : _createCommentVNode(\"v-if\", true)\n  ]))\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Preview.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Preview.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/Preview.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/Preview.vue\";script.__scopeId = \"data-v-c2b5a26a\";export default script;", "<template>\n\t<div class=\"layout-side-section\">\n\t\t<div class=\"form-sidebar\">\n\t\t\t<div class=\"sidebar-menu\">\n\t\t\t\t<div class=\"sidebar-label\">{{ __(\"Page Margins\") }}</div>\n\t\t\t\t<div class=\"margin-controls\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"form-group\"\n\t\t\t\t\t\tv-for=\"df in margins\"\n\t\t\t\t\t\t:key=\"df.fieldname\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t\t\t<label class=\"control-label\">\n\t\t\t\t\t\t\t\t{{ df.label }}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t\t\t\t<div class=\"control-input\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tclass=\"form-control form-control-sm\"\n\t\t\t\t\t\t\t\t\t:value=\"print_format[df.fieldname]\"\n\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\t@change=\"\n\t\t\t\t\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t\t\t\t\tupdate_margin(\n\t\t\t\t\t\t\t\t\t\t\t\tdf.fieldname,\n\t\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"sidebar-menu\">\n\t\t\t\t<div class=\"sidebar-label\">{{ __(\"Google Font\") }}</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t\t\t<div class=\"control-input\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclass=\"form-control form-control-sm\"\n\t\t\t\t\t\t\t\tv-model=\"print_format.font\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\tv-for=\"font in google_fonts\"\n\t\t\t\t\t\t\t\t\t:value=\"font\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{ font }}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"sidebar-menu\">\n\t\t\t\t<div class=\"sidebar-label\">{{ __(\"Font Size\") }}</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t\t\t<div class=\"control-input\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclass=\"form-control form-control-sm\"\n\t\t\t\t\t\t\t\tplaceholder=\"12, 13, 14\"\n\t\t\t\t\t\t\t\t:value=\"print_format.font_size\"\n\t\t\t\t\t\t\t\t@change=\"\n\t\t\t\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t\t\t\t(print_format.font_size = parseFloat(\n\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"sidebar-menu\">\n\t\t\t\t<div class=\"sidebar-label\">{{ __(\"Page Number\") }}</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t\t\t<div class=\"control-input\">\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclass=\"form-control form-control-sm\"\n\t\t\t\t\t\t\t\tv-model=\"print_format.page_number\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\tv-for=\"position in page_number_positions\"\n\t\t\t\t\t\t\t\t\t:value=\"position.value\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{ position.label }}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"sidebar-menu\">\n\t\t\t\t<div class=\"sidebar-label\">{{ __(\"Fields\") }}</div>\n\t\t\t\t<input\n\t\t\t\t\tclass=\"mb-2 form-control form-control-sm\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"__('Search fields')\"\n\t\t\t\t\tv-model=\"search_text\"\n\t\t\t\t/>\n\t\t\t\t<draggable\n\t\t\t\t\tclass=\"fields-container\"\n\t\t\t\t\t:list=\"fields\"\n\t\t\t\t\t:group=\"{ name: 'fields', pull: 'clone', put: false }\"\n\t\t\t\t\t:sort=\"false\"\n\t\t\t\t\t:clone=\"clone_field\"\n\t\t\t\t\titem-key=\"id\"\n\t\t\t\t>\n\t\t\t\t\t<template #item=\"{ element }\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"field\"\n\t\t\t\t\t\t\t:title=\"element.fieldname\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ element.label }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</draggable>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport draggable from \"vuedraggable\";\nimport { get_table_columns, pluck } from \"./utils\";\nimport { useStore } from \"./store\";\nimport { computed, onMounted, ref, watch, inject } from \"vue\";\n\n// variables\nlet search_text = ref(\"\");\nlet google_fonts = ref([]);\n\n// inject\nlet store = inject(\"$store\");\n\n// mixins\nlet { meta, print_format } = useStore();\n\n// methods\nfunction update_margin(fieldname, value) {\n\tvalue = parseFloat(value);\n\tif (value < 0) {\n\t\tvalue = 0;\n\t}\n\tprint_format.value[fieldname] = value;\n}\nfunction clone_field(df) {\n\tlet cloned = pluck(df, [\n\t\t\"label\",\n\t\t\"fieldname\",\n\t\t\"fieldtype\",\n\t\t\"options\",\n\t\t\"table_columns\",\n\t\t\"html\",\n\t\t\"field_template\"\n\t]);\n\tif (cloned.custom) {\n\t\t// generate unique fieldnames for custom blocks\n\t\tcloned.fieldname += \"_\" + frappe.utils.get_random(8);\n\t}\n\treturn cloned;\n}\n\n// computed\nlet margins = computed(() => {\n\treturn [\n\t\t{ label: __(\"Top\"), fieldname: \"margin_top\" },\n\t\t{ label: __(\"Bottom\"), fieldname: \"margin_bottom\" },\n\t\t{ label: __(\"Left\", null, 'alignment'), fieldname: \"margin_left\" },\n\t\t{ label: __(\"Right\", null, 'alignment'), fieldname: \"margin_right\" }\n\t];\n});\nlet fields = computed(() => {\n\tlet fields = meta.value.fields\n\t\t.filter(df => {\n\t\t\tif (\n\t\t\t\t[\"Section Break\", \"Column Break\"].includes(df.fieldtype)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (search_text.value) {\n\t\t\t\tif (df.fieldname.includes(search_text.value)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (df.label && df.label.includes(search_text.value)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t\t.map(df => {\n\t\t\tlet out = {\n\t\t\t\tlabel: df.label,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tfieldtype: df.fieldtype,\n\t\t\t\toptions: df.options\n\t\t\t};\n\t\t\tif (df.fieldtype == \"Table\") {\n\t\t\t\tout.table_columns = get_table_columns(df);\n\t\t\t}\n\t\t\treturn out;\n\t\t});\n\n\treturn [\n\t\t{\n\t\t\tlabel: __(\"Custom HTML\"),\n\t\t\tfieldname: \"custom_html\",\n\t\t\tfieldtype: \"HTML\",\n\t\t\thtml: \"\",\n\t\t\tcustom: 1\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"ID (name)\"),\n\t\t\tfieldname: \"name\",\n\t\t\tfieldtype: \"Data\"\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Spacer\"),\n\t\t\tfieldname: \"spacer\",\n\t\t\tfieldtype: \"Spacer\",\n\t\t\tcustom: 1\n\t\t},\n\t\t{\n\t\t\tlabel: __(\"Divider\"),\n\t\t\tfieldname: \"divider\",\n\t\t\tfieldtype: \"Divider\",\n\t\t\tcustom: 1\n\t\t},\n\t\t...print_templates.value,\n\t\t...fields\n\t];\n});\nlet print_templates = computed(() => {\n\tlet templates = print_format.value.__onload.print_templates || {};\n\tlet out = [];\n\tfor (let template of templates) {\n\t\tlet df;\n\t\tif (template.field) {\n\t\t\tdf = frappe.meta.get_docfield(\n\t\t\t\tmeta.value.name,\n\t\t\t\ttemplate.field\n\t\t\t);\n\t\t} else {\n\t\t\tdf = {\n\t\t\t\tlabel: template.name,\n\t\t\t\tfieldname: frappe.scrub(template.name)\n\t\t\t};\n\t\t}\n\t\tout.push({\n\t\t\tlabel: `${__(df.label)} (${__(\"Field Template\")})`,\n\t\t\tfieldname: df.fieldname + \"_template\",\n\t\t\tfieldtype: \"Field Template\",\n\t\t\tfield_template: template.name\n\t\t});\n\t}\n\treturn out;\n});\nlet page_number_positions = computed(() => {\n\treturn [\n\t\t{ label: __(\"Hide\"), value: \"Hide\" },\n\t\t{ label: __(\"Top Left\"), value: \"Top Left\" },\n\t\t{ label: __(\"Top Center\"), value: \"Top Center\" },\n\t\t{ label: __(\"Top Right\"), value: \"Top Right\" },\n\t\t{ label: __(\"Bottom Left\"), value: \"Bottom Left\" },\n\t\t{ label: __(\"Bottom Center\"), value: \"Bottom Center\" },\n\t\t{ label: __(\"Bottom Right\"), value: \"Bottom Right\" }\n\t];\n});\n\n// mounted\nonMounted(() => {\n\tlet method =\n\t\t\"frappe.printing.page.print_format_builder_beta.print_format_builder_beta.get_google_fonts\";\n\tfrappe.call(method).then(r => {\n\t\tgoogle_fonts.value = r.message || [];\n\t\tif (!google_fonts.value.includes(print_format.value.font)) {\n\t\t\tgoogle_fonts.value.push(print_format.value.font);\n\t\t}\n\t});\n});\n\nwatch(print_format, () => (store.dirty.value = true), { deep: true });\n</script>\n\n<style scoped>\n.margin-controls {\n\tdisplay: flex;\n}\n\n.form-control {\n\tbackground: var(--control-bg-on-gray);\n}\n\n.margin-controls > .form-group + .form-group {\n\tmargin-left: 0.5rem;\n}\n\n.margin-controls > .form-group {\n\tmargin-bottom: 0;\n}\n\n.fields-container {\n\tmax-height: calc(100vh - 34rem);\n\toverflow-y: auto;\n}\n\n.field {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\twidth: 100%;\n\tbackground-color: var(--bg-light-gray);\n\tborder-radius: var(--border-radius);\n\tborder: 1px dashed var(--gray-400);\n\tpadding: 0.5rem 0.75rem;\n\tfont-size: var(--text-sm);\n\tcursor: pointer;\n}\n\n.field:not(:first-child) {\n\tmargin-top: 0.5rem;\n}\n\n.sidebar-menu:last-child {\n\tmargin-bottom: 0;\n}\n\n.control-font >>> .frappe-control[data-fieldname=\"font\"] label {\n\tdisplay: none;\n}\n</style>\n", "import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0e7c255b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"layout-side-section\" }\nconst _hoisted_2 = { class: \"form-sidebar\" }\nconst _hoisted_3 = { class: \"sidebar-menu\" }\nconst _hoisted_4 = { class: \"sidebar-label\" }\nconst _hoisted_5 = { class: \"margin-controls\" }\nconst _hoisted_6 = { class: \"clearfix\" }\nconst _hoisted_7 = { class: \"control-label\" }\nconst _hoisted_8 = { class: \"control-input-wrapper\" }\nconst _hoisted_9 = { class: \"control-input\" }\nconst _hoisted_10 = [\"value\", \"onChange\"]\nconst _hoisted_11 = { class: \"sidebar-menu\" }\nconst _hoisted_12 = { class: \"sidebar-label\" }\nconst _hoisted_13 = { class: \"form-group\" }\nconst _hoisted_14 = { class: \"control-input-wrapper\" }\nconst _hoisted_15 = { class: \"control-input\" }\nconst _hoisted_16 = [\"value\"]\nconst _hoisted_17 = { class: \"sidebar-menu\" }\nconst _hoisted_18 = { class: \"sidebar-label\" }\nconst _hoisted_19 = { class: \"form-group\" }\nconst _hoisted_20 = { class: \"control-input-wrapper\" }\nconst _hoisted_21 = { class: \"control-input\" }\nconst _hoisted_22 = [\"value\"]\nconst _hoisted_23 = { class: \"sidebar-menu\" }\nconst _hoisted_24 = { class: \"sidebar-label\" }\nconst _hoisted_25 = { class: \"form-group\" }\nconst _hoisted_26 = { class: \"control-input-wrapper\" }\nconst _hoisted_27 = { class: \"control-input\" }\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = { class: \"sidebar-menu\" }\nconst _hoisted_30 = { class: \"sidebar-label\" }\nconst _hoisted_31 = [\"placeholder\"]\nconst _hoisted_32 = [\"title\"]\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.__(\"Page Margins\")), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.margins, (df) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              class: \"form-group\",\n              key: df.fieldname\n            }, [\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"label\", _hoisted_7, _toDisplayString(df.label), 1 /* TEXT */)\n              ]),\n              _createElementVNode(\"div\", _hoisted_8, [\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"input\", {\n                    type: \"number\",\n                    class: \"form-control form-control-sm\",\n                    value: $setup.print_format[df.fieldname],\n                    min: \"0\",\n                    onChange: \n\t\t\t\t\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t\t\t\t\t$setup.update_margin(\n\t\t\t\t\t\t\t\t\t\t\t\tdf.fieldname,\n\t\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\n                  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_10)\n                ])\n              ])\n            ]))\n          }), 128 /* KEYED_FRAGMENT */))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_11, [\n        _createElementVNode(\"div\", _hoisted_12, _toDisplayString(_ctx.__(\"Google Font\")), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_13, [\n          _createElementVNode(\"div\", _hoisted_14, [\n            _createElementVNode(\"div\", _hoisted_15, [\n              _withDirectives(_createElementVNode(\"select\", {\n                class: \"form-control form-control-sm\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($setup.print_format.font) = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.google_fonts, (font) => {\n                  return (_openBlock(), _createElementBlock(\"option\", { value: font }, _toDisplayString(font), 9 /* TEXT, PROPS */, _hoisted_16))\n                }), 256 /* UNKEYED_FRAGMENT */))\n              ], 512 /* NEED_PATCH */), [\n                [_vModelSelect, $setup.print_format.font]\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createElementVNode(\"div\", _hoisted_18, _toDisplayString(_ctx.__(\"Font Size\")), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_19, [\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", _hoisted_21, [\n              _createElementVNode(\"input\", {\n                type: \"number\",\n                class: \"form-control form-control-sm\",\n                placeholder: \"12, 13, 14\",\n                value: $setup.print_format.font_size,\n                onChange: _cache[1] || (_cache[1] = \n\t\t\t\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t\t\t\t($setup.print_format.font_size = parseFloat(\n\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t)\n              }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_22)\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_23, [\n        _createElementVNode(\"div\", _hoisted_24, _toDisplayString(_ctx.__(\"Page Number\")), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_25, [\n          _createElementVNode(\"div\", _hoisted_26, [\n            _createElementVNode(\"div\", _hoisted_27, [\n              _withDirectives(_createElementVNode(\"select\", {\n                class: \"form-control form-control-sm\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => (($setup.print_format.page_number) = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.page_number_positions, (position) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    value: position.value\n                  }, _toDisplayString(position.label), 9 /* TEXT, PROPS */, _hoisted_28))\n                }), 256 /* UNKEYED_FRAGMENT */))\n              ], 512 /* NEED_PATCH */), [\n                [_vModelSelect, $setup.print_format.page_number]\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_29, [\n        _createElementVNode(\"div\", _hoisted_30, _toDisplayString(_ctx.__(\"Fields\")), 1 /* TEXT */),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"mb-2 form-control form-control-sm\",\n          type: \"text\",\n          placeholder: _ctx.__('Search fields'),\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => (($setup.search_text) = $event))\n        }, null, 8 /* PROPS */, _hoisted_31), [\n          [_vModelText, $setup.search_text]\n        ]),\n        _createVNode($setup[\"draggable\"], {\n          class: \"fields-container\",\n          list: $setup.fields,\n          group: { name: 'fields', pull: 'clone', put: false },\n          sort: false,\n          clone: $setup.clone_field,\n          \"item-key\": \"id\"\n        }, {\n          item: _withCtx(({ element }) => [\n            _createElementVNode(\"div\", {\n              class: \"field\",\n              title: element.fieldname\n            }, _toDisplayString(element.label), 9 /* TEXT, PROPS */, _hoisted_32)\n          ]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"list\"])\n      ])\n    ])\n  ]))\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatControls.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatControls.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatControls.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/PrintFormatControls.vue\";script.__scopeId = \"data-v-0e7c255b\";export default script;", "<template>\n\t<div class=\"layout-main-section row\" v-if=\"shouldRender\">\n\t\t<div class=\"col-3\">\n\t\t\t<PrintFormatControls />\n\t\t</div>\n\t\t<div class=\"print-format-container col-9\">\n\t\t\t<KeepAlive>\n\t\t\t\t<component :is=\"Preview\" v-if=\"show_preview\" />\n\t\t\t\t<component :is=\"PrintFormat\" v-else />\n\t\t\t</KeepAlive>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport PrintFormat from \"./PrintFormat.vue\";\nimport Preview from \"./Preview.vue\";\nimport PrintFormatControls from \"./PrintFormatControls.vue\";\nimport { getStore } from \"./store\";\nimport { computed, ref, onMounted, provide } from \"vue\";\n\n// props\nlet props = defineProps([\"print_format_name\"]);\n\n// variables\nlet show_preview = ref(false);\n\n// computed\nlet $store = computed(() => {\n\treturn getStore(props.print_format_name)\n});\n\nlet shouldRender = computed(() => {\n\treturn Boolean(\n\t\t$store.value.print_format.value &&\n\t\t\t$store.value.meta.value &&\n\t\t\t$store.value.layout.value\n\t);\n});\n\n// provide\nprovide(\"$store\", $store.value);\n\n// methods\nfunction toggle_preview() {\n\tshow_preview.value = !show_preview.value;\n}\n\n// mounted\nonMounted(() => {\n\t$store.value.fetch().then(() => {\n\t\tif (!$store.value.layout.value) {\n\t\t\t$store.value.layout.value = $store.value.get_default_layout();\n\t\t\t$store.value.save_changes();\n\t\t}\n\t});\n});\n\ndefineExpose({ toggle_preview, $store });\n</script>\n\n<style scoped>\n.print-format-container {\n\theight: calc(100vh - 140px);\n\toverflow-y: auto;\n\tpadding-top: 0.5rem;\n\tpadding-bottom: 4rem;\n}\n</style>\n", "import { createVNode as _createVNode, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, KeepAlive as _KeepAlive, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-85a9e34a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"layout-main-section row\"\n}\nconst _hoisted_2 = { class: \"col-3\" }\nconst _hoisted_3 = { class: \"print-format-container col-9\" }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return ($setup.shouldRender)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createVNode($setup[\"PrintFormatControls\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          (_openBlock(), _createBlock(_KeepAlive, null, [\n            ($setup.show_preview)\n              ? (_openBlock(), _createBlock(_resolveDynamicComponent($setup.Preview), { key: 0 }))\n              : (_openBlock(), _createBlock(_resolveDynamicComponent($setup.PrintFormat), { key: 1 }))\n          ], 1024 /* DYNAMIC_SLOTS */))\n        ])\n      ]))\n    : _createCommentVNode(\"v-if\", true)\n}", "import script from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatBuilder.vue?type=script\";import \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatBuilder.vue?type=style&index=0\";import { render } from \"/home/bench/draerp/apps/frappe/frappe/public/js/print_format_builder/PrintFormatBuilder.vue?type=template\"; script.render = render;script.__file = \"frappe/public/js/print_format_builder/PrintFormatBuilder.vue\";script.__scopeId = \"data-v-85a9e34a\";export default script;", "import { createApp } from \"vue\";\nimport PrintFormatBuilderComponent from \"./PrintFormatBuilder.vue\";\n\nclass PrintFormatBuilder {\n\tconstructor({ wrapper, page, print_format }) {\n\t\tthis.$wrapper = $(wrapper);\n\t\tthis.page = page;\n\t\tthis.print_format = print_format;\n\n\t\tthis.page.clear_actions();\n\t\tthis.page.clear_icons();\n\t\tthis.page.clear_custom_actions();\n\n\t\tthis.page.set_title(__(\"Editing {0}\", [this.print_format]));\n\t\tthis.page.set_primary_action(__(\"Save\"), () => {\n\t\t\tthis.$component.$store.save_changes();\n\t\t});\n\t\tlet $toggle_preview_btn = this.page.add_button(__(\"Show Preview\"), () => {\n\t\t\tthis.$component.toggle_preview();\n\t\t});\n\t\tlet $reset_changes_btn = this.page.add_button(__(\"Reset Changes\"), () =>\n\t\t\tthis.$component.$store.reset_changes()\n\t\t);\n\t\tthis.page.add_menu_item(__(\"Edit Print Format\"), () => {\n\t\t\tfrappe.set_route(\"Form\", \"Print Format\", this.print_format);\n\t\t});\n\t\tthis.page.add_menu_item(__(\"Change Print Format\"), () => {\n\t\t\tfrappe.set_route(\"print-format-builder-beta\");\n\t\t});\n\n\t\tlet app = createApp(PrintFormatBuilderComponent, { print_format_name: print_format });\n\t\tSetVueGlobals(app);\n\t\tthis.$component = app.mount(this.$wrapper.get(0));\n\n\t\tthis.$component.$watch(\n\t\t\t\"$store.dirty\",\n\t\t\t(dirty) => {\n\t\t\t\tif (dirty.value) {\n\t\t\t\t\tthis.page.set_indicator(\"Not Saved\", \"orange\");\n\t\t\t\t\t$toggle_preview_btn.hide();\n\t\t\t\t\t$reset_changes_btn.show();\n\t\t\t\t} else {\n\t\t\t\t\tthis.page.clear_indicator();\n\t\t\t\t\t$toggle_preview_btn.show();\n\t\t\t\t\t$reset_changes_btn.hide();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ deep: true }\n\t\t);\n\n\t\tthis.$component.$watch(\"show_preview\", (value) => {\n\t\t\t$toggle_preview_btn.text(value ? __(\"Hide Preview\") : __(\"Show Preview\"));\n\t\t});\n\t}\n}\n\nfrappe.provide(\"frappe.ui\");\nfrappe.ui.PrintFormatBuilder = PrintFormatBuilder;\nexport default PrintFormatBuilder;\n"],
  "mappings": "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AAE,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,IAAG,GAAE,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,I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aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AA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qBAAI,IAAI,QAAQ,OAAO,SAAC,GAAG,GAAJ;AAAA,uBAAU,EAAE,YAAF;cAAV,CAAnB;YAAJ,CAAJ;;;ACTvB,gBAAM,gBAAgB,CAAC,SAAS,OAAO,UAAU,UAAU,KAArC;AACtB,gBAAM,OAAO,CAAC,UAAU,YAAY,QAAQ,UAAU,OAAzC;AACb,gBAAM,SAAS,CAAC,MAAD;AACf,gBAAM,oBAAoB,CAAC,QAAQ,eAAe,IAAxB,EACvB,QAAQ,SAAA,SAAM;AAAA,qBAAI;YAAJ,CADS,EAEvB,IAAI,SAAA,KAAG;AAAA,qBAAA,KAAA,OAAS,GAAT;YAAA,CAFgB;AAI1B,gBAAM,SAAS;cACb;cACA;cACA;YAHa;AAMf,gCAAoB,WAAW;AAC7B,qBAAO,kBAAkB,QAAQ,SAA1B,MAAyC;YACjD;;;ACfD,gBAAM,OAAO,CACX,KACA,QACA,WACA,QACA,WACA,SACA,SACA,KACA,QACA,OACA,OACA,cACA,QACA,MACA,UACA,UACA,WACA,QACA,QACA,OACA,YACA,QACA,YACA,MACA,OACA,WACA,OACA,UACA,OACA,MACA,MACA,MACA,SACA,YACA,cACA,UACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,UACA,UACA,MACA,QACA,KACA,UACA,OACA,SACA,OACA,OACA,SACA,UACA,MACA,QACA,QACA,OACA,QACA,QACA,QACA,YACA,QACA,SACA,OACA,YACA,UACA,MACA,YACA,UACA,UACA,KACA,SACA,WACA,OACA,YACA,KACA,MACA,MACA,MACA,OACA,QACA,KACA,QACA,UACA,WACA,UACA,QACA,SACA,UACA,QACA,UACA,SACA,OACA,WACA,OACA,OACA,SACA,SACA,MACA,YACA,YACA,SACA,MACA,SACA,QACA,SACA,MACA,SACA,KACA,MACA,OACA,SACA,KArHW;AAwHb,+BAAmB,MAAM;AACvB,qBAAO,KAAK,SAAS,IAAd;YACR;AAED,kCAAsB,MAAM;AAC1B,qBAAO,CAAC,oBAAoB,iBAArB,EAAwC,SAAS,IAAjD;YACR;AAED,qCAAyB,OAAO;AAC9B,qBACE,CAA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",
  "names": []
}
